# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class DSRCData:

    _name_  = 'DSRCData'
    _oid_   = [1, 0, 15628, 0, 1]
    
    _obj_ = [
        'Action-Request',
        'Action-Response',
        'ActionType',
        'ApplicationContextMark',
        'ApplicationList',
        'AttributeIdList',
        'AttributeList',
        'Attributes',
        'BeaconID',
        'BroadcastPool',
        'BST',
        'Container',
        'Directory',
        'Dsrc-EID',
        'DSRCApplicationEntityID',
        'Event-Report-Request',
        'Event-Report-Response',
        'EventType',
        'File',
        'FileName',
        'FileType',
        'Get-Request',
        'Get-Response',
        'Initialisation-Request',
        'Initialisation-Response',
        'NamedFile',
        'ObeConfiguration',
        'Profile',
        'Record',
        'ReturnStatus',
        'Set-Request',
        'Set-Response',
        'Time',
        'T-APDUs',
        'VST',
        ]
    _type_ = [
        'Action-Request',
        'Action-Response',
        'ActionType',
        'ApplicationContextMark',
        'ApplicationList',
        'AttributeIdList',
        'AttributeList',
        'Attributes',
        'BeaconID',
        'BroadcastPool',
        'BST',
        'Container',
        'Directory',
        'Dsrc-EID',
        'DSRCApplicationEntityID',
        'Event-Report-Request',
        'Event-Report-Response',
        'EventType',
        'File',
        'FileName',
        'FileType',
        'Get-Request',
        'Get-Response',
        'Initialisation-Request',
        'Initialisation-Response',
        'NamedFile',
        'ObeConfiguration',
        'Profile',
        'Record',
        'ReturnStatus',
        'Set-Request',
        'Set-Response',
        'Time',
        'T-APDUs',
        'VST',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Action-Request >-----#
    Action_Request = SEQ(name='Action-Request', mode=MODE_TYPE)
    _Action_Request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Action_Request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Action_Request_actionType = INT(name='actionType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ActionType')))
    _Action_Request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Action_Request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Action_Request_actionParameter = CHOICE(name='actionParameter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRCData', 'Container')), opt=True)
    _Action_Request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    Action_Request._cont = ASN1Dict([
        ('mode', _Action_Request_mode),
        ('eid', _Action_Request_eid),
        ('actionType', _Action_Request_actionType),
        ('accessCredentials', _Action_Request_accessCredentials),
        ('actionParameter', _Action_Request_actionParameter),
        ('iid', _Action_Request_iid),
        ])
    Action_Request._ext = None
    
    #-----< Action-Response >-----#
    Action_Response = SEQ(name='Action-Response', mode=MODE_TYPE)
    _Action_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Action_Response_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Action_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Action_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    _Action_Response_responseParameter = CHOICE(name='responseParameter', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRCData', 'Container')), opt=True)
    _Action_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ReturnStatus')), opt=True)
    Action_Response._cont = ASN1Dict([
        ('fill', _Action_Response_fill),
        ('eid', _Action_Response_eid),
        ('iid', _Action_Response_iid),
        ('responseParameter', _Action_Response_responseParameter),
        ('ret', _Action_Response_ret),
        ])
    Action_Response._ext = None
    
    #-----< ActionType >-----#
    ActionType = INT(name='ActionType', mode=MODE_TYPE)
    ActionType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< ApplicationContextMark >-----#
    ApplicationContextMark = CHOICE(name='ApplicationContextMark', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'Container')))
    
    #-----< ApplicationList >-----#
    ApplicationList = SEQ_OF(name='ApplicationList', mode=MODE_TYPE)
    _ApplicationList__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __ApplicationList__item__aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'DSRCApplicationEntityID')))
    __ApplicationList__item__eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    __ApplicationList__item__parameter = CHOICE(name='parameter', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRCData', 'ApplicationContextMark')), opt=True)
    _ApplicationList__item_._cont = ASN1Dict([
        ('aid', __ApplicationList__item__aid),
        ('eid', __ApplicationList__item__eid),
        ('parameter', __ApplicationList__item__parameter),
        ])
    _ApplicationList__item_._ext = None
    ApplicationList._cont = _ApplicationList__item_
    ApplicationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< AttributeIdList >-----#
    AttributeIdList = SEQ_OF(name='AttributeIdList', mode=MODE_TYPE)
    _AttributeIdList__item_ = INT(name='_item_', mode=MODE_TYPE)
    _AttributeIdList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    AttributeIdList._cont = _AttributeIdList__item_
    AttributeIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< AttributeList >-----#
    AttributeList = SEQ_OF(name='AttributeList', mode=MODE_TYPE)
    _AttributeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'Attributes')))
    AttributeList._cont = _AttributeList__item_
    AttributeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Attributes >-----#
    Attributes = SEQ(name='Attributes', mode=MODE_TYPE)
    _Attributes_attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Attributes_attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Attributes_attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRCData', 'Container')))
    Attributes._cont = ASN1Dict([
        ('attributeId', _Attributes_attributeId),
        ('attributeValue', _Attributes_attributeValue),
        ])
    Attributes._ext = None
    
    #-----< BeaconID >-----#
    BeaconID = SEQ(name='BeaconID', mode=MODE_TYPE)
    _BeaconID_manufacturerid = INT(name='manufacturerid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeaconID_manufacturerid._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _BeaconID_individualid = INT(name='individualid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeaconID_individualid._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=134217727)], ev=None, er=[])
    BeaconID._cont = ASN1Dict([
        ('manufacturerid', _BeaconID_manufacturerid),
        ('individualid', _BeaconID_individualid),
        ])
    BeaconID._ext = None
    
    #-----< BroadcastPool >-----#
    BroadcastPool = SEQ(name='BroadcastPool', mode=MODE_TYPE)
    _BroadcastPool_directoryvalue = SEQ_OF(name='directoryvalue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Directory')))
    _BroadcastPool_content = SEQ_OF(name='content', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BroadcastPool_content__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'File')))
    _BroadcastPool_content._cont = __BroadcastPool_content__item_
    _BroadcastPool_content._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    BroadcastPool._cont = ASN1Dict([
        ('directoryvalue', _BroadcastPool_directoryvalue),
        ('content', _BroadcastPool_content),
        ])
    BroadcastPool._ext = None
    
    #-----< BST >-----#
    BST = SEQ(name='BST', mode=MODE_TYPE)
    _BST_rsu = SEQ(name='rsu', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'BeaconID')))
    _BST_time = INT(name='time', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Time')))
    _BST_profile = INT(name='profile', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Profile')))
    _BST_mandApplications = SEQ_OF(name='mandApplications', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ApplicationList')))
    _BST_nonmandApplications = SEQ_OF(name='nonmandApplications', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ApplicationList')), opt=True)
    _BST_profileList = SEQ_OF(name='profileList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BST_profileList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'Profile')))
    _BST_profileList._cont = __BST_profileList__item_
    _BST_profileList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    BST._cont = ASN1Dict([
        ('rsu', _BST_rsu),
        ('time', _BST_time),
        ('profile', _BST_profile),
        ('mandApplications', _BST_mandApplications),
        ('nonmandApplications', _BST_nonmandApplications),
        ('profileList', _BST_profileList),
        ])
    BST._ext = None
    
    #-----< Container >-----#
    Container = CHOICE(name='Container', mode=MODE_TYPE)
    _Container_integer = INT(name='integer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Container_bitstring = BIT_STR(name='bitstring', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Container_octetstring = OCT_STR(name='octetstring', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Container_octetstring._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Container_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Container_beaconId = SEQ(name='beaconId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'BeaconID')))
    _Container_t_apdu = CHOICE(name='t-apdu', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'T-APDUs')))
    _Container_dsrcApplicationEntityId = INT(name='dsrcApplicationEntityId', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'DSRCApplicationEntityID')))
    _Container_dsrc_Ase_Id = INT(name='dsrc-Ase-Id', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Container_attrIdList = SEQ_OF(name='attrIdList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'AttributeIdList')))
    _Container_attrList = SEQ_OF(name='attrList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'AttributeList')))
    _Container_broadcastPool = SEQ(name='broadcastPool', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'BroadcastPool')))
    _Container_directory = SEQ_OF(name='directory', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Directory')))
    _Container_file = SEQ_OF(name='file', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'File')))
    _Container_fileType = NULL(name='fileType', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'FileType')))
    _Container_record = CHOICE(name='record', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Record')))
    _Container_time = INT(name='time', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Time')))
    _Container_vector = SEQ_OF(name='vector', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Container_vector__item_ = INT(name='_item_', mode=MODE_TYPE)
    __Container_vector__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Container_vector._cont = __Container_vector__item_
    _Container_vector._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    Container._cont = ASN1Dict([
        ('integer', _Container_integer),
        ('bitstring', _Container_bitstring),
        ('octetstring', _Container_octetstring),
        ('universalString', _Container_universalString),
        ('beaconId', _Container_beaconId),
        ('t-apdu', _Container_t_apdu),
        ('dsrcApplicationEntityId', _Container_dsrcApplicationEntityId),
        ('dsrc-Ase-Id', _Container_dsrc_Ase_Id),
        ('attrIdList', _Container_attrIdList),
        ('attrList', _Container_attrList),
        ('broadcastPool', _Container_broadcastPool),
        ('directory', _Container_directory),
        ('file', _Container_file),
        ('fileType', _Container_fileType),
        ('record', _Container_record),
        ('time', _Container_time),
        ('vector', _Container_vector),
        ])
    Container._ext = []
    
    #-----< Directory >-----#
    Directory = SEQ_OF(name='Directory', mode=MODE_TYPE)
    _Directory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'FileName')))
    Directory._cont = _Directory__item_
    Directory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Dsrc-EID >-----#
    Dsrc_EID = INT(name='Dsrc-EID', mode=MODE_TYPE)
    Dsrc_EID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< DSRCApplicationEntityID >-----#
    DSRCApplicationEntityID = INT(name='DSRCApplicationEntityID', mode=MODE_TYPE)
    DSRCApplicationEntityID._cont = ASN1Dict([('system', 0), ('electronic-fee-collection', 1), ('freight-fleet-management', 2), ('public-transport', 3), ('traffic-traveller-information', 4), ('traffic-control', 5), ('parking-management', 6), ('geographic-road-database', 7), ('medium-range-preinformation', 8), ('man-machine-interface', 9), ('intersystem-interface', 10), ('automatic-vehicle-identification', 11), ('emergency-warning', 12), ('private', 13), ('multi-purpose-payment', 14), ('dsrc-resource-manager', 15), ('after-theft-systems', 16), ('cruise-assist-highway-system', 17), ('multi-purpose-information-system', 18), ('multi-mobile-information-system', 19)])
    DSRCApplicationEntityID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=[], er=[])
    
    #-----< Event-Report-Request >-----#
    Event_Report_Request = SEQ(name='Event-Report-Request', mode=MODE_TYPE)
    _Event_Report_Request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Event_Report_Request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Event_Report_Request_eventType = INT(name='eventType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'EventType')))
    _Event_Report_Request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Event_Report_Request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Event_Report_Request_eventParameter = CHOICE(name='eventParameter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRCData', 'Container')), opt=True)
    _Event_Report_Request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    Event_Report_Request._cont = ASN1Dict([
        ('mode', _Event_Report_Request_mode),
        ('eid', _Event_Report_Request_eid),
        ('eventType', _Event_Report_Request_eventType),
        ('accessCredentials', _Event_Report_Request_accessCredentials),
        ('eventParameter', _Event_Report_Request_eventParameter),
        ('iid', _Event_Report_Request_iid),
        ])
    Event_Report_Request._ext = None
    
    #-----< Event-Report-Response >-----#
    Event_Report_Response = SEQ(name='Event-Report-Response', mode=MODE_TYPE)
    _Event_Report_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Event_Report_Response_fill._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Event_Report_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Event_Report_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    _Event_Report_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ReturnStatus')), opt=True)
    Event_Report_Response._cont = ASN1Dict([
        ('fill', _Event_Report_Response_fill),
        ('eid', _Event_Report_Response_eid),
        ('iid', _Event_Report_Response_iid),
        ('ret', _Event_Report_Response_ret),
        ])
    Event_Report_Response._ext = None
    
    #-----< EventType >-----#
    EventType = INT(name='EventType', mode=MODE_TYPE)
    EventType._cont = ASN1Dict([('release', 0)])
    EventType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< File >-----#
    File = SEQ_OF(name='File', mode=MODE_TYPE)
    _File__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'Record')))
    File._cont = _File__item_
    File._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< FileName >-----#
    FileName = SEQ(name='FileName', mode=MODE_TYPE)
    _FileName_aseID = INT(name='aseID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _FileName_fileID = INT(name='fileID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FileName_fileID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    FileName._cont = ASN1Dict([
        ('aseID', _FileName_aseID),
        ('fileID', _FileName_fileID),
        ])
    FileName._ext = None
    
    #-----< FileType >-----#
    FileType = NULL(name='FileType', mode=MODE_TYPE)
    
    #-----< Get-Request >-----#
    Get_Request = SEQ(name='Get-Request', mode=MODE_TYPE)
    _Get_Request_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Get_Request_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Get_Request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Get_Request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Get_Request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Get_Request_iid = INT(name='iid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    _Get_Request_attrIdList = SEQ_OF(name='attrIdList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'AttributeIdList')), opt=True)
    Get_Request._cont = ASN1Dict([
        ('fill', _Get_Request_fill),
        ('eid', _Get_Request_eid),
        ('accessCredentials', _Get_Request_accessCredentials),
        ('iid', _Get_Request_iid),
        ('attrIdList', _Get_Request_attrIdList),
        ])
    Get_Request._ext = None
    
    #-----< Get-Response >-----#
    Get_Response = SEQ(name='Get-Response', mode=MODE_TYPE)
    _Get_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Get_Response_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Get_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Get_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    _Get_Response_attributelist = SEQ_OF(name='attributelist', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'AttributeList')), opt=True)
    _Get_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ReturnStatus')), opt=True)
    Get_Response._cont = ASN1Dict([
        ('fill', _Get_Response_fill),
        ('eid', _Get_Response_eid),
        ('iid', _Get_Response_iid),
        ('attributelist', _Get_Response_attributelist),
        ('ret', _Get_Response_ret),
        ])
    Get_Response._ext = None
    
    #-----< Initialisation-Request >-----#
    Initialisation_Request = SEQ(name='Initialisation-Request', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'BST')))
    
    #-----< Initialisation-Response >-----#
    Initialisation_Response = SEQ(name='Initialisation-Response', mode=MODE_TYPE, typeref=ASN1RefType(('DSRCData', 'VST')))
    
    #-----< NamedFile >-----#
    NamedFile = SEQ(name='NamedFile', mode=MODE_TYPE)
    _NamedFile_name = SEQ(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'FileName')))
    _NamedFile_file = SEQ_OF(name='file', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'File')))
    NamedFile._cont = ASN1Dict([
        ('name', _NamedFile_name),
        ('file', _NamedFile_file),
        ])
    NamedFile._ext = None
    
    #-----< ObeConfiguration >-----#
    ObeConfiguration = SEQ(name='ObeConfiguration', mode=MODE_TYPE)
    _ObeConfiguration_equipmentClass = INT(name='equipmentClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ObeConfiguration_equipmentClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _ObeConfiguration_manufacturerID = INT(name='manufacturerID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ObeConfiguration_manufacturerID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ObeConfiguration_obeStatus = INT(name='obeStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ObeConfiguration_obeStatus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    ObeConfiguration._cont = ASN1Dict([
        ('equipmentClass', _ObeConfiguration_equipmentClass),
        ('manufacturerID', _ObeConfiguration_manufacturerID),
        ('obeStatus', _ObeConfiguration_obeStatus),
        ])
    ObeConfiguration._ext = None
    
    #-----< Profile >-----#
    Profile = INT(name='Profile', mode=MODE_TYPE)
    Profile._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Record >-----#
    Record = CHOICE(name='Record', mode=MODE_TYPE)
    _Record_simple = STR_VIS(name='simple', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Record._cont = ASN1Dict([
        ('simple', _Record_simple),
        ])
    Record._ext = []
    
    #-----< ReturnStatus >-----#
    ReturnStatus = INT(name='ReturnStatus', mode=MODE_TYPE)
    ReturnStatus._cont = ASN1Dict([('noError', 0), ('accessDenied', 1), ('argumentError', 2), ('complexityLimitation', 3), ('processingFailure', 4), ('processing', 5), ('chainingError', 6)])
    ReturnStatus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Set-Request >-----#
    Set_Request = SEQ(name='Set-Request', mode=MODE_TYPE)
    _Set_Request_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Set_Request_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Set_Request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Set_Request_eid = INT(name='eid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Set_Request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Set_Request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Set_Request_attrList = SEQ_OF(name='attrList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'AttributeList')))
    _Set_Request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    Set_Request._cont = ASN1Dict([
        ('fill', _Set_Request_fill),
        ('mode', _Set_Request_mode),
        ('eid', _Set_Request_eid),
        ('accessCredentials', _Set_Request_accessCredentials),
        ('attrList', _Set_Request_attrList),
        ('iid', _Set_Request_iid),
        ])
    Set_Request._ext = None
    
    #-----< Set-Response >-----#
    Set_Response = SEQ(name='Set-Response', mode=MODE_TYPE)
    _Set_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Set_Response_fill._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Set_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')))
    _Set_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Dsrc-EID')), opt=True)
    _Set_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ReturnStatus')), opt=True)
    Set_Response._cont = ASN1Dict([
        ('fill', _Set_Response_fill),
        ('eid', _Set_Response_eid),
        ('iid', _Set_Response_iid),
        ('ret', _Set_Response_ret),
        ])
    Set_Response._ext = None
    
    #-----< Time >-----#
    Time = INT(name='Time', mode=MODE_TYPE)
    Time._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< T-APDUs >-----#
    T_APDUs = CHOICE(name='T-APDUs', mode=MODE_TYPE)
    _T_APDUs_action_request = SEQ(name='action-request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Action-Request')))
    _T_APDUs_action_response = SEQ(name='action-response', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Action-Response')))
    _T_APDUs_event_report_request = SEQ(name='event-report-request', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Event-Report-Request')))
    _T_APDUs_event_report_response = SEQ(name='event-report-response', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Event-Report-Response')))
    _T_APDUs_set_request = SEQ(name='set-request', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Set-Request')))
    _T_APDUs_set_response = SEQ(name='set-response', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Set-Response')))
    _T_APDUs_get_request = SEQ(name='get-request', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Get-Request')))
    _T_APDUs_get_response = SEQ(name='get-response', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Get-Response')))
    _T_APDUs_initialisation_request = SEQ(name='initialisation-request', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Initialisation-Request')))
    _T_APDUs_initialisation_response = SEQ(name='initialisation-response', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Initialisation-Response')))
    T_APDUs._cont = ASN1Dict([
        ('action-request', _T_APDUs_action_request),
        ('action-response', _T_APDUs_action_response),
        ('event-report-request', _T_APDUs_event_report_request),
        ('event-report-response', _T_APDUs_event_report_response),
        ('set-request', _T_APDUs_set_request),
        ('set-response', _T_APDUs_set_response),
        ('get-request', _T_APDUs_get_request),
        ('get-response', _T_APDUs_get_response),
        ('initialisation-request', _T_APDUs_initialisation_request),
        ('initialisation-response', _T_APDUs_initialisation_response),
        ])
    T_APDUs._ext = None
    
    #-----< VST >-----#
    VST = SEQ(name='VST', mode=MODE_TYPE)
    _VST_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VST_fill._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _VST_profile = INT(name='profile', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'Profile')))
    _VST_applications = SEQ_OF(name='applications', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ApplicationList')))
    _VST_obeConfiguration = SEQ(name='obeConfiguration', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRCData', 'ObeConfiguration')))
    VST._cont = ASN1Dict([
        ('fill', _VST_fill),
        ('profile', _VST_profile),
        ('applications', _VST_applications),
        ('obeConfiguration', _VST_obeConfiguration),
        ])
    VST._ext = None
    
    _all_ = [
        _Action_Request_mode,
        _Action_Request_eid,
        _Action_Request_actionType,
        _Action_Request_accessCredentials,
        _Action_Request_actionParameter,
        _Action_Request_iid,
        Action_Request,
        _Action_Response_fill,
        _Action_Response_eid,
        _Action_Response_iid,
        _Action_Response_responseParameter,
        _Action_Response_ret,
        Action_Response,
        ActionType,
        ApplicationContextMark,
        __ApplicationList__item__aid,
        __ApplicationList__item__eid,
        __ApplicationList__item__parameter,
        _ApplicationList__item_,
        ApplicationList,
        _AttributeIdList__item_,
        AttributeIdList,
        _AttributeList__item_,
        AttributeList,
        _Attributes_attributeId,
        _Attributes_attributeValue,
        Attributes,
        _BeaconID_manufacturerid,
        _BeaconID_individualid,
        BeaconID,
        _BroadcastPool_directoryvalue,
        __BroadcastPool_content__item_,
        _BroadcastPool_content,
        BroadcastPool,
        _BST_rsu,
        _BST_time,
        _BST_profile,
        _BST_mandApplications,
        _BST_nonmandApplications,
        __BST_profileList__item_,
        _BST_profileList,
        BST,
        _Container_integer,
        _Container_bitstring,
        _Container_octetstring,
        _Container_universalString,
        _Container_beaconId,
        _Container_t_apdu,
        _Container_dsrcApplicationEntityId,
        _Container_dsrc_Ase_Id,
        _Container_attrIdList,
        _Container_attrList,
        _Container_broadcastPool,
        _Container_directory,
        _Container_file,
        _Container_fileType,
        _Container_record,
        _Container_time,
        __Container_vector__item_,
        _Container_vector,
        Container,
        _Directory__item_,
        Directory,
        Dsrc_EID,
        DSRCApplicationEntityID,
        _Event_Report_Request_mode,
        _Event_Report_Request_eid,
        _Event_Report_Request_eventType,
        _Event_Report_Request_accessCredentials,
        _Event_Report_Request_eventParameter,
        _Event_Report_Request_iid,
        Event_Report_Request,
        _Event_Report_Response_fill,
        _Event_Report_Response_eid,
        _Event_Report_Response_iid,
        _Event_Report_Response_ret,
        Event_Report_Response,
        EventType,
        _File__item_,
        File,
        _FileName_aseID,
        _FileName_fileID,
        FileName,
        FileType,
        _Get_Request_fill,
        _Get_Request_eid,
        _Get_Request_accessCredentials,
        _Get_Request_iid,
        _Get_Request_attrIdList,
        Get_Request,
        _Get_Response_fill,
        _Get_Response_eid,
        _Get_Response_iid,
        _Get_Response_attributelist,
        _Get_Response_ret,
        Get_Response,
        Initialisation_Request,
        Initialisation_Response,
        _NamedFile_name,
        _NamedFile_file,
        NamedFile,
        _ObeConfiguration_equipmentClass,
        _ObeConfiguration_manufacturerID,
        _ObeConfiguration_obeStatus,
        ObeConfiguration,
        Profile,
        _Record_simple,
        Record,
        ReturnStatus,
        _Set_Request_fill,
        _Set_Request_mode,
        _Set_Request_eid,
        _Set_Request_accessCredentials,
        _Set_Request_attrList,
        _Set_Request_iid,
        Set_Request,
        _Set_Response_fill,
        _Set_Response_eid,
        _Set_Response_iid,
        _Set_Response_ret,
        Set_Response,
        Time,
        _T_APDUs_action_request,
        _T_APDUs_action_response,
        _T_APDUs_event_report_request,
        _T_APDUs_event_report_response,
        _T_APDUs_set_request,
        _T_APDUs_set_response,
        _T_APDUs_get_request,
        _T_APDUs_get_response,
        _T_APDUs_initialisation_request,
        _T_APDUs_initialisation_response,
        T_APDUs,
        _VST_fill,
        _VST_profile,
        _VST_applications,
        _VST_obeConfiguration,
        VST,
    ]

class AVIAEINumberingAndDataStructures:

    _name_  = 'AVIAEINumberingAndDataStructures'
    _oid_   = [1, 0, 14816, 1, 1]
    
    _obj_ = [
        'CS1',
        'CS2',
        'CS3',
        'CS4',
        'CS5',
        'CS7',
        'FreightContainerData',
        'CS8',
        'CountryCode',
        'IssuerIdentifier',
        'ManufacturerIdentifier',
        'LicPlateNumber',
        'ServiceNumber',
        'TaxCode',
        'AlphabetIndicator',
        'AviEriDateTime',
        'StartTime',
        'StopTime',
        'GeoGraphicalLimit',
        'ServiceApplicationLimit',
        'version',
        ]
    _type_ = [
        'CS1',
        'CS2',
        'CS3',
        'CS4',
        'CS5',
        'CS7',
        'FreightContainerData',
        'CS8',
        'CountryCode',
        'IssuerIdentifier',
        'ManufacturerIdentifier',
        'LicPlateNumber',
        'ServiceNumber',
        'TaxCode',
        'AlphabetIndicator',
        'AviEriDateTime',
        'StartTime',
        'StopTime',
        'GeoGraphicalLimit',
        'ServiceApplicationLimit',
        ]
    _set_ = [
        ]
    _val_ = [
        'version',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< CS1 >-----#
    CS1 = SEQ(name='CS1', mode=MODE_TYPE)
    _CS1_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _CS1_issuerIdentifier = INT(name='issuerIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'IssuerIdentifier')))
    _CS1_serviceNumber = BIT_STR(name='serviceNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ServiceNumber')))
    CS1._cont = ASN1Dict([
        ('countryCode', _CS1_countryCode),
        ('issuerIdentifier', _CS1_issuerIdentifier),
        ('serviceNumber', _CS1_serviceNumber),
        ])
    CS1._ext = None
    
    #-----< CS2 >-----#
    CS2 = SEQ(name='CS2', mode=MODE_TYPE)
    _CS2_manufacturerIdentifier = INT(name='manufacturerIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ManufacturerIdentifier')))
    _CS2_serviceNumber = BIT_STR(name='serviceNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ServiceNumber')))
    CS2._cont = ASN1Dict([
        ('manufacturerIdentifier', _CS2_manufacturerIdentifier),
        ('serviceNumber', _CS2_serviceNumber),
        ])
    CS2._ext = None
    
    #-----< CS3 >-----#
    CS3 = SEQ(name='CS3', mode=MODE_TYPE)
    _CS3_startTime = OCT_STR(name='startTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'StartTime')))
    _CS3_stopTime = OCT_STR(name='stopTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'StopTime')))
    _CS3_geographLimit = BIT_STR(name='geographLimit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'GeoGraphicalLimit')))
    _CS3_serviceAppLimit = BIT_STR(name='serviceAppLimit', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ServiceApplicationLimit')))
    CS3._cont = ASN1Dict([
        ('startTime', _CS3_startTime),
        ('stopTime', _CS3_stopTime),
        ('geographLimit', _CS3_geographLimit),
        ('serviceAppLimit', _CS3_serviceAppLimit),
        ])
    CS3._ext = None
    
    #-----< CS4 >-----#
    CS4 = SEQ(name='CS4', mode=MODE_TYPE)
    _CS4_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _CS4_alphabetIndicator = INT(name='alphabetIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'AlphabetIndicator')))
    _CS4_licPlateNumber = OCT_STR(name='licPlateNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'LicPlateNumber')))
    CS4._cont = ASN1Dict([
        ('countryCode', _CS4_countryCode),
        ('alphabetIndicator', _CS4_alphabetIndicator),
        ('licPlateNumber', _CS4_licPlateNumber),
        ])
    CS4._ext = None
    
    #-----< CS5 >-----#
    CS5 = SEQ(name='CS5', mode=MODE_TYPE)
    _CS5_vin = STR_VIS(name='vin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CS5_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CS5_fill._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    CS5._cont = ASN1Dict([
        ('vin', _CS5_vin),
        ('fill', _CS5_fill),
        ])
    CS5._ext = None
    
    #-----< CS7 >-----#
    CS7 = SEQ(name='CS7', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'FreightContainerData')))
    
    #-----< FreightContainerData >-----#
    FreightContainerData = SEQ(name='FreightContainerData', mode=MODE_TYPE)
    _FreightContainerData_ownerCode = BIT_STR(name='ownerCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_ownerCode._const_sz = ASN1Set(rv=[19], rr=[], ev=None, er=[])
    _FreightContainerData_serialNumber = INT(name='serialNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_serialNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1000000)], ev=None, er=[])
    _FreightContainerData_checkDigit = INT(name='checkDigit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_checkDigit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    _FreightContainerData_length = INT(name='length', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_length._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2000)], ev=None, er=[])
    _FreightContainerData_height = INT(name='height', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_height._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=500)], ev=None, er=[])
    _FreightContainerData_width = INT(name='width', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_width._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=200, ub=300)], ev=None, er=[])
    _FreightContainerData_containerTypeCode = INT(name='containerTypeCode', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_containerTypeCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _FreightContainerData_maximumGrossMass = INT(name='maximumGrossMass', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_maximumGrossMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=19, ub=500)], ev=None, er=[])
    _FreightContainerData_tareMass = INT(name='tareMass', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_tareMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=99)], ev=None, er=[])
    _FreightContainerData_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_fill._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    FreightContainerData._cont = ASN1Dict([
        ('ownerCode', _FreightContainerData_ownerCode),
        ('serialNumber', _FreightContainerData_serialNumber),
        ('checkDigit', _FreightContainerData_checkDigit),
        ('length', _FreightContainerData_length),
        ('height', _FreightContainerData_height),
        ('width', _FreightContainerData_width),
        ('containerTypeCode', _FreightContainerData_containerTypeCode),
        ('maximumGrossMass', _FreightContainerData_maximumGrossMass),
        ('tareMass', _FreightContainerData_tareMass),
        ('fill', _FreightContainerData_fill),
        ])
    FreightContainerData._ext = None
    
    #-----< CS8 >-----#
    CS8 = SEQ(name='CS8', mode=MODE_TYPE)
    _CS8_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CS8_fill._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _CS8_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _CS8_taxCode = OCT_STR(name='taxCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'TaxCode')))
    CS8._cont = ASN1Dict([
        ('fill', _CS8_fill),
        ('countryCode', _CS8_countryCode),
        ('taxCode', _CS8_taxCode),
        ])
    CS8._ext = None
    
    #-----< CountryCode >-----#
    CountryCode = BIT_STR(name='CountryCode', mode=MODE_TYPE)
    CountryCode._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< IssuerIdentifier >-----#
    IssuerIdentifier = INT(name='IssuerIdentifier', mode=MODE_TYPE)
    IssuerIdentifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< ManufacturerIdentifier >-----#
    ManufacturerIdentifier = INT(name='ManufacturerIdentifier', mode=MODE_TYPE)
    ManufacturerIdentifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< LicPlateNumber >-----#
    LicPlateNumber = OCT_STR(name='LicPlateNumber', mode=MODE_TYPE)
    
    #-----< ServiceNumber >-----#
    ServiceNumber = BIT_STR(name='ServiceNumber', mode=MODE_TYPE)
    ServiceNumber._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    _ServiceNumber_contain = INT(name='_cont_ServiceNumber', mode=MODE_TYPE)
    _ServiceNumber_contain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    ServiceNumber._const_cont = _ServiceNumber_contain
    
    #-----< TaxCode >-----#
    TaxCode = OCT_STR(name='TaxCode', mode=MODE_TYPE)
    
    #-----< AlphabetIndicator >-----#
    AlphabetIndicator = INT(name='AlphabetIndicator', mode=MODE_TYPE)
    AlphabetIndicator._cont = ASN1Dict([('latinAlphabetNo1', 0), ('latinAlphabetNo2', 1), ('latinAlphabetNo3', 2), ('latinAlphabetNo4', 3), ('latinCyrillicAlphabet', 4), ('latinArabicAlphabet', 5), ('latinGreekAlphabet', 6), ('latinHebrewAlphabet', 7), ('latinAlphabetNo5', 8), ('latinAlphabetNo6', 9), ('twoOctetBMP', 10), ('fourOctetCanonical', 11)])
    AlphabetIndicator._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< AviEriDateTime >-----#
    AviEriDateTime = OCT_STR(name='AviEriDateTime', mode=MODE_TYPE)
    AviEriDateTime._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< StartTime >-----#
    StartTime = OCT_STR(name='StartTime', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'AviEriDateTime')))
    
    #-----< StopTime >-----#
    StopTime = OCT_STR(name='StopTime', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'AviEriDateTime')))
    
    #-----< GeoGraphicalLimit >-----#
    GeoGraphicalLimit = BIT_STR(name='GeoGraphicalLimit', mode=MODE_TYPE)
    GeoGraphicalLimit._cont = ASN1Dict([('globalRestriction', 0), ('regionalRestriction', 1), ('nationalRestriction', 2), ('district', 3), ('issuerCoverageRestriction', 4), ('reservedForCEN1', 5), ('reservedForCEN2', 6), ('issuerSpecificRestriction', 7)])
    GeoGraphicalLimit._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< ServiceApplicationLimit >-----#
    ServiceApplicationLimit = BIT_STR(name='ServiceApplicationLimit', mode=MODE_TYPE)
    ServiceApplicationLimit._cont = ASN1Dict([('notForPostpayment', 0), ('notForPrepayment', 1), ('notForVehicleaccess', 2), ('notForFleetcontrol', 3), ('issuerSpecificRestriction1', 4), ('issuerSpecificRestriction2', 5), ('issuerSpecificRestriction3', 6), ('issuerSpecificRestriction4', 7)])
    ServiceApplicationLimit._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< version >-----#
    version = INT(name='version', mode=MODE_VALUE)
    version._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    version._val = 1
    
    _all_ = [
        _CS1_countryCode,
        _CS1_issuerIdentifier,
        _CS1_serviceNumber,
        CS1,
        _CS2_manufacturerIdentifier,
        _CS2_serviceNumber,
        CS2,
        _CS3_startTime,
        _CS3_stopTime,
        _CS3_geographLimit,
        _CS3_serviceAppLimit,
        CS3,
        _CS4_countryCode,
        _CS4_alphabetIndicator,
        _CS4_licPlateNumber,
        CS4,
        _CS5_vin,
        _CS5_fill,
        CS5,
        CS7,
        _FreightContainerData_ownerCode,
        _FreightContainerData_serialNumber,
        _FreightContainerData_checkDigit,
        _FreightContainerData_length,
        _FreightContainerData_height,
        _FreightContainerData_width,
        _FreightContainerData_containerTypeCode,
        _FreightContainerData_maximumGrossMass,
        _FreightContainerData_tareMass,
        _FreightContainerData_fill,
        FreightContainerData,
        _CS8_fill,
        _CS8_countryCode,
        _CS8_taxCode,
        CS8,
        CountryCode,
        IssuerIdentifier,
        ManufacturerIdentifier,
        LicPlateNumber,
        _ServiceNumber_contain,
        ServiceNumber,
        TaxCode,
        AlphabetIndicator,
        AviEriDateTime,
        StartTime,
        StopTime,
        GeoGraphicalLimit,
        ServiceApplicationLimit,
        version,
    ]

class EfcDsrcApplication:

    _name_  = 'EfcDsrcApplication'
    _oid_   = [1, 0, 14906, 0, 5]
    
    _obj_ = [
        'ActualNumberOfPassengers',
        'AxleWeightLimits',
        'AddRq',
        'ChannelId',
        'ChannelRq',
        'ChannelRs',
        'CopyRq',
        'CreditRq',
        'CreditRs',
        'DebitRq',
        'DebitRs',
        'GetInstanceRq',
        'GetInstanceRs',
        'GetStampedRq',
        'GetStampedRs',
        'SetInstanceRq',
        'SetMMIRq',
        'SetStampedRq',
        'SubRq',
        'CO2EmissionValue',
        'ContractSerialNumber',
        'ContractAuthenticator',
        'ContractValidity',
        'ContractVehicle',
        'DateCompact',
        'DescriptiveCharacteristics',
        'DieselEmissionValues',
        'DriverCharacteristics',
        'EFC-ContextMark',
        'EnvironmentalCharacteristics',
        'EuroValue',
        'CopValue',
        'EngineCharacteristics',
        'Engine',
        'EquipmentOBUId',
        'EquipmentStatus',
        'ExhaustEmissionValues',
        'FutureCharacteristics',
        'ICC-Id',
        'Int1',
        'Int2',
        'Int3',
        'Int4',
        'LPN',
        'PassengerCapacity',
        'PaymentFee',
        'PaymentMeans',
        'PaymentMeansBalance',
        'SignedValue',
        'PaymentMeansUnit',
        'PaymentSecurityData',
        'PayUnit',
        'PersonalAccountNumber',
        'Provider',
        'PurseBalance',
        'ReceiptContract',
        'ReceiptData1',
        'ReceiptData2',
        'ReceiptData',
        'ReceiptDistance',
        'ReceiptFinancialPart',
        'ReceiptICC-Id',
        'ReceiptOBUId',
        'ReceiptServicePart',
        'ReceiptServiceSerialNumber',
        'ReceiptAuthenticator',
        'ReceiptText',
        'ResultFin',
        'ResultOp',
        'SessionClass',
        'SessionLocation',
        'StationType',
        'DateAndTime',
        'SoundLevel',
        'TrailerCharacteristics',
        'TrailerDetails',
        'TrailerLicencePlateNumber',
        'UnitType',
        'ValidityOfContract',
        'VehicleAuthenticator',
        'VehicleAxles',
        'TrailerAxles',
        'TractorAxles',
        'VehicleClass',
        'VehicleDimensions',
        'VehicleLicencePlateNumber',
        'VehicleIdentificationNumber',
        'VehicleSpecificCharacteristics',
        'VehicleTotalDistance',
        'VehicleWeightLaden',
        'VehicleCurrentMaxTrainWeight',
        'VehicleWeightLimits',
        ]
    _type_ = [
        'ActualNumberOfPassengers',
        'AxleWeightLimits',
        'AddRq',
        'ChannelId',
        'ChannelRq',
        'ChannelRs',
        'CopyRq',
        'CreditRq',
        'CreditRs',
        'DebitRq',
        'DebitRs',
        'GetInstanceRq',
        'GetInstanceRs',
        'GetStampedRq',
        'GetStampedRs',
        'SetInstanceRq',
        'SetMMIRq',
        'SetStampedRq',
        'SubRq',
        'CO2EmissionValue',
        'ContractSerialNumber',
        'ContractAuthenticator',
        'ContractValidity',
        'ContractVehicle',
        'DateCompact',
        'DescriptiveCharacteristics',
        'DieselEmissionValues',
        'DriverCharacteristics',
        'EFC-ContextMark',
        'EnvironmentalCharacteristics',
        'EuroValue',
        'CopValue',
        'EngineCharacteristics',
        'Engine',
        'EquipmentOBUId',
        'EquipmentStatus',
        'ExhaustEmissionValues',
        'FutureCharacteristics',
        'ICC-Id',
        'Int1',
        'Int2',
        'Int3',
        'Int4',
        'LPN',
        'PassengerCapacity',
        'PaymentFee',
        'PaymentMeans',
        'PaymentMeansBalance',
        'SignedValue',
        'PaymentMeansUnit',
        'PaymentSecurityData',
        'PayUnit',
        'PersonalAccountNumber',
        'Provider',
        'PurseBalance',
        'ReceiptContract',
        'ReceiptData1',
        'ReceiptData2',
        'ReceiptData',
        'ReceiptDistance',
        'ReceiptFinancialPart',
        'ReceiptICC-Id',
        'ReceiptOBUId',
        'ReceiptServicePart',
        'ReceiptServiceSerialNumber',
        'ReceiptAuthenticator',
        'ReceiptText',
        'ResultFin',
        'ResultOp',
        'SessionClass',
        'SessionLocation',
        'StationType',
        'DateAndTime',
        'SoundLevel',
        'TrailerCharacteristics',
        'TrailerDetails',
        'TrailerLicencePlateNumber',
        'UnitType',
        'ValidityOfContract',
        'VehicleAuthenticator',
        'VehicleAxles',
        'TrailerAxles',
        'TractorAxles',
        'VehicleClass',
        'VehicleDimensions',
        'VehicleLicencePlateNumber',
        'VehicleIdentificationNumber',
        'VehicleSpecificCharacteristics',
        'VehicleTotalDistance',
        'VehicleWeightLaden',
        'VehicleCurrentMaxTrainWeight',
        'VehicleWeightLimits',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        'GetInstanceRs',
        'GetStampedRs',
        'SetInstanceRq',
        'SetStampedRq',
        ]
    
    #-----< ActualNumberOfPassengers >-----#
    ActualNumberOfPassengers = INT(name='ActualNumberOfPassengers', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    
    #-----< AxleWeightLimits >-----#
    AxleWeightLimits = SEQ(name='AxleWeightLimits', mode=MODE_TYPE)
    _AxleWeightLimits_maxLadenweightOnAxle1 = INT(name='maxLadenweightOnAxle1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle2 = INT(name='maxLadenweightOnAxle2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle3 = INT(name='maxLadenweightOnAxle3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle4 = INT(name='maxLadenweightOnAxle4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle5 = INT(name='maxLadenweightOnAxle5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    AxleWeightLimits._cont = ASN1Dict([
        ('maxLadenweightOnAxle1', _AxleWeightLimits_maxLadenweightOnAxle1),
        ('maxLadenweightOnAxle2', _AxleWeightLimits_maxLadenweightOnAxle2),
        ('maxLadenweightOnAxle3', _AxleWeightLimits_maxLadenweightOnAxle3),
        ('maxLadenweightOnAxle4', _AxleWeightLimits_maxLadenweightOnAxle4),
        ('maxLadenweightOnAxle5', _AxleWeightLimits_maxLadenweightOnAxle5),
        ])
    AxleWeightLimits._ext = None
    
    #-----< AddRq >-----#
    AddRq = SEQ(name='AddRq', mode=MODE_TYPE)
    _AddRq_attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddRq_attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _AddRq_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    AddRq._cont = ASN1Dict([
        ('attributeId', _AddRq_attributeId),
        ('value', _AddRq_value),
        ])
    AddRq._ext = None
    
    #-----< ChannelId >-----#
    ChannelId = INT(name='ChannelId', mode=MODE_TYPE)
    ChannelId._cont = ASN1Dict([('obu', 0), ('sam1', 1), ('sam2', 2), ('icc', 3), ('display', 4), ('buzzer', 5), ('printer', 6), ('serialInterface', 7), ('parallelInterface', 8), ('gPS', 9), ('tachograph', 10), ('privateUse1', 11), ('privateUse2', 12), ('privateUse3', 13), ('privateUse4', 14), ('privateUse5', 15), ('bluetooth', 16)])
    ChannelId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ChannelRq >-----#
    ChannelRq = SEQ(name='ChannelRq', mode=MODE_TYPE)
    _ChannelRq_channelId = INT(name='channelId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelId')))
    _ChannelRq_apdu = OCT_STR(name='apdu', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ChannelRq._cont = ASN1Dict([
        ('channelId', _ChannelRq_channelId),
        ('apdu', _ChannelRq_apdu),
        ])
    ChannelRq._ext = None
    
    #-----< ChannelRs >-----#
    ChannelRs = SEQ(name='ChannelRs', mode=MODE_TYPE)
    _ChannelRs_channelId = INT(name='channelId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelId')))
    _ChannelRs_apdu = OCT_STR(name='apdu', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ChannelRs._cont = ASN1Dict([
        ('channelId', _ChannelRs_channelId),
        ('apdu', _ChannelRs_apdu),
        ])
    ChannelRs._ext = None
    
    #-----< CopyRq >-----#
    CopyRq = SEQ(name='CopyRq', mode=MODE_TYPE)
    _CopyRq_destinationEID = INT(name='destinationEID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CopyRq_destinationEID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _CopyRq_attributeIdList = SEQ_OF(name='attributeIdList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    CopyRq._cont = ASN1Dict([
        ('destinationEID', _CopyRq_destinationEID),
        ('attributeIdList', _CopyRq_attributeIdList),
        ])
    CopyRq._ext = None
    
    #-----< CreditRq >-----#
    CreditRq = SEQ(name='CreditRq', mode=MODE_TYPE)
    _CreditRq_refund = SEQ(name='refund', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _CreditRq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CreditRq_key = INT(name='key', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CreditRq_key._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    CreditRq._cont = ASN1Dict([
        ('refund', _CreditRq_refund),
        ('nonce', _CreditRq_nonce),
        ('key', _CreditRq_key),
        ])
    CreditRq._ext = None
    
    #-----< CreditRs >-----#
    CreditRs = SEQ(name='CreditRs', mode=MODE_TYPE)
    _CreditRs_creditResult = OCT_STR(name='creditResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultFin')))
    _CreditRs_creditAuthenticator = OCT_STR(name='creditAuthenticator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CreditRs._cont = ASN1Dict([
        ('creditResult', _CreditRs_creditResult),
        ('creditAuthenticator', _CreditRs_creditAuthenticator),
        ])
    CreditRs._ext = None
    
    #-----< DebitRq >-----#
    DebitRq = SEQ(name='DebitRq', mode=MODE_TYPE)
    _DebitRq_debitPaymentFee = SEQ(name='debitPaymentFee', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _DebitRq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DebitRq_keyRef = INT(name='keyRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DebitRq_keyRef._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    DebitRq._cont = ASN1Dict([
        ('debitPaymentFee', _DebitRq_debitPaymentFee),
        ('nonce', _DebitRq_nonce),
        ('keyRef', _DebitRq_keyRef),
        ])
    DebitRq._ext = None
    
    #-----< DebitRs >-----#
    DebitRs = SEQ(name='DebitRs', mode=MODE_TYPE)
    _DebitRs_debitResult = OCT_STR(name='debitResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultFin')))
    _DebitRs_debitAuthenticator = OCT_STR(name='debitAuthenticator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DebitRs._cont = ASN1Dict([
        ('debitResult', _DebitRs_debitResult),
        ('debitAuthenticator', _DebitRs_debitAuthenticator),
        ])
    DebitRs._ext = None
    
    #-----< GetInstanceRq >-----#
    GetInstanceRq = SEQ(name='GetInstanceRq', mode=MODE_TYPE)
    _GetInstanceRq_posOfFirstInstance = INT(name='posOfFirstInstance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetInstanceRq_posOfFirstInstance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GetInstanceRq_posOfLastInstance = INT(name='posOfLastInstance', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetInstanceRq_posOfLastInstance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GetInstanceRq_attributeIdList = SEQ_OF(name='attributeIdList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    GetInstanceRq._cont = ASN1Dict([
        ('posOfFirstInstance', _GetInstanceRq_posOfFirstInstance),
        ('posOfLastInstance', _GetInstanceRq_posOfLastInstance),
        ('attributeIdList', _GetInstanceRq_attributeIdList),
        ])
    GetInstanceRq._ext = None
    
    #-----< GetInstanceRs >-----#
    GetInstanceRs = SEQ_OF(name='GetInstanceRs', mode=MODE_TYPE, param=True)
    
    #-----< GetStampedRq >-----#
    GetStampedRq = SEQ(name='GetStampedRq', mode=MODE_TYPE)
    _GetStampedRq_attributeIdList = SEQ_OF(name='attributeIdList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    _GetStampedRq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetStampedRq_keyRef = INT(name='keyRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetStampedRq_keyRef._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    GetStampedRq._cont = ASN1Dict([
        ('attributeIdList', _GetStampedRq_attributeIdList),
        ('nonce', _GetStampedRq_nonce),
        ('keyRef', _GetStampedRq_keyRef),
        ])
    GetStampedRq._ext = None
    
    #-----< GetStampedRs >-----#
    GetStampedRs = SEQ(name='GetStampedRs', mode=MODE_TYPE, param=True)
    
    #-----< SetInstanceRq >-----#
    SetInstanceRq = SEQ(name='SetInstanceRq', mode=MODE_TYPE, param=True)
    
    #-----< SetMMIRq >-----#
    SetMMIRq = INT(name='SetMMIRq', mode=MODE_TYPE)
    SetMMIRq._cont = ASN1Dict([('ok', 0), ('nok', 1), ('contactOperator', 2), ('noSignalling', 255)])
    SetMMIRq._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SetStampedRq >-----#
    SetStampedRq = SEQ(name='SetStampedRq', mode=MODE_TYPE, param=True)
    
    #-----< SubRq >-----#
    SubRq = SEQ(name='SubRq', mode=MODE_TYPE)
    _SubRq_attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubRq_attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _SubRq_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SubRq._cont = ASN1Dict([
        ('attributeId', _SubRq_attributeId),
        ('value', _SubRq_value),
        ])
    SubRq._ext = None
    
    #-----< CO2EmissionValue >-----#
    CO2EmissionValue = INT(name='CO2EmissionValue', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    
    #-----< ContractSerialNumber >-----#
    ContractSerialNumber = INT(name='ContractSerialNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    
    #-----< ContractAuthenticator >-----#
    ContractAuthenticator = OCT_STR(name='ContractAuthenticator', mode=MODE_TYPE)
    
    #-----< ContractValidity >-----#
    ContractValidity = SEQ(name='ContractValidity', mode=MODE_TYPE)
    _ContractValidity_contractRestrictions = OCT_STR(name='contractRestrictions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ContractValidity_contractRestrictions._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _ContractValidity_contractExpiryDate = SEQ(name='contractExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    ContractValidity._cont = ASN1Dict([
        ('contractRestrictions', _ContractValidity_contractRestrictions),
        ('contractExpiryDate', _ContractValidity_contractExpiryDate),
        ])
    ContractValidity._ext = None
    
    #-----< ContractVehicle >-----#
    ContractVehicle = SEQ(name='ContractVehicle', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    
    #-----< DateCompact >-----#
    DateCompact = SEQ(name='DateCompact', mode=MODE_TYPE)
    _DateCompact_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_year._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1990, ub=2117)], ev=None, er=[])
    _DateCompact_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_month._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=12)], ev=None, er=[])
    _DateCompact_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_day._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    DateCompact._cont = ASN1Dict([
        ('year', _DateCompact_year),
        ('month', _DateCompact_month),
        ('day', _DateCompact_day),
        ])
    DateCompact._ext = None
    
    #-----< DescriptiveCharacteristics >-----#
    DescriptiveCharacteristics = INT(name='DescriptiveCharacteristics', mode=MODE_TYPE)
    DescriptiveCharacteristics._cont = ASN1Dict([('noEntry', 0), ('vehicleShape1', 1), ('vehicleShape2', 2), ('vehicleShape3', 3), ('vehicleShape4', 4), ('vehicleShape5', 5), ('vehicleShape6', 6), ('vehicleShape7', 7), ('vehicleShape8', 8), ('vehicleShape9', 9), ('vehicleShape10', 10), ('vehicleShape11', 11), ('vehicleShape12', 12), ('vehicleShape13', 13), ('vehicleShape14', 14), ('vehicleShape15', 15), ('vehicleShape16', 16), ('vehicleShape17', 17), ('vehicleShape18', 18), ('vehicleShape19', 19), ('vehicleShape20', 20), ('vehicleShape21', 21), ('vehicleShape22', 22), ('vehicleShape23', 23), ('vehicleShape24', 24), ('vehicleShape25', 25), ('vehicleShape26', 26), ('vehicleShape27', 27), ('vehicleShape28', 28), ('vehicleShape29', 29), ('vehicleShape30', 30), ('vehicleShape31', 31), ('vehicleShape32', 32), ('vehicleShape33', 33), ('vehicleShape34', 34), ('vehicleShape35', 35), ('vehicleShape36', 36), ('vehicleShape37', 37), ('vehicleShape38', 38), ('vehicleShape39', 39), ('vehicleShape40', 40), ('vehicleShape41', 41), ('vehicleShape42', 42), ('vehicleShape43', 43), ('vehicleShape44', 44), ('vehicleShape45', 45), ('vehicleShape46', 46), ('vehicleShape47', 47), ('vehicleShape48', 48), ('vehicleShape49', 49), ('vehicleShape50', 50)])
    DescriptiveCharacteristics._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DieselEmissionValues >-----#
    DieselEmissionValues = SEQ(name='DieselEmissionValues', mode=MODE_TYPE)
    _DieselEmissionValues_particulate = SEQ(name='particulate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DieselEmissionValues_particulate_unitType = ENUM(name='unitType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'UnitType')))
    __DieselEmissionValues_particulate_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DieselEmissionValues_particulate_value._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _DieselEmissionValues_particulate._cont = ASN1Dict([
        ('unitType', __DieselEmissionValues_particulate_unitType),
        ('value', __DieselEmissionValues_particulate_value),
        ])
    _DieselEmissionValues_particulate._ext = None
    _DieselEmissionValues_absorptionCoeff = INT(name='absorptionCoeff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    DieselEmissionValues._cont = ASN1Dict([
        ('particulate', _DieselEmissionValues_particulate),
        ('absorptionCoeff', _DieselEmissionValues_absorptionCoeff),
        ])
    DieselEmissionValues._ext = None
    
    #-----< DriverCharacteristics >-----#
    DriverCharacteristics = SEQ(name='DriverCharacteristics', mode=MODE_TYPE)
    _DriverCharacteristics_driverClass = INT(name='driverClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _DriverCharacteristics_tripPurpose = INT(name='tripPurpose', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    DriverCharacteristics._cont = ASN1Dict([
        ('driverClass', _DriverCharacteristics_driverClass),
        ('tripPurpose', _DriverCharacteristics_tripPurpose),
        ])
    DriverCharacteristics._ext = None
    
    #-----< EFC-ContextMark >-----#
    EFC_ContextMark = SEQ(name='EFC-ContextMark', mode=MODE_TYPE)
    _EFC_ContextMark_contractProvider = SEQ(name='contractProvider', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _EFC_ContextMark_typeOfContract = OCT_STR(name='typeOfContract', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EFC_ContextMark_typeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _EFC_ContextMark_contextVersion = INT(name='contextVersion', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EFC_ContextMark_contextVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    EFC_ContextMark._cont = ASN1Dict([
        ('contractProvider', _EFC_ContextMark_contractProvider),
        ('typeOfContract', _EFC_ContextMark_typeOfContract),
        ('contextVersion', _EFC_ContextMark_contextVersion),
        ])
    EFC_ContextMark._ext = None
    
    #-----< EnvironmentalCharacteristics >-----#
    EnvironmentalCharacteristics = SEQ(name='EnvironmentalCharacteristics', mode=MODE_TYPE)
    _EnvironmentalCharacteristics_euroValue = ENUM(name='euroValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EuroValue')))
    _EnvironmentalCharacteristics_copValue = ENUM(name='copValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CopValue')))
    EnvironmentalCharacteristics._cont = ASN1Dict([
        ('euroValue', _EnvironmentalCharacteristics_euroValue),
        ('copValue', _EnvironmentalCharacteristics_copValue),
        ])
    EnvironmentalCharacteristics._ext = None
    
    #-----< EuroValue >-----#
    EuroValue = ENUM(name='EuroValue', mode=MODE_TYPE)
    EuroValue._cont = ASN1Dict([('noEntry', 0), ('euro-1', 1), ('euro-2', 2), ('euro-3', 3), ('euro-4', 4), ('euro-5', 5), ('euro-6', 6), ('reservedForUse1', 7), ('reservedForUse2', 8), ('reservedForUse3', 9), ('reservedForUse4', 10), ('reservedForUse5', 11), ('reservedForUse6', 12), ('reservedForUse7', 13), ('reservedForUse8', 14), ('eev', 15)])
    EuroValue._ext = None
    
    #-----< CopValue >-----#
    CopValue = ENUM(name='CopValue', mode=MODE_TYPE)
    CopValue._cont = ASN1Dict([('noEntry', 0), ('co2class1', 1), ('co2class2', 2), ('co2class3', 3), ('co2class4', 4), ('co2class5', 5), ('co2class6', 6), ('co2class7', 7), ('reservedforUse', 8)])
    CopValue._ext = None
    
    #-----< EngineCharacteristics >-----#
    EngineCharacteristics = INT(name='EngineCharacteristics', mode=MODE_TYPE)
    EngineCharacteristics._cont = ASN1Dict([('noEntry', 0), ('noEngine', 1), ('petrolUnleaded', 2), ('petrolLeaded', 3), ('diesel', 4), ('lPG', 5), ('battery', 6), ('solar', 7), ('hybrid', 8), ('hydrogen', 9)])
    EngineCharacteristics._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Engine >-----#
    Engine = SEQ(name='Engine', mode=MODE_TYPE)
    _Engine_engineCapacity = INT(name='engineCapacity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _Engine_enginePower = INT(name='enginePower', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    Engine._cont = ASN1Dict([
        ('engineCapacity', _Engine_engineCapacity),
        ('enginePower', _Engine_enginePower),
        ])
    Engine._ext = None
    
    #-----< EquipmentOBUId >-----#
    EquipmentOBUId = OCT_STR(name='EquipmentOBUId', mode=MODE_TYPE)
    
    #-----< EquipmentStatus >-----#
    EquipmentStatus = BIT_STR(name='EquipmentStatus', mode=MODE_TYPE)
    EquipmentStatus._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< ExhaustEmissionValues >-----#
    ExhaustEmissionValues = SEQ(name='ExhaustEmissionValues', mode=MODE_TYPE)
    _ExhaustEmissionValues_unitType = ENUM(name='unitType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'UnitType')))
    _ExhaustEmissionValues_emissionCO = INT(name='emissionCO', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExhaustEmissionValues_emissionCO._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _ExhaustEmissionValues_emissionHC = INT(name='emissionHC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _ExhaustEmissionValues_emissionNOX = INT(name='emissionNOX', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _ExhaustEmissionValues_emissionHCNOX = INT(name='emissionHCNOX', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    ExhaustEmissionValues._cont = ASN1Dict([
        ('unitType', _ExhaustEmissionValues_unitType),
        ('emissionCO', _ExhaustEmissionValues_emissionCO),
        ('emissionHC', _ExhaustEmissionValues_emissionHC),
        ('emissionNOX', _ExhaustEmissionValues_emissionNOX),
        ('emissionHCNOX', _ExhaustEmissionValues_emissionHCNOX),
        ])
    ExhaustEmissionValues._ext = None
    
    #-----< FutureCharacteristics >-----#
    FutureCharacteristics = INT(name='FutureCharacteristics', mode=MODE_TYPE)
    FutureCharacteristics._cont = ASN1Dict([('noEntry', 0), ('airSuspension', 1)])
    FutureCharacteristics._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ICC-Id >-----#
    ICC_Id = OCT_STR(name='ICC-Id', mode=MODE_TYPE)
    
    #-----< Int1 >-----#
    Int1 = INT(name='Int1', mode=MODE_TYPE)
    Int1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Int2 >-----#
    Int2 = INT(name='Int2', mode=MODE_TYPE)
    Int2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< Int3 >-----#
    Int3 = INT(name='Int3', mode=MODE_TYPE)
    Int3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    
    #-----< Int4 >-----#
    Int4 = INT(name='Int4', mode=MODE_TYPE)
    Int4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< LPN >-----#
    LPN = SEQ(name='LPN', mode=MODE_TYPE)
    _LPN_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _LPN_alphabetIndicator = ENUM(name='alphabetIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LPN_alphabetIndicator._cont = ASN1Dict([('latinAlphabetNo1', 1), ('latinAlphabetNo2', 2), ('latinAlphabetNo3', 3), ('latinAlphabetNo4', 4), ('latinCyrillicAlphabet', 5), ('latinArabicAlphabet', 6), ('latinGreekAlphabet', 7), ('latinHebrewAlphabet', 8), ('latinAlphabetNo5', 9), ('latinAlphabetNo6', 10), ('twoOctetBMP', 11), ('fourOctetCanonical', 12), ('reservedForUse1', 13), ('reservedForUse2', 14), ('reservedForUse3', 15), ('reservedForUse4', 16), ('reservedForUse5', 17), ('reservedForUse6', 18), ('reservedForUse7', 19), ('reservedForUse8', 20), ('reservedForUse9', 21), ('reservedForUse10', 22), ('reservedForUse11', 23), ('reservedForUse12', 24), ('reservedForUse13', 25), ('reservedForUse14', 26), ('reservedForUse15', 27), ('reservedForUse16', 28), ('reservedForUse17', 29), ('reservedForUse18', 30), ('reservedForUse19', 31), ('reservedForUse20', 32), ('reservedForUse21', 33)])
    _LPN_alphabetIndicator._ext = None
    _LPN_licencePlateNumber = OCT_STR(name='licencePlateNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    LPN._cont = ASN1Dict([
        ('countryCode', _LPN_countryCode),
        ('alphabetIndicator', _LPN_alphabetIndicator),
        ('licencePlateNumber', _LPN_licencePlateNumber),
        ])
    LPN._ext = None
    
    #-----< PassengerCapacity >-----#
    PassengerCapacity = SEQ(name='PassengerCapacity', mode=MODE_TYPE)
    _PassengerCapacity_numberOfSeats = INT(name='numberOfSeats', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _PassengerCapacity_numberOfStandingPlaces = INT(name='numberOfStandingPlaces', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    PassengerCapacity._cont = ASN1Dict([
        ('numberOfSeats', _PassengerCapacity_numberOfSeats),
        ('numberOfStandingPlaces', _PassengerCapacity_numberOfStandingPlaces),
        ])
    PassengerCapacity._ext = None
    
    #-----< PaymentFee >-----#
    PaymentFee = SEQ(name='PaymentFee', mode=MODE_TYPE)
    _PaymentFee_paymentFeeAmount = INT(name='paymentFeeAmount', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _PaymentFee_paymentFeeUnit = OCT_STR(name='paymentFeeUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PayUnit')))
    PaymentFee._cont = ASN1Dict([
        ('paymentFeeAmount', _PaymentFee_paymentFeeAmount),
        ('paymentFeeUnit', _PaymentFee_paymentFeeUnit),
        ])
    PaymentFee._ext = None
    
    #-----< PaymentMeans >-----#
    PaymentMeans = SEQ(name='PaymentMeans', mode=MODE_TYPE)
    _PaymentMeans_personalAccountNumber = OCT_STR(name='personalAccountNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PersonalAccountNumber')))
    _PaymentMeans_paymentMeansExpiryDate = SEQ(name='paymentMeansExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    _PaymentMeans_pamentMeansUsageControl = OCT_STR(name='pamentMeansUsageControl', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PaymentMeans_pamentMeansUsageControl._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    PaymentMeans._cont = ASN1Dict([
        ('personalAccountNumber', _PaymentMeans_personalAccountNumber),
        ('paymentMeansExpiryDate', _PaymentMeans_paymentMeansExpiryDate),
        ('pamentMeansUsageControl', _PaymentMeans_pamentMeansUsageControl),
        ])
    PaymentMeans._ext = None
    
    #-----< PaymentMeansBalance >-----#
    PaymentMeansBalance = CHOICE(name='PaymentMeansBalance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'SignedValue')))
    
    #-----< SignedValue >-----#
    SignedValue = CHOICE(name='SignedValue', mode=MODE_TYPE)
    _SignedValue_positive = INT(name='positive', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SignedValue_positive._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _SignedValue_negative = INT(name='negative', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SignedValue_negative._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=-1)], ev=None, er=[])
    SignedValue._cont = ASN1Dict([
        ('positive', _SignedValue_positive),
        ('negative', _SignedValue_negative),
        ])
    SignedValue._ext = None
    
    #-----< PaymentMeansUnit >-----#
    PaymentMeansUnit = OCT_STR(name='PaymentMeansUnit', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'PayUnit')))
    
    #-----< PaymentSecurityData >-----#
    PaymentSecurityData = OCT_STR(name='PaymentSecurityData', mode=MODE_TYPE)
    
    #-----< PayUnit >-----#
    PayUnit = OCT_STR(name='PayUnit', mode=MODE_TYPE)
    PayUnit._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< PersonalAccountNumber >-----#
    PersonalAccountNumber = OCT_STR(name='PersonalAccountNumber', mode=MODE_TYPE)
    PersonalAccountNumber._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< Provider >-----#
    Provider = SEQ(name='Provider', mode=MODE_TYPE)
    _Provider_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _Provider_providerIdentifier = INT(name='providerIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'IssuerIdentifier')))
    Provider._cont = ASN1Dict([
        ('countryCode', _Provider_countryCode),
        ('providerIdentifier', _Provider_providerIdentifier),
        ])
    Provider._ext = None
    
    #-----< PurseBalance >-----#
    PurseBalance = SEQ(name='PurseBalance', mode=MODE_TYPE)
    _PurseBalance_purseValue = CHOICE(name='purseValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SignedValue')))
    _PurseBalance_purseUnit = OCT_STR(name='purseUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PayUnit')))
    PurseBalance._cont = ASN1Dict([
        ('purseValue', _PurseBalance_purseValue),
        ('purseUnit', _PurseBalance_purseUnit),
        ])
    PurseBalance._ext = None
    
    #-----< ReceiptContract >-----#
    ReceiptContract = SEQ(name='ReceiptContract', mode=MODE_TYPE)
    _ReceiptContract_sessionContractProvider = SEQ(name='sessionContractProvider', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptContract_sessionTypeOfContract = OCT_STR(name='sessionTypeOfContract', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptContract_sessionTypeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ReceiptContract_sessionContractSerialNumber = INT(name='sessionContractSerialNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    ReceiptContract._cont = ASN1Dict([
        ('sessionContractProvider', _ReceiptContract_sessionContractProvider),
        ('sessionTypeOfContract', _ReceiptContract_sessionTypeOfContract),
        ('sessionContractSerialNumber', _ReceiptContract_sessionContractSerialNumber),
        ])
    ReceiptContract._ext = None
    
    #-----< ReceiptData1 >-----#
    ReceiptData1 = SEQ(name='ReceiptData1', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData')))
    
    #-----< ReceiptData2 >-----#
    ReceiptData2 = SEQ(name='ReceiptData2', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData')))
    
    #-----< ReceiptData >-----#
    ReceiptData = SEQ(name='ReceiptData', mode=MODE_TYPE)
    _ReceiptData_sessionTime = SEQ(name='sessionTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateAndTime')))
    _ReceiptData_sessionServiceProvider = SEQ(name='sessionServiceProvider', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptData_locationOfStation = INT(name='locationOfStation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _ReceiptData_sessionLocation = SEQ(name='sessionLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SessionLocation')))
    _ReceiptData_sessionType = INT(name='sessionType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _ReceiptData_sessionResult = INT(name='sessionResult', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultOp')))
    _ReceiptData_sessionTariffClass = INT(name='sessionTariffClass', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _ReceiptData_sessionClaimedClass = INT(name='sessionClaimedClass', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _ReceiptData_sessionFee = SEQ(name='sessionFee', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _ReceiptData_sessionContractProvider = SEQ(name='sessionContractProvider', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptData_sessionTypeOfContract = OCT_STR(name='sessionTypeOfContract', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_sessionTypeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ReceiptData_sessionContextVersion = INT(name='sessionContextVersion', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_sessionContextVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _ReceiptData_receiptDataAuthenticator = OCT_STR(name='receiptDataAuthenticator', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_receiptDataAuthenticator._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    ReceiptData._cont = ASN1Dict([
        ('sessionTime', _ReceiptData_sessionTime),
        ('sessionServiceProvider', _ReceiptData_sessionServiceProvider),
        ('locationOfStation', _ReceiptData_locationOfStation),
        ('sessionLocation', _ReceiptData_sessionLocation),
        ('sessionType', _ReceiptData_sessionType),
        ('sessionResult', _ReceiptData_sessionResult),
        ('sessionTariffClass', _ReceiptData_sessionTariffClass),
        ('sessionClaimedClass', _ReceiptData_sessionClaimedClass),
        ('sessionFee', _ReceiptData_sessionFee),
        ('sessionContractProvider', _ReceiptData_sessionContractProvider),
        ('sessionTypeOfContract', _ReceiptData_sessionTypeOfContract),
        ('sessionContextVersion', _ReceiptData_sessionContextVersion),
        ('receiptDataAuthenticator', _ReceiptData_receiptDataAuthenticator),
        ])
    ReceiptData._ext = None
    
    #-----< ReceiptDistance >-----#
    ReceiptDistance = INT(name='ReceiptDistance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int3')))
    
    #-----< ReceiptFinancialPart >-----#
    ReceiptFinancialPart = SEQ(name='ReceiptFinancialPart', mode=MODE_TYPE)
    _ReceiptFinancialPart_personalAccountNumber = OCT_STR(name='personalAccountNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PersonalAccountNumber')))
    _ReceiptFinancialPart_sessionPaymentFee = SEQ(name='sessionPaymentFee', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _ReceiptFinancialPart_sessionCurrentBalance = SEQ(name='sessionCurrentBalance', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PurseBalance')))
    _ReceiptFinancialPart_receiptFinancialSerialNumber = INT(name='receiptFinancialSerialNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    ReceiptFinancialPart._cont = ASN1Dict([
        ('personalAccountNumber', _ReceiptFinancialPart_personalAccountNumber),
        ('sessionPaymentFee', _ReceiptFinancialPart_sessionPaymentFee),
        ('sessionCurrentBalance', _ReceiptFinancialPart_sessionCurrentBalance),
        ('receiptFinancialSerialNumber', _ReceiptFinancialPart_receiptFinancialSerialNumber),
        ])
    ReceiptFinancialPart._ext = None
    
    #-----< ReceiptICC-Id >-----#
    ReceiptICC_Id = OCT_STR(name='ReceiptICC-Id', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'ICC-Id')))
    
    #-----< ReceiptOBUId >-----#
    ReceiptOBUId = OCT_STR(name='ReceiptOBUId', mode=MODE_TYPE)
    
    #-----< ReceiptServicePart >-----#
    ReceiptServicePart = SEQ(name='ReceiptServicePart', mode=MODE_TYPE)
    _ReceiptServicePart_sessionTime = SEQ(name='sessionTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateAndTime')))
    _ReceiptServicePart_sessionServiceProvider = SEQ(name='sessionServiceProvider', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptServicePart_stationLocation = INT(name='stationLocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptServicePart_stationLocation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1048575)], ev=None, er=[])
    _ReceiptServicePart_sessionLocation = BIT_STR(name='sessionLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptServicePart_sessionLocation._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _ReceiptServicePart_typeOfSession = ENUM(name='typeOfSession', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'StationType')))
    _ReceiptServicePart_sessionResultOperational = INT(name='sessionResultOperational', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultOp')))
    _ReceiptServicePart_sessionResultFinancial = OCT_STR(name='sessionResultFinancial', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultFin')))
    ReceiptServicePart._cont = ASN1Dict([
        ('sessionTime', _ReceiptServicePart_sessionTime),
        ('sessionServiceProvider', _ReceiptServicePart_sessionServiceProvider),
        ('stationLocation', _ReceiptServicePart_stationLocation),
        ('sessionLocation', _ReceiptServicePart_sessionLocation),
        ('typeOfSession', _ReceiptServicePart_typeOfSession),
        ('sessionResultOperational', _ReceiptServicePart_sessionResultOperational),
        ('sessionResultFinancial', _ReceiptServicePart_sessionResultFinancial),
        ])
    ReceiptServicePart._ext = None
    
    #-----< ReceiptServiceSerialNumber >-----#
    ReceiptServiceSerialNumber = INT(name='ReceiptServiceSerialNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int3')))
    
    #-----< ReceiptAuthenticator >-----#
    ReceiptAuthenticator = OCT_STR(name='ReceiptAuthenticator', mode=MODE_TYPE)
    
    #-----< ReceiptText >-----#
    ReceiptText = OCT_STR(name='ReceiptText', mode=MODE_TYPE)
    
    #-----< ResultFin >-----#
    ResultFin = OCT_STR(name='ResultFin', mode=MODE_TYPE)
    ResultFin._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ResultOp >-----#
    ResultOp = INT(name='ResultOp', mode=MODE_TYPE)
    ResultOp._cont = ASN1Dict([('correctTransaction', 0), ('obeStatusNotAccepted', 1), ('equipmentStatusNotAccepted', 2), ('contractNotInWhiteList', 3), ('contractIdentifierInBlackList', 4), ('contractIdentifierNotCorrect', 5), ('expiredContract', 6), ('contractRestrictionsNotFulfilled', 7), ('claimedVehicleCharacteristicsNotValid', 8), ('vehicleClassAuthenticationFailed', 9), ('entryVehicleClassDifferentFromExitVehicleClass', 10), ('entryReceiptMissing', 11), ('entryReceiptNotValid', 12), ('entryTollStationNotValid', 13), ('equipmentNotCertified', 14), ('timeDifference', 15), ('accessCredentialsNotAccepted', 16), ('contractAuthenticatorNotAccepted', 17), ('receiptAuthenticatorNotAccepted', 18), ('claimedVehicleCharacteristicsMissing', 19), ('paymentMeansNotAccepted', 20), ('paymentAuthenticatorNotAccepted', 21), ('paymentMeansInBlackList', 22), ('paymentMeansNotCorrect', 23), ('expiredPaymentMeans', 24), ('paymentMeansRestrictionsNotFulfilled', 25)])
    ResultOp._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SessionClass >-----#
    SessionClass = SEQ(name='SessionClass', mode=MODE_TYPE)
    _SessionClass_sessionTariffClass = INT(name='sessionTariffClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _SessionClass_sessionClaimedClass = INT(name='sessionClaimedClass', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    SessionClass._cont = ASN1Dict([
        ('sessionTariffClass', _SessionClass_sessionTariffClass),
        ('sessionClaimedClass', _SessionClass_sessionClaimedClass),
        ])
    SessionClass._ext = None
    
    #-----< SessionLocation >-----#
    SessionLocation = SEQ(name='SessionLocation', mode=MODE_TYPE)
    _SessionLocation_ascendingKilometrage = BOOL(name='ascendingKilometrage', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionLocation_laneCodeNumber = INT(name='laneCodeNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionLocation_laneCodeNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    SessionLocation._cont = ASN1Dict([
        ('ascendingKilometrage', _SessionLocation_ascendingKilometrage),
        ('laneCodeNumber', _SessionLocation_laneCodeNumber),
        ])
    SessionLocation._ext = None
    
    #-----< StationType >-----#
    StationType = ENUM(name='StationType', mode=MODE_TYPE)
    StationType._cont = ASN1Dict([('unspecified', 0), ('closedEntryWithPayment', 1), ('closedEntryWithoutPayment', 2), ('closedTransit', 3), ('closedExit', 4), ('closedCredit', 5), ('mixed', 6), ('passage', 7), ('checkpoint', 8), ('reload', 9), ('reservedForFutureCENUse1', 10), ('reservedForFutureCENUse2', 11), ('reservedForFutureCENUse3', 12), ('reservedForFutureCENUse4', 13), ('privateUse5', 14), ('privateUse6', 15)])
    StationType._ext = None
    
    #-----< DateAndTime >-----#
    DateAndTime = SEQ(name='DateAndTime', mode=MODE_TYPE)
    _DateAndTime_timeDate = SEQ(name='timeDate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    _DateAndTime_timeCompact = SEQ(name='timeCompact', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_hours = INT(name='hours', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_hours._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=23)], ev=None, er=[])
    __DateAndTime_timeCompact_mins = INT(name='mins', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_mins._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    __DateAndTime_timeCompact_double_secs = INT(name='double-secs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_double_secs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=30)], ev=None, er=[])
    _DateAndTime_timeCompact._cont = ASN1Dict([
        ('hours', __DateAndTime_timeCompact_hours),
        ('mins', __DateAndTime_timeCompact_mins),
        ('double-secs', __DateAndTime_timeCompact_double_secs),
        ])
    _DateAndTime_timeCompact._ext = None
    DateAndTime._cont = ASN1Dict([
        ('timeDate', _DateAndTime_timeDate),
        ('timeCompact', _DateAndTime_timeCompact),
        ])
    DateAndTime._ext = None
    
    #-----< SoundLevel >-----#
    SoundLevel = SEQ(name='SoundLevel', mode=MODE_TYPE)
    _SoundLevel_soundstationary = INT(name='soundstationary', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _SoundLevel_sounddriveby = INT(name='sounddriveby', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    SoundLevel._cont = ASN1Dict([
        ('soundstationary', _SoundLevel_soundstationary),
        ('sounddriveby', _SoundLevel_sounddriveby),
        ])
    SoundLevel._ext = None
    
    #-----< TrailerCharacteristics >-----#
    TrailerCharacteristics = SEQ(name='TrailerCharacteristics', mode=MODE_TYPE)
    _TrailerCharacteristics_trailerDetails = SEQ(name='trailerDetails', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerDetails')))
    _TrailerCharacteristics_trailerMaxLadenWeight = INT(name='trailerMaxLadenWeight', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _TrailerCharacteristics_trailerWeightUnladen = INT(name='trailerWeightUnladen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    TrailerCharacteristics._cont = ASN1Dict([
        ('trailerDetails', _TrailerCharacteristics_trailerDetails),
        ('trailerMaxLadenWeight', _TrailerCharacteristics_trailerMaxLadenWeight),
        ('trailerWeightUnladen', _TrailerCharacteristics_trailerWeightUnladen),
        ])
    TrailerCharacteristics._ext = None
    
    #-----< TrailerDetails >-----#
    TrailerDetails = SEQ(name='TrailerDetails', mode=MODE_TYPE)
    _TrailerDetails_trailerType = INT(name='trailerType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TrailerDetails_trailerType._cont = ASN1Dict([('notPresent', 0), ('trailer', 1), ('semitrailer', 2)])
    _TrailerDetails_trailerType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _TrailerDetails_trailerAxles = INT(name='trailerAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerAxles')))
    TrailerDetails._cont = ASN1Dict([
        ('trailerType', _TrailerDetails_trailerType),
        ('trailerAxles', _TrailerDetails_trailerAxles),
        ])
    TrailerDetails._ext = None
    
    #-----< TrailerLicencePlateNumber >-----#
    TrailerLicencePlateNumber = SEQ(name='TrailerLicencePlateNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    
    #-----< UnitType >-----#
    UnitType = ENUM(name='UnitType', mode=MODE_TYPE)
    UnitType._cont = ASN1Dict([('mg-km', 0), ('mg-kWh', 1)])
    UnitType._ext = None
    
    #-----< ValidityOfContract >-----#
    ValidityOfContract = SEQ(name='ValidityOfContract', mode=MODE_TYPE)
    _ValidityOfContract_issuerRestrictions = OCT_STR(name='issuerRestrictions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ValidityOfContract_issuerRestrictions._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ValidityOfContract_contractExpiryDate = SEQ(name='contractExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    ValidityOfContract._cont = ASN1Dict([
        ('issuerRestrictions', _ValidityOfContract_issuerRestrictions),
        ('contractExpiryDate', _ValidityOfContract_contractExpiryDate),
        ])
    ValidityOfContract._ext = None
    
    #-----< VehicleAuthenticator >-----#
    VehicleAuthenticator = OCT_STR(name='VehicleAuthenticator', mode=MODE_TYPE)
    
    #-----< VehicleAxles >-----#
    VehicleAxles = SEQ(name='VehicleAxles', mode=MODE_TYPE)
    _VehicleAxles_vehicleFirstAxleHeight = INT(name='vehicleFirstAxleHeight', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _VehicleAxles_vehicleAxlesNumber = SEQ(name='vehicleAxlesNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __VehicleAxles_vehicleAxlesNumber_tyreType = ENUM(name='tyreType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __VehicleAxles_vehicleAxlesNumber_tyreType._cont = ASN1Dict([('notSpecified', 0), ('singleTyre', 1), ('dualTyres', 2), ('reservedForUse', 3)])
    __VehicleAxles_vehicleAxlesNumber_tyreType._ext = None
    __VehicleAxles_vehicleAxlesNumber_numberOfAxles = SEQ(name='numberOfAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_trailerAxles = INT(name='trailerAxles', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerAxles')))
    ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_tractorAxles = INT(name='tractorAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TractorAxles')))
    __VehicleAxles_vehicleAxlesNumber_numberOfAxles._cont = ASN1Dict([
        ('trailerAxles', ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_trailerAxles),
        ('tractorAxles', ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_tractorAxles),
        ])
    __VehicleAxles_vehicleAxlesNumber_numberOfAxles._ext = None
    _VehicleAxles_vehicleAxlesNumber._cont = ASN1Dict([
        ('tyreType', __VehicleAxles_vehicleAxlesNumber_tyreType),
        ('numberOfAxles', __VehicleAxles_vehicleAxlesNumber_numberOfAxles),
        ])
    _VehicleAxles_vehicleAxlesNumber._ext = None
    VehicleAxles._cont = ASN1Dict([
        ('vehicleFirstAxleHeight', _VehicleAxles_vehicleFirstAxleHeight),
        ('vehicleAxlesNumber', _VehicleAxles_vehicleAxlesNumber),
        ])
    VehicleAxles._ext = None
    
    #-----< TrailerAxles >-----#
    TrailerAxles = INT(name='TrailerAxles', mode=MODE_TYPE)
    TrailerAxles._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< TractorAxles >-----#
    TractorAxles = INT(name='TractorAxles', mode=MODE_TYPE)
    TractorAxles._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< VehicleClass >-----#
    VehicleClass = INT(name='VehicleClass', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    
    #-----< VehicleDimensions >-----#
    VehicleDimensions = SEQ(name='VehicleDimensions', mode=MODE_TYPE)
    _VehicleDimensions_vehicleLengthOverall = INT(name='vehicleLengthOverall', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _VehicleDimensions_vehicleHeigthOverall = INT(name='vehicleHeigthOverall', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _VehicleDimensions_vehicleWidthOverall = INT(name='vehicleWidthOverall', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    VehicleDimensions._cont = ASN1Dict([
        ('vehicleLengthOverall', _VehicleDimensions_vehicleLengthOverall),
        ('vehicleHeigthOverall', _VehicleDimensions_vehicleHeigthOverall),
        ('vehicleWidthOverall', _VehicleDimensions_vehicleWidthOverall),
        ])
    VehicleDimensions._ext = None
    
    #-----< VehicleLicencePlateNumber >-----#
    VehicleLicencePlateNumber = SEQ(name='VehicleLicencePlateNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    
    #-----< VehicleIdentificationNumber >-----#
    VehicleIdentificationNumber = SEQ(name='VehicleIdentificationNumber', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CS5')))
    
    #-----< VehicleSpecificCharacteristics >-----#
    VehicleSpecificCharacteristics = SEQ(name='VehicleSpecificCharacteristics', mode=MODE_TYPE)
    _VehicleSpecificCharacteristics_environmentalCharacteristics = SEQ(name='environmentalCharacteristics', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EnvironmentalCharacteristics')))
    _VehicleSpecificCharacteristics_engineCharacteristics = INT(name='engineCharacteristics', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EngineCharacteristics')))
    _VehicleSpecificCharacteristics_descriptiveCharacteristics = INT(name='descriptiveCharacteristics', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DescriptiveCharacteristics')))
    _VehicleSpecificCharacteristics_futureCharacteristics = INT(name='futureCharacteristics', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'FutureCharacteristics')))
    VehicleSpecificCharacteristics._cont = ASN1Dict([
        ('environmentalCharacteristics', _VehicleSpecificCharacteristics_environmentalCharacteristics),
        ('engineCharacteristics', _VehicleSpecificCharacteristics_engineCharacteristics),
        ('descriptiveCharacteristics', _VehicleSpecificCharacteristics_descriptiveCharacteristics),
        ('futureCharacteristics', _VehicleSpecificCharacteristics_futureCharacteristics),
        ])
    VehicleSpecificCharacteristics._ext = None
    
    #-----< VehicleTotalDistance >-----#
    VehicleTotalDistance = INT(name='VehicleTotalDistance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    
    #-----< VehicleWeightLaden >-----#
    VehicleWeightLaden = INT(name='VehicleWeightLaden', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    
    #-----< VehicleCurrentMaxTrainWeight >-----#
    VehicleCurrentMaxTrainWeight = INT(name='VehicleCurrentMaxTrainWeight', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    
    #-----< VehicleWeightLimits >-----#
    VehicleWeightLimits = SEQ(name='VehicleWeightLimits', mode=MODE_TYPE)
    _VehicleWeightLimits_vehicleMaxLadenWeight = INT(name='vehicleMaxLadenWeight', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _VehicleWeightLimits_vehicleTrainMaximumWeight = INT(name='vehicleTrainMaximumWeight', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _VehicleWeightLimits_vehicleWeightUnladen = INT(name='vehicleWeightUnladen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    VehicleWeightLimits._cont = ASN1Dict([
        ('vehicleMaxLadenWeight', _VehicleWeightLimits_vehicleMaxLadenWeight),
        ('vehicleTrainMaximumWeight', _VehicleWeightLimits_vehicleTrainMaximumWeight),
        ('vehicleWeightUnladen', _VehicleWeightLimits_vehicleWeightUnladen),
        ])
    VehicleWeightLimits._ext = None
    
    _all_ = [
        ActualNumberOfPassengers,
        _AxleWeightLimits_maxLadenweightOnAxle1,
        _AxleWeightLimits_maxLadenweightOnAxle2,
        _AxleWeightLimits_maxLadenweightOnAxle3,
        _AxleWeightLimits_maxLadenweightOnAxle4,
        _AxleWeightLimits_maxLadenweightOnAxle5,
        AxleWeightLimits,
        _AddRq_attributeId,
        _AddRq_value,
        AddRq,
        ChannelId,
        _ChannelRq_channelId,
        _ChannelRq_apdu,
        ChannelRq,
        _ChannelRs_channelId,
        _ChannelRs_apdu,
        ChannelRs,
        _CopyRq_destinationEID,
        _CopyRq_attributeIdList,
        CopyRq,
        _CreditRq_refund,
        _CreditRq_nonce,
        _CreditRq_key,
        CreditRq,
        _CreditRs_creditResult,
        _CreditRs_creditAuthenticator,
        CreditRs,
        _DebitRq_debitPaymentFee,
        _DebitRq_nonce,
        _DebitRq_keyRef,
        DebitRq,
        _DebitRs_debitResult,
        _DebitRs_debitAuthenticator,
        DebitRs,
        _GetInstanceRq_posOfFirstInstance,
        _GetInstanceRq_posOfLastInstance,
        _GetInstanceRq_attributeIdList,
        GetInstanceRq,
        _GetStampedRq_attributeIdList,
        _GetStampedRq_nonce,
        _GetStampedRq_keyRef,
        GetStampedRq,
        SetMMIRq,
        _SubRq_attributeId,
        _SubRq_value,
        SubRq,
        CO2EmissionValue,
        ContractSerialNumber,
        ContractAuthenticator,
        _ContractValidity_contractRestrictions,
        _ContractValidity_contractExpiryDate,
        ContractValidity,
        ContractVehicle,
        _DateCompact_year,
        _DateCompact_month,
        _DateCompact_day,
        DateCompact,
        DescriptiveCharacteristics,
        __DieselEmissionValues_particulate_unitType,
        __DieselEmissionValues_particulate_value,
        _DieselEmissionValues_particulate,
        _DieselEmissionValues_absorptionCoeff,
        DieselEmissionValues,
        _DriverCharacteristics_driverClass,
        _DriverCharacteristics_tripPurpose,
        DriverCharacteristics,
        _EFC_ContextMark_contractProvider,
        _EFC_ContextMark_typeOfContract,
        _EFC_ContextMark_contextVersion,
        EFC_ContextMark,
        _EnvironmentalCharacteristics_euroValue,
        _EnvironmentalCharacteristics_copValue,
        EnvironmentalCharacteristics,
        EuroValue,
        CopValue,
        EngineCharacteristics,
        _Engine_engineCapacity,
        _Engine_enginePower,
        Engine,
        EquipmentOBUId,
        EquipmentStatus,
        _ExhaustEmissionValues_unitType,
        _ExhaustEmissionValues_emissionCO,
        _ExhaustEmissionValues_emissionHC,
        _ExhaustEmissionValues_emissionNOX,
        _ExhaustEmissionValues_emissionHCNOX,
        ExhaustEmissionValues,
        FutureCharacteristics,
        ICC_Id,
        Int1,
        Int2,
        Int3,
        Int4,
        _LPN_countryCode,
        _LPN_alphabetIndicator,
        _LPN_licencePlateNumber,
        LPN,
        _PassengerCapacity_numberOfSeats,
        _PassengerCapacity_numberOfStandingPlaces,
        PassengerCapacity,
        _PaymentFee_paymentFeeAmount,
        _PaymentFee_paymentFeeUnit,
        PaymentFee,
        _PaymentMeans_personalAccountNumber,
        _PaymentMeans_paymentMeansExpiryDate,
        _PaymentMeans_pamentMeansUsageControl,
        PaymentMeans,
        PaymentMeansBalance,
        _SignedValue_positive,
        _SignedValue_negative,
        SignedValue,
        PaymentMeansUnit,
        PaymentSecurityData,
        PayUnit,
        PersonalAccountNumber,
        _Provider_countryCode,
        _Provider_providerIdentifier,
        Provider,
        _PurseBalance_purseValue,
        _PurseBalance_purseUnit,
        PurseBalance,
        _ReceiptContract_sessionContractProvider,
        _ReceiptContract_sessionTypeOfContract,
        _ReceiptContract_sessionContractSerialNumber,
        ReceiptContract,
        ReceiptData1,
        ReceiptData2,
        _ReceiptData_sessionTime,
        _ReceiptData_sessionServiceProvider,
        _ReceiptData_locationOfStation,
        _ReceiptData_sessionLocation,
        _ReceiptData_sessionType,
        _ReceiptData_sessionResult,
        _ReceiptData_sessionTariffClass,
        _ReceiptData_sessionClaimedClass,
        _ReceiptData_sessionFee,
        _ReceiptData_sessionContractProvider,
        _ReceiptData_sessionTypeOfContract,
        _ReceiptData_sessionContextVersion,
        _ReceiptData_receiptDataAuthenticator,
        ReceiptData,
        ReceiptDistance,
        _ReceiptFinancialPart_personalAccountNumber,
        _ReceiptFinancialPart_sessionPaymentFee,
        _ReceiptFinancialPart_sessionCurrentBalance,
        _ReceiptFinancialPart_receiptFinancialSerialNumber,
        ReceiptFinancialPart,
        ReceiptICC_Id,
        ReceiptOBUId,
        _ReceiptServicePart_sessionTime,
        _ReceiptServicePart_sessionServiceProvider,
        _ReceiptServicePart_stationLocation,
        _ReceiptServicePart_sessionLocation,
        _ReceiptServicePart_typeOfSession,
        _ReceiptServicePart_sessionResultOperational,
        _ReceiptServicePart_sessionResultFinancial,
        ReceiptServicePart,
        ReceiptServiceSerialNumber,
        ReceiptAuthenticator,
        ReceiptText,
        ResultFin,
        ResultOp,
        _SessionClass_sessionTariffClass,
        _SessionClass_sessionClaimedClass,
        SessionClass,
        _SessionLocation_ascendingKilometrage,
        _SessionLocation_laneCodeNumber,
        SessionLocation,
        StationType,
        _DateAndTime_timeDate,
        __DateAndTime_timeCompact_hours,
        __DateAndTime_timeCompact_mins,
        __DateAndTime_timeCompact_double_secs,
        _DateAndTime_timeCompact,
        DateAndTime,
        _SoundLevel_soundstationary,
        _SoundLevel_sounddriveby,
        SoundLevel,
        _TrailerCharacteristics_trailerDetails,
        _TrailerCharacteristics_trailerMaxLadenWeight,
        _TrailerCharacteristics_trailerWeightUnladen,
        TrailerCharacteristics,
        _TrailerDetails_trailerType,
        _TrailerDetails_trailerAxles,
        TrailerDetails,
        TrailerLicencePlateNumber,
        UnitType,
        _ValidityOfContract_issuerRestrictions,
        _ValidityOfContract_contractExpiryDate,
        ValidityOfContract,
        VehicleAuthenticator,
        _VehicleAxles_vehicleFirstAxleHeight,
        __VehicleAxles_vehicleAxlesNumber_tyreType,
        ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_trailerAxles,
        ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_tractorAxles,
        __VehicleAxles_vehicleAxlesNumber_numberOfAxles,
        _VehicleAxles_vehicleAxlesNumber,
        VehicleAxles,
        TrailerAxles,
        TractorAxles,
        VehicleClass,
        _VehicleDimensions_vehicleLengthOverall,
        _VehicleDimensions_vehicleHeigthOverall,
        _VehicleDimensions_vehicleWidthOverall,
        VehicleDimensions,
        VehicleLicencePlateNumber,
        VehicleIdentificationNumber,
        _VehicleSpecificCharacteristics_environmentalCharacteristics,
        _VehicleSpecificCharacteristics_engineCharacteristics,
        _VehicleSpecificCharacteristics_descriptiveCharacteristics,
        _VehicleSpecificCharacteristics_futureCharacteristics,
        VehicleSpecificCharacteristics,
        VehicleTotalDistance,
        VehicleWeightLaden,
        VehicleCurrentMaxTrainWeight,
        _VehicleWeightLimits_vehicleMaxLadenWeight,
        _VehicleWeightLimits_vehicleTrainMaximumWeight,
        _VehicleWeightLimits_vehicleWeightUnladen,
        VehicleWeightLimits,
    ]

class EfcDsrcGeneric:

    _name_  = 'EfcDsrcGeneric'
    _oid_   = [1, 0, 14906, 1, 5]
    
    _obj_ = [
        'Action-Request',
        'Action-Response',
        'ActionType',
        'ApplicationContextMark',
        'ApplicationList',
        'AttributeIdList',
        'AttributeList',
        'Attributes',
        'BeaconID',
        'BroadcastPool',
        'BST',
        'EfcContainer',
        'FileType',
        'Directory',
        'Dsrc-EID',
        'DSRCApplicationEntityID',
        'Event-Report-Request',
        'Event-Report-Response',
        'EventType',
        'File',
        'FileName',
        'Get-Request',
        'Get-Response',
        'Initialisation-Request',
        'Initialisation-Response',
        'ObeConfiguration',
        'Profile',
        'Record',
        'ReturnStatus',
        'Set-Request',
        'Set-Response',
        'Time',
        'T-APDUs-Generic',
        'T-APDUs',
        'VST',
        ]
    _type_ = [
        'Action-Request',
        'Action-Response',
        'ActionType',
        'ApplicationContextMark',
        'ApplicationList',
        'AttributeIdList',
        'AttributeList',
        'Attributes',
        'BeaconID',
        'BroadcastPool',
        'BST',
        'EfcContainer',
        'FileType',
        'Directory',
        'Dsrc-EID',
        'DSRCApplicationEntityID',
        'Event-Report-Request',
        'Event-Report-Response',
        'EventType',
        'File',
        'FileName',
        'Get-Request',
        'Get-Response',
        'Initialisation-Request',
        'Initialisation-Response',
        'ObeConfiguration',
        'Profile',
        'Record',
        'ReturnStatus',
        'Set-Request',
        'Set-Response',
        'Time',
        'T-APDUs-Generic',
        'T-APDUs',
        'VST',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        'Action-Request',
        'Action-Response',
        'AttributeList',
        'Attributes',
        'Event-Report-Request',
        'Get-Response',
        'Set-Request',
        'T-APDUs-Generic',
        ]
    
    #-----< Action-Request >-----#
    Action_Request = SEQ(name='Action-Request', mode=MODE_TYPE, param=True)
    
    #-----< Action-Response >-----#
    Action_Response = SEQ(name='Action-Response', mode=MODE_TYPE, param=True)
    
    #-----< ActionType >-----#
    ActionType = INT(name='ActionType', mode=MODE_TYPE)
    ActionType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< ApplicationContextMark >-----#
    ApplicationContextMark = CHOICE(name='ApplicationContextMark', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    
    #-----< ApplicationList >-----#
    ApplicationList = SEQ_OF(name='ApplicationList', mode=MODE_TYPE)
    _ApplicationList__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __ApplicationList__item__aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'DSRCApplicationEntityID')))
    __ApplicationList__item__eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    __ApplicationList__item__parameter = CHOICE(name='parameter', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationContextMark')), opt=True)
    _ApplicationList__item_._cont = ASN1Dict([
        ('aid', __ApplicationList__item__aid),
        ('eid', __ApplicationList__item__eid),
        ('parameter', __ApplicationList__item__parameter),
        ])
    _ApplicationList__item_._ext = None
    ApplicationList._cont = _ApplicationList__item_
    ApplicationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< AttributeIdList >-----#
    AttributeIdList = SEQ_OF(name='AttributeIdList', mode=MODE_TYPE)
    _AttributeIdList__item_ = INT(name='_item_', mode=MODE_TYPE)
    _AttributeIdList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    AttributeIdList._cont = _AttributeIdList__item_
    AttributeIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< AttributeList >-----#
    AttributeList = SEQ_OF(name='AttributeList', mode=MODE_TYPE, param=True)
    
    #-----< Attributes >-----#
    Attributes = SEQ(name='Attributes', mode=MODE_TYPE, param=True)
    
    #-----< BeaconID >-----#
    BeaconID = SEQ(name='BeaconID', mode=MODE_TYPE)
    _BeaconID_manufacturerid = INT(name='manufacturerid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeaconID_manufacturerid._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _BeaconID_individualid = INT(name='individualid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeaconID_individualid._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=134217727)], ev=None, er=[])
    BeaconID._cont = ASN1Dict([
        ('manufacturerid', _BeaconID_manufacturerid),
        ('individualid', _BeaconID_individualid),
        ])
    BeaconID._ext = None
    
    #-----< BroadcastPool >-----#
    BroadcastPool = SEQ(name='BroadcastPool', mode=MODE_TYPE)
    _BroadcastPool_directoryvalue = SEQ_OF(name='directoryvalue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Directory')))
    _BroadcastPool_content = SEQ_OF(name='content', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BroadcastPool_content__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'File')))
    _BroadcastPool_content._cont = __BroadcastPool_content__item_
    _BroadcastPool_content._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    BroadcastPool._cont = ASN1Dict([
        ('directoryvalue', _BroadcastPool_directoryvalue),
        ('content', _BroadcastPool_content),
        ])
    BroadcastPool._ext = None
    
    #-----< BST >-----#
    BST = SEQ(name='BST', mode=MODE_TYPE)
    _BST_rsu = SEQ(name='rsu', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'BeaconID')))
    _BST_time = INT(name='time', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Time')))
    _BST_profile = INT(name='profile', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Profile')))
    _BST_mandApplications = SEQ_OF(name='mandApplications', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationList')))
    _BST_nonmandApplications = SEQ_OF(name='nonmandApplications', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationList')), opt=True)
    _BST_profileList = SEQ_OF(name='profileList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BST_profileList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Profile')))
    _BST_profileList._cont = __BST_profileList__item_
    _BST_profileList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    BST._cont = ASN1Dict([
        ('rsu', _BST_rsu),
        ('time', _BST_time),
        ('profile', _BST_profile),
        ('mandApplications', _BST_mandApplications),
        ('nonmandApplications', _BST_nonmandApplications),
        ('profileList', _BST_profileList),
        ])
    BST._ext = None
    
    #-----< EfcContainer >-----#
    EfcContainer = CHOICE(name='EfcContainer', mode=MODE_TYPE)
    _EfcContainer_integer = INT(name='integer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_bitstring = BIT_STR(name='bitstring', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_octetstring = OCT_STR(name='octetstring', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_octetstring._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_beaconId = SEQ(name='beaconId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'BeaconID')))
    _EfcContainer_t_apdu = CHOICE(name='t-apdu', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'T-APDUs')))
    _EfcContainer_dsrcApplicationEntityId = INT(name='dsrcApplicationEntityId', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'DSRCApplicationEntityID')))
    _EfcContainer_dsrc_Ase_Id = INT(name='dsrc-Ase-Id', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _EfcContainer_attrIdList = SEQ_OF(name='attrIdList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    _EfcContainer_attrList = SEQ_OF(name='attrList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    __EfcContainer_attrList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ___EfcContainer_attrList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EfcContainer_attrList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ___EfcContainer_attrList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    __EfcContainer_attrList__item_._cont = ASN1Dict([
        ('attributeId', ___EfcContainer_attrList__item__attributeId),
        ('attributeValue', ___EfcContainer_attrList__item__attributeValue),
        ])
    __EfcContainer_attrList__item_._ext = None
    _EfcContainer_attrList._cont = __EfcContainer_attrList__item_
    _EfcContainer_attrList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_broadcastPool = SEQ(name='broadcastPool', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'BroadcastPool')))
    _EfcContainer_directory = SEQ_OF(name='directory', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Directory')))
    _EfcContainer_file = SEQ_OF(name='file', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'File')))
    _EfcContainer_fileType = NULL(name='fileType', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'FileType')))
    _EfcContainer_record = CHOICE(name='record', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Record')))
    _EfcContainer_time = INT(name='time', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Time')))
    _EfcContainer_vector = SEQ_OF(name='vector', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_vector__item_ = INT(name='_item_', mode=MODE_TYPE)
    __EfcContainer_vector__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_vector._cont = __EfcContainer_vector__item_
    _EfcContainer_vector._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EfcContainer_gstrq = SEQ(name='gstrq', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetStampedRq')))
    _EfcContainer_gstrs = SEQ(name='gstrs', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetStampedRs')))
    __EfcContainer_gstrs_attributeList = SEQ_OF(name='attributeList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    ___EfcContainer_gstrs_attributeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____EfcContainer_gstrs_attributeList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____EfcContainer_gstrs_attributeList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____EfcContainer_gstrs_attributeList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___EfcContainer_gstrs_attributeList__item_._cont = ASN1Dict([
        ('attributeId', ____EfcContainer_gstrs_attributeList__item__attributeId),
        ('attributeValue', ____EfcContainer_gstrs_attributeList__item__attributeValue),
        ])
    ___EfcContainer_gstrs_attributeList__item_._ext = None
    __EfcContainer_gstrs_attributeList._cont = ___EfcContainer_gstrs_attributeList__item_
    __EfcContainer_gstrs_attributeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __EfcContainer_gstrs_authenticator = OCT_STR(name='authenticator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_gstrs._cont = ASN1Dict([
        ('attributeList', __EfcContainer_gstrs_attributeList),
        ('authenticator', __EfcContainer_gstrs_authenticator),
        ])
    _EfcContainer_gstrs._ext = None
    _EfcContainer_sstrq = SEQ(name='sstrq', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SetStampedRq')))
    __EfcContainer_sstrq_attributeList = SEQ_OF(name='attributeList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    ___EfcContainer_sstrq_attributeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____EfcContainer_sstrq_attributeList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____EfcContainer_sstrq_attributeList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____EfcContainer_sstrq_attributeList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___EfcContainer_sstrq_attributeList__item_._cont = ASN1Dict([
        ('attributeId', ____EfcContainer_sstrq_attributeList__item__attributeId),
        ('attributeValue', ____EfcContainer_sstrq_attributeList__item__attributeValue),
        ])
    ___EfcContainer_sstrq_attributeList__item_._ext = None
    __EfcContainer_sstrq_attributeList._cont = ___EfcContainer_sstrq_attributeList__item_
    __EfcContainer_sstrq_attributeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __EfcContainer_sstrq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_sstrq_keyRef = INT(name='keyRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_sstrq_keyRef._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EfcContainer_sstrq._cont = ASN1Dict([
        ('attributeList', __EfcContainer_sstrq_attributeList),
        ('nonce', __EfcContainer_sstrq_nonce),
        ('keyRef', __EfcContainer_sstrq_keyRef),
        ])
    _EfcContainer_sstrq._ext = None
    _EfcContainer_ginrq = SEQ(name='ginrq', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetInstanceRq')))
    _EfcContainer_ginrs = SEQ_OF(name='ginrs', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetInstanceRs')))
    __EfcContainer_ginrs__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___EfcContainer_ginrs__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EfcContainer_ginrs__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ___EfcContainer_ginrs__item__attributeValues = CHOICE(name='attributeValues', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    __EfcContainer_ginrs__item_._cont = ASN1Dict([
        ('attributeId', ___EfcContainer_ginrs__item__attributeId),
        ('attributeValues', ___EfcContainer_ginrs__item__attributeValues),
        ])
    __EfcContainer_ginrs__item_._ext = None
    _EfcContainer_ginrs._cont = __EfcContainer_ginrs__item_
    _EfcContainer_ginrs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_sinrq = SEQ(name='sinrq', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SetInstanceRq')))
    __EfcContainer_sinrq_posOfInstance = INT(name='posOfInstance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_sinrq_posOfInstance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    __EfcContainer_sinrq_attribute = SEQ(name='attribute', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ___EfcContainer_sinrq_attribute_attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EfcContainer_sinrq_attribute_attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ___EfcContainer_sinrq_attribute_attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    __EfcContainer_sinrq_attribute._cont = ASN1Dict([
        ('attributeId', ___EfcContainer_sinrq_attribute_attributeId),
        ('attributeValue', ___EfcContainer_sinrq_attribute_attributeValue),
        ])
    __EfcContainer_sinrq_attribute._ext = None
    _EfcContainer_sinrq._cont = ASN1Dict([
        ('posOfInstance', __EfcContainer_sinrq_posOfInstance),
        ('attribute', __EfcContainer_sinrq_attribute),
        ])
    _EfcContainer_sinrq._ext = None
    _EfcContainer_charq = SEQ(name='charq', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelRq')))
    _EfcContainer_chars = SEQ(name='chars', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelRs')))
    _EfcContainer_cpprq = SEQ(name='cpprq', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CopyRq')))
    _EfcContainer_subrq = SEQ(name='subrq', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SubRq')))
    _EfcContainer_addrq = SEQ(name='addrq', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'AddRq')))
    _EfcContainer_debrq = SEQ(name='debrq', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DebitRq')))
    _EfcContainer_debrs = SEQ(name='debrs', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DebitRs')))
    _EfcContainer_crerq = SEQ(name='crerq', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CreditRq')))
    _EfcContainer_crers = SEQ(name='crers', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CreditRs')))
    _EfcContainer_efccontext = SEQ(name='efccontext', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EFC-ContextMark')))
    _EfcContainer_contser = INT(name='contser', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractSerialNumber')))
    _EfcContainer_contval = SEQ(name='contval', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractValidity')))
    _EfcContainer_contveh = SEQ(name='contveh', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractVehicle')))
    _EfcContainer_contauth = OCT_STR(name='contauth', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractAuthenticator')))
    _EfcContainer_recspt = SEQ(name='recspt', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptServicePart')))
    _EfcContainer_sessioncls = SEQ(name='sessioncls', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SessionClass')))
    _EfcContainer_recservserialno = INT(name='recservserialno', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptServiceSerialNumber')))
    _EfcContainer_recfinptENV = NULL(name='recfinptENV', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_reccont = SEQ(name='reccont', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptContract')))
    _EfcContainer_recOBUId = OCT_STR(name='recOBUId', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptOBUId')))
    _EfcContainer_recICCId = OCT_STR(name='recICCId', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptICC-Id')))
    _EfcContainer_rectext = OCT_STR(name='rectext', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptText')))
    _EfcContainer_recauth = OCT_STR(name='recauth', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptAuthenticator')))
    _EfcContainer_recdist = INT(name='recdist', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptDistance')))
    _EfcContainer_vehlpn = SEQ(name='vehlpn', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    _EfcContainer_vehid = SEQ(name='vehid', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CS5')))
    _EfcContainer_vehclass = INT(name='vehclass', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleClass')))
    _EfcContainer_vehdims = SEQ(name='vehdims', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleDimensions')))
    _EfcContainer_vehaxles = SEQ(name='vehaxles', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleAxles')))
    _EfcContainer_vehwtlims = SEQ(name='vehwtlims', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleWeightLimits')))
    _EfcContainer_vehwtladen = INT(name='vehwtladen', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleWeightLaden')))
    _EfcContainer_vehspchars = SEQ(name='vehspchars', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleSpecificCharacteristics')))
    _EfcContainer_vehauth = OCT_STR(name='vehauth', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleAuthenticator')))
    _EfcContainer_equOBUId = OCT_STR(name='equOBUId', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EquipmentOBUId')))
    _EfcContainer_equICCId = OCT_STR(name='equICCId', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ICC-Id')))
    _EfcContainer_equstat = BIT_STR(name='equstat', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EquipmentStatus')))
    _EfcContainer_dvrchars = SEQ(name='dvrchars', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DriverCharacteristics')))
    _EfcContainer_paymeansENV = NULL(name='paymeansENV', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_paymbal = CHOICE(name='paymbal', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentMeansBalance')))
    _EfcContainer_paymunit = OCT_STR(name='paymunit', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentMeansUnit')))
    _EfcContainer_paysecdata = OCT_STR(name='paysecdata', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentSecurityData')))
    _EfcContainer_paymeans = SEQ(name='paymeans', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentMeans')))
    _EfcContainer_recdata1 = SEQ(name='recdata1', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData1')))
    _EfcContainer_recdata2 = SEQ(name='recdata2', mode=MODE_TYPE, tag=(66, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData2')))
    _EfcContainer_valofcon = SEQ(name='valofcon', mode=MODE_TYPE, tag=(67, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ValidityOfContract')))
    _EfcContainer_recfinpt = SEQ(name='recfinpt', mode=MODE_TYPE, tag=(68, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptFinancialPart')))
    _EfcContainer_setmmirq = INT(name='setmmirq', mode=MODE_TYPE, tag=(69, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SetMMIRq')))
    _EfcContainer_awl = SEQ(name='awl', mode=MODE_TYPE, tag=(70, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'AxleWeightLimits')))
    _EfcContainer_paca = SEQ(name='paca', mode=MODE_TYPE, tag=(71, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PassengerCapacity')))
    _EfcContainer_eng = SEQ(name='eng', mode=MODE_TYPE, tag=(72, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Engine')))
    _EfcContainer_sl = SEQ(name='sl', mode=MODE_TYPE, tag=(73, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SoundLevel')))
    _EfcContainer_eev = SEQ(name='eev', mode=MODE_TYPE, tag=(74, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ExhaustEmissionValues')))
    _EfcContainer_dev = SEQ(name='dev', mode=MODE_TYPE, tag=(75, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DieselEmissionValues')))
    _EfcContainer_co2ev = INT(name='co2ev', mode=MODE_TYPE, tag=(76, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CO2EmissionValue')))
    _EfcContainer_vtd = INT(name='vtd', mode=MODE_TYPE, tag=(77, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleTotalDistance')))
    _EfcContainer_tlpn = SEQ(name='tlpn', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerLicencePlateNumber')))
    _EfcContainer_tch = SEQ(name='tch', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerCharacteristics')))
    _EfcContainer_anp = INT(name='anp', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ActualNumberOfPassengers')))
    _EfcContainer_rfuCenISO48 = NULL(name='rfuCenISO48', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO49 = NULL(name='rfuCenISO49', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO50 = NULL(name='rfuCenISO50', mode=MODE_TYPE, tag=(83, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO51 = NULL(name='rfuCenISO51', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO52 = NULL(name='rfuCenISO52', mode=MODE_TYPE, tag=(85, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO53 = NULL(name='rfuCenISO53', mode=MODE_TYPE, tag=(86, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EfcContainer._cont = ASN1Dict([
        ('integer', _EfcContainer_integer),
        ('bitstring', _EfcContainer_bitstring),
        ('octetstring', _EfcContainer_octetstring),
        ('universalString', _EfcContainer_universalString),
        ('beaconId', _EfcContainer_beaconId),
        ('t-apdu', _EfcContainer_t_apdu),
        ('dsrcApplicationEntityId', _EfcContainer_dsrcApplicationEntityId),
        ('dsrc-Ase-Id', _EfcContainer_dsrc_Ase_Id),
        ('attrIdList', _EfcContainer_attrIdList),
        ('attrList', _EfcContainer_attrList),
        ('broadcastPool', _EfcContainer_broadcastPool),
        ('directory', _EfcContainer_directory),
        ('file', _EfcContainer_file),
        ('fileType', _EfcContainer_fileType),
        ('record', _EfcContainer_record),
        ('time', _EfcContainer_time),
        ('vector', _EfcContainer_vector),
        ('gstrq', _EfcContainer_gstrq),
        ('gstrs', _EfcContainer_gstrs),
        ('sstrq', _EfcContainer_sstrq),
        ('ginrq', _EfcContainer_ginrq),
        ('ginrs', _EfcContainer_ginrs),
        ('sinrq', _EfcContainer_sinrq),
        ('charq', _EfcContainer_charq),
        ('chars', _EfcContainer_chars),
        ('cpprq', _EfcContainer_cpprq),
        ('subrq', _EfcContainer_subrq),
        ('addrq', _EfcContainer_addrq),
        ('debrq', _EfcContainer_debrq),
        ('debrs', _EfcContainer_debrs),
        ('crerq', _EfcContainer_crerq),
        ('crers', _EfcContainer_crers),
        ('efccontext', _EfcContainer_efccontext),
        ('contser', _EfcContainer_contser),
        ('contval', _EfcContainer_contval),
        ('contveh', _EfcContainer_contveh),
        ('contauth', _EfcContainer_contauth),
        ('recspt', _EfcContainer_recspt),
        ('sessioncls', _EfcContainer_sessioncls),
        ('recservserialno', _EfcContainer_recservserialno),
        ('recfinptENV', _EfcContainer_recfinptENV),
        ('reccont', _EfcContainer_reccont),
        ('recOBUId', _EfcContainer_recOBUId),
        ('recICCId', _EfcContainer_recICCId),
        ('rectext', _EfcContainer_rectext),
        ('recauth', _EfcContainer_recauth),
        ('recdist', _EfcContainer_recdist),
        ('vehlpn', _EfcContainer_vehlpn),
        ('vehid', _EfcContainer_vehid),
        ('vehclass', _EfcContainer_vehclass),
        ('vehdims', _EfcContainer_vehdims),
        ('vehaxles', _EfcContainer_vehaxles),
        ('vehwtlims', _EfcContainer_vehwtlims),
        ('vehwtladen', _EfcContainer_vehwtladen),
        ('vehspchars', _EfcContainer_vehspchars),
        ('vehauth', _EfcContainer_vehauth),
        ('equOBUId', _EfcContainer_equOBUId),
        ('equICCId', _EfcContainer_equICCId),
        ('equstat', _EfcContainer_equstat),
        ('dvrchars', _EfcContainer_dvrchars),
        ('paymeansENV', _EfcContainer_paymeansENV),
        ('paymbal', _EfcContainer_paymbal),
        ('paymunit', _EfcContainer_paymunit),
        ('paysecdata', _EfcContainer_paysecdata),
        ('paymeans', _EfcContainer_paymeans),
        ('recdata1', _EfcContainer_recdata1),
        ('recdata2', _EfcContainer_recdata2),
        ('valofcon', _EfcContainer_valofcon),
        ('recfinpt', _EfcContainer_recfinpt),
        ('setmmirq', _EfcContainer_setmmirq),
        ('awl', _EfcContainer_awl),
        ('paca', _EfcContainer_paca),
        ('eng', _EfcContainer_eng),
        ('sl', _EfcContainer_sl),
        ('eev', _EfcContainer_eev),
        ('dev', _EfcContainer_dev),
        ('co2ev', _EfcContainer_co2ev),
        ('vtd', _EfcContainer_vtd),
        ('tlpn', _EfcContainer_tlpn),
        ('tch', _EfcContainer_tch),
        ('anp', _EfcContainer_anp),
        ('rfuCenISO48', _EfcContainer_rfuCenISO48),
        ('rfuCenISO49', _EfcContainer_rfuCenISO49),
        ('rfuCenISO50', _EfcContainer_rfuCenISO50),
        ('rfuCenISO51', _EfcContainer_rfuCenISO51),
        ('rfuCenISO52', _EfcContainer_rfuCenISO52),
        ('rfuCenISO53', _EfcContainer_rfuCenISO53),
        ])
    EfcContainer._ext = []
    
    #-----< FileType >-----#
    FileType = NULL(name='FileType', mode=MODE_TYPE)
    
    #-----< Directory >-----#
    Directory = SEQ_OF(name='Directory', mode=MODE_TYPE)
    _Directory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'FileName')))
    Directory._cont = _Directory__item_
    Directory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Dsrc-EID >-----#
    Dsrc_EID = INT(name='Dsrc-EID', mode=MODE_TYPE)
    Dsrc_EID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< DSRCApplicationEntityID >-----#
    DSRCApplicationEntityID = INT(name='DSRCApplicationEntityID', mode=MODE_TYPE)
    DSRCApplicationEntityID._cont = ASN1Dict([('system', 0), ('electronic-fee-collection', 1), ('freight-fleet-management', 2), ('public-transport', 3), ('traffic-traveller-information', 4), ('traffic-control', 5), ('parking-management', 6), ('geographic-road-database', 7), ('medium-range-preinformation', 8), ('man-machine-interface', 9), ('intersystem-interface', 10), ('automatic-vehicle-identification', 11), ('emergency-warning', 12), ('private', 13), ('multi-purpose-payment', 14), ('dsrc-resource-manager', 15), ('after-theft-systems', 16), ('ccc', 20), ('lac', 21)])
    DSRCApplicationEntityID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=[], er=[])
    
    #-----< Event-Report-Request >-----#
    Event_Report_Request = SEQ(name='Event-Report-Request', mode=MODE_TYPE, param=True)
    
    #-----< Event-Report-Response >-----#
    Event_Report_Response = SEQ(name='Event-Report-Response', mode=MODE_TYPE)
    _Event_Report_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Event_Report_Response_fill._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Event_Report_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _Event_Report_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _Event_Report_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    Event_Report_Response._cont = ASN1Dict([
        ('fill', _Event_Report_Response_fill),
        ('eid', _Event_Report_Response_eid),
        ('iid', _Event_Report_Response_iid),
        ('ret', _Event_Report_Response_ret),
        ])
    Event_Report_Response._ext = None
    
    #-----< EventType >-----#
    EventType = INT(name='EventType', mode=MODE_TYPE)
    EventType._cont = ASN1Dict([('release', 0)])
    EventType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< File >-----#
    File = SEQ_OF(name='File', mode=MODE_TYPE)
    _File__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Record')))
    File._cont = _File__item_
    File._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< FileName >-----#
    FileName = SEQ(name='FileName', mode=MODE_TYPE)
    _FileName_aseID = INT(name='aseID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _FileName_fileID = INT(name='fileID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FileName_fileID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    FileName._cont = ASN1Dict([
        ('aseID', _FileName_aseID),
        ('fileID', _FileName_fileID),
        ])
    FileName._ext = None
    
    #-----< Get-Request >-----#
    Get_Request = SEQ(name='Get-Request', mode=MODE_TYPE)
    _Get_Request_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Get_Request_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Get_Request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _Get_Request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Get_Request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Get_Request_iid = INT(name='iid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _Get_Request_attrIdList = SEQ_OF(name='attrIdList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')), opt=True)
    Get_Request._cont = ASN1Dict([
        ('fill', _Get_Request_fill),
        ('eid', _Get_Request_eid),
        ('accessCredentials', _Get_Request_accessCredentials),
        ('iid', _Get_Request_iid),
        ('attrIdList', _Get_Request_attrIdList),
        ])
    Get_Request._ext = None
    
    #-----< Get-Response >-----#
    Get_Response = SEQ(name='Get-Response', mode=MODE_TYPE, param=True)
    
    #-----< Initialisation-Request >-----#
    Initialisation_Request = SEQ(name='Initialisation-Request', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'BST')))
    
    #-----< Initialisation-Response >-----#
    Initialisation_Response = SEQ(name='Initialisation-Response', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'VST')))
    
    #-----< ObeConfiguration >-----#
    ObeConfiguration = SEQ(name='ObeConfiguration', mode=MODE_TYPE)
    _ObeConfiguration_equipmentClass = INT(name='equipmentClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ObeConfiguration_equipmentClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _ObeConfiguration_manufacturerID = INT(name='manufacturerID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ObeConfiguration_manufacturerID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ObeConfiguration_obeStatus = INT(name='obeStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ObeConfiguration_obeStatus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    ObeConfiguration._cont = ASN1Dict([
        ('equipmentClass', _ObeConfiguration_equipmentClass),
        ('manufacturerID', _ObeConfiguration_manufacturerID),
        ('obeStatus', _ObeConfiguration_obeStatus),
        ])
    ObeConfiguration._ext = None
    
    #-----< Profile >-----#
    Profile = INT(name='Profile', mode=MODE_TYPE)
    Profile._cont = ASN1Dict([('profile0', 0), ('profile1', 1)])
    Profile._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Record >-----#
    Record = CHOICE(name='Record', mode=MODE_TYPE)
    _Record_simple = STR_VIS(name='simple', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Record._cont = ASN1Dict([
        ('simple', _Record_simple),
        ])
    Record._ext = []
    
    #-----< ReturnStatus >-----#
    ReturnStatus = INT(name='ReturnStatus', mode=MODE_TYPE)
    ReturnStatus._cont = ASN1Dict([('noError', 0), ('accessDenied', 1), ('argumentError', 2), ('complexityLimitation', 3), ('processingFailure', 4), ('processing', 5), ('chainingError', 6)])
    ReturnStatus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Set-Request >-----#
    Set_Request = SEQ(name='Set-Request', mode=MODE_TYPE, param=True)
    
    #-----< Set-Response >-----#
    Set_Response = SEQ(name='Set-Response', mode=MODE_TYPE)
    _Set_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Set_Response_fill._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Set_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _Set_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _Set_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    Set_Response._cont = ASN1Dict([
        ('fill', _Set_Response_fill),
        ('eid', _Set_Response_eid),
        ('iid', _Set_Response_iid),
        ('ret', _Set_Response_ret),
        ])
    Set_Response._ext = None
    
    #-----< Time >-----#
    Time = INT(name='Time', mode=MODE_TYPE)
    Time._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< T-APDUs-Generic >-----#
    T_APDUs_Generic = CHOICE(name='T-APDUs-Generic', mode=MODE_TYPE, param=True)
    
    #-----< T-APDUs >-----#
    T_APDUs = CHOICE(name='T-APDUs', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'T-APDUs-Generic')))
    _T_APDUs_action_request = SEQ(name='action-request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Action-Request')))
    __T_APDUs_action_request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_action_request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_action_request_actionType = INT(name='actionType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ActionType')))
    __T_APDUs_action_request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __T_APDUs_action_request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_action_request_actionParameter = CHOICE(name='actionParameter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')), opt=True)
    __T_APDUs_action_request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _T_APDUs_action_request._cont = ASN1Dict([
        ('mode', __T_APDUs_action_request_mode),
        ('eid', __T_APDUs_action_request_eid),
        ('actionType', __T_APDUs_action_request_actionType),
        ('accessCredentials', __T_APDUs_action_request_accessCredentials),
        ('actionParameter', __T_APDUs_action_request_actionParameter),
        ('iid', __T_APDUs_action_request_iid),
        ])
    _T_APDUs_action_request._ext = None
    _T_APDUs_action_response = SEQ(name='action-response', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Action-Response')))
    __T_APDUs_action_response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_action_response_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    __T_APDUs_action_response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_action_response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    __T_APDUs_action_response_responseParameter = CHOICE(name='responseParameter', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')), opt=True)
    __T_APDUs_action_response_ret = INT(name='ret', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    _T_APDUs_action_response._cont = ASN1Dict([
        ('fill', __T_APDUs_action_response_fill),
        ('eid', __T_APDUs_action_response_eid),
        ('iid', __T_APDUs_action_response_iid),
        ('responseParameter', __T_APDUs_action_response_responseParameter),
        ('ret', __T_APDUs_action_response_ret),
        ])
    _T_APDUs_action_response._ext = None
    _T_APDUs_event_report_request = SEQ(name='event-report-request', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Event-Report-Request')))
    __T_APDUs_event_report_request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_event_report_request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_event_report_request_eventType = INT(name='eventType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EventType')))
    __T_APDUs_event_report_request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __T_APDUs_event_report_request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_event_report_request_eventParameter = CHOICE(name='eventParameter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')), opt=True)
    __T_APDUs_event_report_request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _T_APDUs_event_report_request._cont = ASN1Dict([
        ('mode', __T_APDUs_event_report_request_mode),
        ('eid', __T_APDUs_event_report_request_eid),
        ('eventType', __T_APDUs_event_report_request_eventType),
        ('accessCredentials', __T_APDUs_event_report_request_accessCredentials),
        ('eventParameter', __T_APDUs_event_report_request_eventParameter),
        ('iid', __T_APDUs_event_report_request_iid),
        ])
    _T_APDUs_event_report_request._ext = None
    _T_APDUs_event_report_response = SEQ(name='event-report-response', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Event-Report-Response')))
    _T_APDUs_set_request = SEQ(name='set-request', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Set-Request')))
    __T_APDUs_set_request_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_set_request_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    __T_APDUs_set_request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_set_request_eid = INT(name='eid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_set_request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __T_APDUs_set_request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_set_request_attrList = SEQ_OF(name='attrList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    ___T_APDUs_set_request_attrList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____T_APDUs_set_request_attrList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____T_APDUs_set_request_attrList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____T_APDUs_set_request_attrList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___T_APDUs_set_request_attrList__item_._cont = ASN1Dict([
        ('attributeId', ____T_APDUs_set_request_attrList__item__attributeId),
        ('attributeValue', ____T_APDUs_set_request_attrList__item__attributeValue),
        ])
    ___T_APDUs_set_request_attrList__item_._ext = None
    __T_APDUs_set_request_attrList._cont = ___T_APDUs_set_request_attrList__item_
    __T_APDUs_set_request_attrList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_set_request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _T_APDUs_set_request._cont = ASN1Dict([
        ('fill', __T_APDUs_set_request_fill),
        ('mode', __T_APDUs_set_request_mode),
        ('eid', __T_APDUs_set_request_eid),
        ('accessCredentials', __T_APDUs_set_request_accessCredentials),
        ('attrList', __T_APDUs_set_request_attrList),
        ('iid', __T_APDUs_set_request_iid),
        ])
    _T_APDUs_set_request._ext = None
    _T_APDUs_set_response = SEQ(name='set-response', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Set-Response')))
    _T_APDUs_get_request = SEQ(name='get-request', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Get-Request')))
    _T_APDUs_get_response = SEQ(name='get-response', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Get-Response')))
    __T_APDUs_get_response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_get_response_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    __T_APDUs_get_response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_get_response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    __T_APDUs_get_response_attributelist = SEQ_OF(name='attributelist', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')), opt=True)
    ___T_APDUs_get_response_attributelist__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____T_APDUs_get_response_attributelist__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____T_APDUs_get_response_attributelist__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____T_APDUs_get_response_attributelist__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___T_APDUs_get_response_attributelist__item_._cont = ASN1Dict([
        ('attributeId', ____T_APDUs_get_response_attributelist__item__attributeId),
        ('attributeValue', ____T_APDUs_get_response_attributelist__item__attributeValue),
        ])
    ___T_APDUs_get_response_attributelist__item_._ext = None
    __T_APDUs_get_response_attributelist._cont = ___T_APDUs_get_response_attributelist__item_
    __T_APDUs_get_response_attributelist._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_get_response_ret = INT(name='ret', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    _T_APDUs_get_response._cont = ASN1Dict([
        ('fill', __T_APDUs_get_response_fill),
        ('eid', __T_APDUs_get_response_eid),
        ('iid', __T_APDUs_get_response_iid),
        ('attributelist', __T_APDUs_get_response_attributelist),
        ('ret', __T_APDUs_get_response_ret),
        ])
    _T_APDUs_get_response._ext = None
    _T_APDUs_initialisation_request = SEQ(name='initialisation-request', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Initialisation-Request')))
    _T_APDUs_initialisation_response = SEQ(name='initialisation-response', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Initialisation-Response')))
    T_APDUs._cont = ASN1Dict([
        ('action-request', _T_APDUs_action_request),
        ('action-response', _T_APDUs_action_response),
        ('event-report-request', _T_APDUs_event_report_request),
        ('event-report-response', _T_APDUs_event_report_response),
        ('set-request', _T_APDUs_set_request),
        ('set-response', _T_APDUs_set_response),
        ('get-request', _T_APDUs_get_request),
        ('get-response', _T_APDUs_get_response),
        ('initialisation-request', _T_APDUs_initialisation_request),
        ('initialisation-response', _T_APDUs_initialisation_response),
        ])
    T_APDUs._ext = None
    
    #-----< VST >-----#
    VST = SEQ(name='VST', mode=MODE_TYPE)
    _VST_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VST_fill._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _VST_profile = INT(name='profile', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Profile')))
    _VST_applications = SEQ_OF(name='applications', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationList')))
    _VST_obeConfiguration = SEQ(name='obeConfiguration', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ObeConfiguration')))
    VST._cont = ASN1Dict([
        ('fill', _VST_fill),
        ('profile', _VST_profile),
        ('applications', _VST_applications),
        ('obeConfiguration', _VST_obeConfiguration),
        ])
    VST._ext = None
    
    _all_ = [
        ActionType,
        ApplicationContextMark,
        __ApplicationList__item__aid,
        __ApplicationList__item__eid,
        __ApplicationList__item__parameter,
        _ApplicationList__item_,
        ApplicationList,
        _AttributeIdList__item_,
        AttributeIdList,
        _BeaconID_manufacturerid,
        _BeaconID_individualid,
        BeaconID,
        _BroadcastPool_directoryvalue,
        __BroadcastPool_content__item_,
        _BroadcastPool_content,
        BroadcastPool,
        _BST_rsu,
        _BST_time,
        _BST_profile,
        _BST_mandApplications,
        _BST_nonmandApplications,
        __BST_profileList__item_,
        _BST_profileList,
        BST,
        _EfcContainer_integer,
        _EfcContainer_bitstring,
        _EfcContainer_octetstring,
        _EfcContainer_universalString,
        _EfcContainer_beaconId,
        _EfcContainer_t_apdu,
        _EfcContainer_dsrcApplicationEntityId,
        _EfcContainer_dsrc_Ase_Id,
        _EfcContainer_attrIdList,
        ___EfcContainer_attrList__item__attributeId,
        ___EfcContainer_attrList__item__attributeValue,
        __EfcContainer_attrList__item_,
        _EfcContainer_attrList,
        _EfcContainer_broadcastPool,
        _EfcContainer_directory,
        _EfcContainer_file,
        _EfcContainer_fileType,
        _EfcContainer_record,
        _EfcContainer_time,
        __EfcContainer_vector__item_,
        _EfcContainer_vector,
        _EfcContainer_gstrq,
        ____EfcContainer_gstrs_attributeList__item__attributeId,
        ____EfcContainer_gstrs_attributeList__item__attributeValue,
        ___EfcContainer_gstrs_attributeList__item_,
        __EfcContainer_gstrs_attributeList,
        __EfcContainer_gstrs_authenticator,
        _EfcContainer_gstrs,
        ____EfcContainer_sstrq_attributeList__item__attributeId,
        ____EfcContainer_sstrq_attributeList__item__attributeValue,
        ___EfcContainer_sstrq_attributeList__item_,
        __EfcContainer_sstrq_attributeList,
        __EfcContainer_sstrq_nonce,
        __EfcContainer_sstrq_keyRef,
        _EfcContainer_sstrq,
        _EfcContainer_ginrq,
        ___EfcContainer_ginrs__item__attributeId,
        ___EfcContainer_ginrs__item__attributeValues,
        __EfcContainer_ginrs__item_,
        _EfcContainer_ginrs,
        __EfcContainer_sinrq_posOfInstance,
        ___EfcContainer_sinrq_attribute_attributeId,
        ___EfcContainer_sinrq_attribute_attributeValue,
        __EfcContainer_sinrq_attribute,
        _EfcContainer_sinrq,
        _EfcContainer_charq,
        _EfcContainer_chars,
        _EfcContainer_cpprq,
        _EfcContainer_subrq,
        _EfcContainer_addrq,
        _EfcContainer_debrq,
        _EfcContainer_debrs,
        _EfcContainer_crerq,
        _EfcContainer_crers,
        _EfcContainer_efccontext,
        _EfcContainer_contser,
        _EfcContainer_contval,
        _EfcContainer_contveh,
        _EfcContainer_contauth,
        _EfcContainer_recspt,
        _EfcContainer_sessioncls,
        _EfcContainer_recservserialno,
        _EfcContainer_recfinptENV,
        _EfcContainer_reccont,
        _EfcContainer_recOBUId,
        _EfcContainer_recICCId,
        _EfcContainer_rectext,
        _EfcContainer_recauth,
        _EfcContainer_recdist,
        _EfcContainer_vehlpn,
        _EfcContainer_vehid,
        _EfcContainer_vehclass,
        _EfcContainer_vehdims,
        _EfcContainer_vehaxles,
        _EfcContainer_vehwtlims,
        _EfcContainer_vehwtladen,
        _EfcContainer_vehspchars,
        _EfcContainer_vehauth,
        _EfcContainer_equOBUId,
        _EfcContainer_equICCId,
        _EfcContainer_equstat,
        _EfcContainer_dvrchars,
        _EfcContainer_paymeansENV,
        _EfcContainer_paymbal,
        _EfcContainer_paymunit,
        _EfcContainer_paysecdata,
        _EfcContainer_paymeans,
        _EfcContainer_recdata1,
        _EfcContainer_recdata2,
        _EfcContainer_valofcon,
        _EfcContainer_recfinpt,
        _EfcContainer_setmmirq,
        _EfcContainer_awl,
        _EfcContainer_paca,
        _EfcContainer_eng,
        _EfcContainer_sl,
        _EfcContainer_eev,
        _EfcContainer_dev,
        _EfcContainer_co2ev,
        _EfcContainer_vtd,
        _EfcContainer_tlpn,
        _EfcContainer_tch,
        _EfcContainer_anp,
        _EfcContainer_rfuCenISO48,
        _EfcContainer_rfuCenISO49,
        _EfcContainer_rfuCenISO50,
        _EfcContainer_rfuCenISO51,
        _EfcContainer_rfuCenISO52,
        _EfcContainer_rfuCenISO53,
        EfcContainer,
        FileType,
        _Directory__item_,
        Directory,
        Dsrc_EID,
        DSRCApplicationEntityID,
        _Event_Report_Response_fill,
        _Event_Report_Response_eid,
        _Event_Report_Response_iid,
        _Event_Report_Response_ret,
        Event_Report_Response,
        EventType,
        _File__item_,
        File,
        _FileName_aseID,
        _FileName_fileID,
        FileName,
        _Get_Request_fill,
        _Get_Request_eid,
        _Get_Request_accessCredentials,
        _Get_Request_iid,
        _Get_Request_attrIdList,
        Get_Request,
        Initialisation_Request,
        Initialisation_Response,
        _ObeConfiguration_equipmentClass,
        _ObeConfiguration_manufacturerID,
        _ObeConfiguration_obeStatus,
        ObeConfiguration,
        Profile,
        _Record_simple,
        Record,
        ReturnStatus,
        _Set_Response_fill,
        _Set_Response_eid,
        _Set_Response_iid,
        _Set_Response_ret,
        Set_Response,
        Time,
        __T_APDUs_action_request_mode,
        __T_APDUs_action_request_eid,
        __T_APDUs_action_request_actionType,
        __T_APDUs_action_request_accessCredentials,
        __T_APDUs_action_request_actionParameter,
        __T_APDUs_action_request_iid,
        _T_APDUs_action_request,
        __T_APDUs_action_response_fill,
        __T_APDUs_action_response_eid,
        __T_APDUs_action_response_iid,
        __T_APDUs_action_response_responseParameter,
        __T_APDUs_action_response_ret,
        _T_APDUs_action_response,
        __T_APDUs_event_report_request_mode,
        __T_APDUs_event_report_request_eid,
        __T_APDUs_event_report_request_eventType,
        __T_APDUs_event_report_request_accessCredentials,
        __T_APDUs_event_report_request_eventParameter,
        __T_APDUs_event_report_request_iid,
        _T_APDUs_event_report_request,
        _T_APDUs_event_report_response,
        __T_APDUs_set_request_fill,
        __T_APDUs_set_request_mode,
        __T_APDUs_set_request_eid,
        __T_APDUs_set_request_accessCredentials,
        ____T_APDUs_set_request_attrList__item__attributeId,
        ____T_APDUs_set_request_attrList__item__attributeValue,
        ___T_APDUs_set_request_attrList__item_,
        __T_APDUs_set_request_attrList,
        __T_APDUs_set_request_iid,
        _T_APDUs_set_request,
        _T_APDUs_set_response,
        _T_APDUs_get_request,
        __T_APDUs_get_response_fill,
        __T_APDUs_get_response_eid,
        __T_APDUs_get_response_iid,
        ____T_APDUs_get_response_attributelist__item__attributeId,
        ____T_APDUs_get_response_attributelist__item__attributeValue,
        ___T_APDUs_get_response_attributelist__item_,
        __T_APDUs_get_response_attributelist,
        __T_APDUs_get_response_ret,
        _T_APDUs_get_response,
        _T_APDUs_initialisation_request,
        _T_APDUs_initialisation_response,
        T_APDUs,
        _VST_fill,
        _VST_profile,
        _VST_applications,
        _VST_obeConfiguration,
        VST,
    ]

class ITS_Container:

    _name_  = 'ITS-Container'
    _oid_   = [0, 4, 0, 5, 1, 102894, 2, 1]
    
    _obj_ = [
        'ItsPduHeader',
        'StationID',
        'ReferencePosition',
        'DeltaReferencePosition',
        'Longitude',
        'Latitude',
        'Altitude',
        'AltitudeValue',
        'AltitudeConfidence',
        'DeltaLongitude',
        'DeltaLatitude',
        'DeltaAltitude',
        'PosConfidenceEllipse',
        'PathPoint',
        'PathDeltaTime',
        'PtActivation',
        'PtActivationType',
        'PtActivationData',
        'AccelerationControl',
        'SemiAxisLength',
        'CauseCode',
        'CauseCodeType',
        'SubCauseCodeType',
        'TrafficConditionSubCauseCode',
        'AccidentSubCauseCode',
        'RoadworksSubCauseCode',
        'HumanPresenceOnTheRoadSubCauseCode',
        'WrongWayDrivingSubCauseCode',
        'AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode',
        'AdverseWeatherCondition-AdhesionSubCauseCode',
        'AdverseWeatherCondition-VisibilitySubCauseCode',
        'AdverseWeatherCondition-PrecipitationSubCauseCode',
        'SlowVehicleSubCauseCode',
        'StationaryVehicleSubCauseCode',
        'HumanProblemSubCauseCode',
        'EmergencyVehicleApproachingSubCauseCode',
        'HazardousLocation-DangerousCurveSubCauseCode',
        'HazardousLocation-SurfaceConditionSubCauseCode',
        'HazardousLocation-ObstacleOnTheRoadSubCauseCode',
        'HazardousLocation-AnimalOnTheRoadSubCauseCode',
        'CollisionRiskSubCauseCode',
        'SignalViolationSubCauseCode',
        'RescueAndRecoveryWorkInProgressSubCauseCode',
        'DangerousEndOfQueueSubCauseCode',
        'DangerousSituationSubCauseCode',
        'VehicleBreakdownSubCauseCode',
        'PostCrashSubCauseCode',
        'Curvature',
        'CurvatureValue',
        'CurvatureConfidence',
        'CurvatureCalculationMode',
        'Heading',
        'HeadingValue',
        'HeadingConfidence',
        'LanePosition',
        'ClosedLanes',
        'HardShoulderStatus',
        'DrivingLaneStatus',
        'PerformanceClass',
        'SpeedValue',
        'SpeedConfidence',
        'VehicleMass',
        'Speed',
        'DriveDirection',
        'EmbarkationStatus',
        'LongitudinalAcceleration',
        'LongitudinalAccelerationValue',
        'AccelerationConfidence',
        'LateralAcceleration',
        'LateralAccelerationValue',
        'VerticalAcceleration',
        'VerticalAccelerationValue',
        'StationType',
        'ExteriorLights',
        'DangerousGoodsBasic',
        'DangerousGoodsExtended',
        'SpecialTransportType',
        'LightBarSirenInUse',
        'HeightLonCarr',
        'PosLonCarr',
        'PosPillar',
        'PosCentMass',
        'RequestResponseIndication',
        'SpeedLimit',
        'StationarySince',
        'Temperature',
        'TrafficRule',
        'WheelBaseVehicle',
        'TurningRadius',
        'PosFrontAx',
        'PositionOfOccupants',
        'PositioningSolutionType',
        'VehicleIdentification',
        'WMInumber',
        'VDS',
        'EnergyStorageType',
        'VehicleLength',
        'VehicleLengthValue',
        'VehicleLengthConfidenceIndication',
        'VehicleWidth',
        'PathHistory',
        'EmergencyPriority',
        'InformationQuality',
        'RoadType',
        'SteeringWheelAngle',
        'SteeringWheelAngleValue',
        'SteeringWheelAngleConfidence',
        'TimestampIts',
        'VehicleRole',
        'YawRate',
        'YawRateValue',
        'YawRateConfidence',
        'ProtectedZoneType',
        'RelevanceDistance',
        'RelevanceTrafficDirection',
        'TransmissionInterval',
        'ValidityDuration',
        'ActionID',
        'ItineraryPath',
        'ProtectedCommunicationZone',
        'Traces',
        'NumberOfOccupants',
        'SequenceNumber',
        'PositionOfPillars',
        'RestrictedTypes',
        'EventHistory',
        'EventPoint',
        'ProtectedCommunicationZonesRSU',
        'CenDsrcTollingZone',
        'ProtectedZoneRadius',
        'ProtectedZoneID',
        'CenDsrcTollingZoneID',
        ]
    _type_ = [
        'ItsPduHeader',
        'StationID',
        'ReferencePosition',
        'DeltaReferencePosition',
        'Longitude',
        'Latitude',
        'Altitude',
        'AltitudeValue',
        'AltitudeConfidence',
        'DeltaLongitude',
        'DeltaLatitude',
        'DeltaAltitude',
        'PosConfidenceEllipse',
        'PathPoint',
        'PathDeltaTime',
        'PtActivation',
        'PtActivationType',
        'PtActivationData',
        'AccelerationControl',
        'SemiAxisLength',
        'CauseCode',
        'CauseCodeType',
        'SubCauseCodeType',
        'TrafficConditionSubCauseCode',
        'AccidentSubCauseCode',
        'RoadworksSubCauseCode',
        'HumanPresenceOnTheRoadSubCauseCode',
        'WrongWayDrivingSubCauseCode',
        'AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode',
        'AdverseWeatherCondition-AdhesionSubCauseCode',
        'AdverseWeatherCondition-VisibilitySubCauseCode',
        'AdverseWeatherCondition-PrecipitationSubCauseCode',
        'SlowVehicleSubCauseCode',
        'StationaryVehicleSubCauseCode',
        'HumanProblemSubCauseCode',
        'EmergencyVehicleApproachingSubCauseCode',
        'HazardousLocation-DangerousCurveSubCauseCode',
        'HazardousLocation-SurfaceConditionSubCauseCode',
        'HazardousLocation-ObstacleOnTheRoadSubCauseCode',
        'HazardousLocation-AnimalOnTheRoadSubCauseCode',
        'CollisionRiskSubCauseCode',
        'SignalViolationSubCauseCode',
        'RescueAndRecoveryWorkInProgressSubCauseCode',
        'DangerousEndOfQueueSubCauseCode',
        'DangerousSituationSubCauseCode',
        'VehicleBreakdownSubCauseCode',
        'PostCrashSubCauseCode',
        'Curvature',
        'CurvatureValue',
        'CurvatureConfidence',
        'CurvatureCalculationMode',
        'Heading',
        'HeadingValue',
        'HeadingConfidence',
        'LanePosition',
        'ClosedLanes',
        'HardShoulderStatus',
        'DrivingLaneStatus',
        'PerformanceClass',
        'SpeedValue',
        'SpeedConfidence',
        'VehicleMass',
        'Speed',
        'DriveDirection',
        'EmbarkationStatus',
        'LongitudinalAcceleration',
        'LongitudinalAccelerationValue',
        'AccelerationConfidence',
        'LateralAcceleration',
        'LateralAccelerationValue',
        'VerticalAcceleration',
        'VerticalAccelerationValue',
        'StationType',
        'ExteriorLights',
        'DangerousGoodsBasic',
        'DangerousGoodsExtended',
        'SpecialTransportType',
        'LightBarSirenInUse',
        'HeightLonCarr',
        'PosLonCarr',
        'PosPillar',
        'PosCentMass',
        'RequestResponseIndication',
        'SpeedLimit',
        'StationarySince',
        'Temperature',
        'TrafficRule',
        'WheelBaseVehicle',
        'TurningRadius',
        'PosFrontAx',
        'PositionOfOccupants',
        'PositioningSolutionType',
        'VehicleIdentification',
        'WMInumber',
        'VDS',
        'EnergyStorageType',
        'VehicleLength',
        'VehicleLengthValue',
        'VehicleLengthConfidenceIndication',
        'VehicleWidth',
        'PathHistory',
        'EmergencyPriority',
        'InformationQuality',
        'RoadType',
        'SteeringWheelAngle',
        'SteeringWheelAngleValue',
        'SteeringWheelAngleConfidence',
        'TimestampIts',
        'VehicleRole',
        'YawRate',
        'YawRateValue',
        'YawRateConfidence',
        'ProtectedZoneType',
        'RelevanceDistance',
        'RelevanceTrafficDirection',
        'TransmissionInterval',
        'ValidityDuration',
        'ActionID',
        'ItineraryPath',
        'ProtectedCommunicationZone',
        'Traces',
        'NumberOfOccupants',
        'SequenceNumber',
        'PositionOfPillars',
        'RestrictedTypes',
        'EventHistory',
        'EventPoint',
        'ProtectedCommunicationZonesRSU',
        'CenDsrcTollingZone',
        'ProtectedZoneRadius',
        'ProtectedZoneID',
        'CenDsrcTollingZoneID',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ItsPduHeader >-----#
    ItsPduHeader = SEQ(name='ItsPduHeader', mode=MODE_TYPE)
    _ItsPduHeader_protocolVersion = INT(name='protocolVersion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ItsPduHeader_protocolVersion._cont = ASN1Dict([('currentVersion', 1)])
    _ItsPduHeader_protocolVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _ItsPduHeader_messageID = INT(name='messageID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ItsPduHeader_messageID._cont = ASN1Dict([('denm', 1), ('cam', 2), ('poi', 3), ('spatem', 4), ('mapem', 5), ('ivim', 6), ('ev-rsr', 7), ('tistpgtransaction', 8), ('srem', 9), ('ssem', 10), ('evcsn', 11)])
    _ItsPduHeader_messageID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _ItsPduHeader_stationID = INT(name='stationID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'StationID')))
    ItsPduHeader._cont = ASN1Dict([
        ('protocolVersion', _ItsPduHeader_protocolVersion),
        ('messageID', _ItsPduHeader_messageID),
        ('stationID', _ItsPduHeader_stationID),
        ])
    ItsPduHeader._ext = None
    
    #-----< StationID >-----#
    StationID = INT(name='StationID', mode=MODE_TYPE)
    StationID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< ReferencePosition >-----#
    ReferencePosition = SEQ(name='ReferencePosition', mode=MODE_TYPE)
    _ReferencePosition_latitude = INT(name='latitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Latitude')))
    _ReferencePosition_longitude = INT(name='longitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Longitude')))
    _ReferencePosition_positionConfidenceEllipse = SEQ(name='positionConfidenceEllipse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PosConfidenceEllipse')))
    _ReferencePosition_altitude = SEQ(name='altitude', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Altitude')))
    ReferencePosition._cont = ASN1Dict([
        ('latitude', _ReferencePosition_latitude),
        ('longitude', _ReferencePosition_longitude),
        ('positionConfidenceEllipse', _ReferencePosition_positionConfidenceEllipse),
        ('altitude', _ReferencePosition_altitude),
        ])
    ReferencePosition._ext = None
    
    #-----< DeltaReferencePosition >-----#
    DeltaReferencePosition = SEQ(name='DeltaReferencePosition', mode=MODE_TYPE)
    _DeltaReferencePosition_deltaLatitude = INT(name='deltaLatitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaLatitude')))
    _DeltaReferencePosition_deltaLongitude = INT(name='deltaLongitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaLongitude')))
    _DeltaReferencePosition_deltaAltitude = INT(name='deltaAltitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaAltitude')))
    DeltaReferencePosition._cont = ASN1Dict([
        ('deltaLatitude', _DeltaReferencePosition_deltaLatitude),
        ('deltaLongitude', _DeltaReferencePosition_deltaLongitude),
        ('deltaAltitude', _DeltaReferencePosition_deltaAltitude),
        ])
    DeltaReferencePosition._ext = None
    
    #-----< Longitude >-----#
    Longitude = INT(name='Longitude', mode=MODE_TYPE)
    Longitude._cont = ASN1Dict([('oneMicrodegreeEast', 10), ('oneMicrodegreeWest', -10), ('unavailable', 1800000001)])
    Longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1800000000, ub=1800000001)], ev=None, er=[])
    
    #-----< Latitude >-----#
    Latitude = INT(name='Latitude', mode=MODE_TYPE)
    Latitude._cont = ASN1Dict([('oneMicrodegreeNorth', 10), ('oneMicrodegreeSouth', -10), ('unavailable', 900000001)])
    Latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-900000000, ub=900000001)], ev=None, er=[])
    
    #-----< Altitude >-----#
    Altitude = SEQ(name='Altitude', mode=MODE_TYPE)
    _Altitude_altitudeValue = INT(name='altitudeValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AltitudeValue')))
    _Altitude_altitudeConfidence = ENUM(name='altitudeConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AltitudeConfidence')))
    Altitude._cont = ASN1Dict([
        ('altitudeValue', _Altitude_altitudeValue),
        ('altitudeConfidence', _Altitude_altitudeConfidence),
        ])
    Altitude._ext = None
    
    #-----< AltitudeValue >-----#
    AltitudeValue = INT(name='AltitudeValue', mode=MODE_TYPE)
    AltitudeValue._cont = ASN1Dict([('referenceEllipsoidSurface', 0), ('oneCentimeter', 1), ('unavailable', 800001)])
    AltitudeValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-100000, ub=800001)], ev=None, er=[])
    
    #-----< AltitudeConfidence >-----#
    AltitudeConfidence = ENUM(name='AltitudeConfidence', mode=MODE_TYPE)
    AltitudeConfidence._cont = ASN1Dict([('alt-000-01', 0), ('alt-000-02', 1), ('alt-000-05', 2), ('alt-000-10', 3), ('alt-000-20', 4), ('alt-000-50', 5), ('alt-001-00', 6), ('alt-002-00', 7), ('alt-005-00', 8), ('alt-010-00', 9), ('alt-020-00', 10), ('alt-050-00', 11), ('alt-100-00', 12), ('alt-200-00', 13), ('outOfRange', 14), ('unavailable', 15)])
    AltitudeConfidence._ext = None
    
    #-----< DeltaLongitude >-----#
    DeltaLongitude = INT(name='DeltaLongitude', mode=MODE_TYPE)
    DeltaLongitude._cont = ASN1Dict([('oneMicrodegreeEast', 10), ('oneMicrodegreeWest', -10), ('unavailable', 131072)])
    DeltaLongitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131071, ub=131072)], ev=None, er=[])
    
    #-----< DeltaLatitude >-----#
    DeltaLatitude = INT(name='DeltaLatitude', mode=MODE_TYPE)
    DeltaLatitude._cont = ASN1Dict([('oneMicrodegreeNorth', 10), ('oneMicrodegreeSouth', -10), ('unavailable', 131072)])
    DeltaLatitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131071, ub=131072)], ev=None, er=[])
    
    #-----< DeltaAltitude >-----#
    DeltaAltitude = INT(name='DeltaAltitude', mode=MODE_TYPE)
    DeltaAltitude._cont = ASN1Dict([('oneCentimeterUp', 1), ('oneCentimeterDown', -1), ('unavailable', 12800)])
    DeltaAltitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-12700, ub=12800)], ev=None, er=[])
    
    #-----< PosConfidenceEllipse >-----#
    PosConfidenceEllipse = SEQ(name='PosConfidenceEllipse', mode=MODE_TYPE)
    _PosConfidenceEllipse_semiMajorConfidence = INT(name='semiMajorConfidence', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SemiAxisLength')))
    _PosConfidenceEllipse_semiMinorConfidence = INT(name='semiMinorConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SemiAxisLength')))
    _PosConfidenceEllipse_semiMajorOrientation = INT(name='semiMajorOrientation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HeadingValue')))
    PosConfidenceEllipse._cont = ASN1Dict([
        ('semiMajorConfidence', _PosConfidenceEllipse_semiMajorConfidence),
        ('semiMinorConfidence', _PosConfidenceEllipse_semiMinorConfidence),
        ('semiMajorOrientation', _PosConfidenceEllipse_semiMajorOrientation),
        ])
    PosConfidenceEllipse._ext = None
    
    #-----< PathPoint >-----#
    PathPoint = SEQ(name='PathPoint', mode=MODE_TYPE)
    _PathPoint_pathPosition = SEQ(name='pathPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaReferencePosition')))
    _PathPoint_pathDeltaTime = INT(name='pathDeltaTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PathDeltaTime')), opt=True)
    PathPoint._cont = ASN1Dict([
        ('pathPosition', _PathPoint_pathPosition),
        ('pathDeltaTime', _PathPoint_pathDeltaTime),
        ])
    PathPoint._ext = None
    
    #-----< PathDeltaTime >-----#
    PathDeltaTime = INT(name='PathDeltaTime', mode=MODE_TYPE)
    PathDeltaTime._cont = ASN1Dict([('tenMilliSecondsInPast', 1)])
    PathDeltaTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65535)], ev=[], er=[])
    
    #-----< PtActivation >-----#
    PtActivation = SEQ(name='PtActivation', mode=MODE_TYPE)
    _PtActivation_ptActivationType = INT(name='ptActivationType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PtActivationType')))
    _PtActivation_ptActivationData = OCT_STR(name='ptActivationData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PtActivationData')))
    PtActivation._cont = ASN1Dict([
        ('ptActivationType', _PtActivation_ptActivationType),
        ('ptActivationData', _PtActivation_ptActivationData),
        ])
    PtActivation._ext = None
    
    #-----< PtActivationType >-----#
    PtActivationType = INT(name='PtActivationType', mode=MODE_TYPE)
    PtActivationType._cont = ASN1Dict([('undefinedCodingType', 0), ('r09-16CodingType', 1), ('vdv-50149CodingType', 2)])
    PtActivationType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< PtActivationData >-----#
    PtActivationData = OCT_STR(name='PtActivationData', mode=MODE_TYPE)
    PtActivationData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< AccelerationControl >-----#
    AccelerationControl = BIT_STR(name='AccelerationControl', mode=MODE_TYPE)
    AccelerationControl._cont = ASN1Dict([('brakePedalEngaged', 0), ('gasPedalEngaged', 1), ('emergencyBrakeEngaged', 2), ('collisionWarningEngaged', 3), ('accEngaged', 4), ('cruiseControlEngaged', 5), ('speedLimiterEngaged', 6)])
    AccelerationControl._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< SemiAxisLength >-----#
    SemiAxisLength = INT(name='SemiAxisLength', mode=MODE_TYPE)
    SemiAxisLength._cont = ASN1Dict([('oneCentimeter', 1), ('outOfRange', 4094), ('unavailable', 4095)])
    SemiAxisLength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< CauseCode >-----#
    CauseCode = SEQ(name='CauseCode', mode=MODE_TYPE)
    _CauseCode_causeCode = INT(name='causeCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CauseCodeType')))
    _CauseCode_subCauseCode = INT(name='subCauseCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SubCauseCodeType')))
    CauseCode._cont = ASN1Dict([
        ('causeCode', _CauseCode_causeCode),
        ('subCauseCode', _CauseCode_subCauseCode),
        ])
    CauseCode._ext = None
    
    #-----< CauseCodeType >-----#
    CauseCodeType = INT(name='CauseCodeType', mode=MODE_TYPE)
    CauseCodeType._cont = ASN1Dict([('reserved', 0), ('trafficCondition', 1), ('accident', 2), ('roadworks', 3), ('adverseWeatherCondition-Adhesion', 6), ('hazardousLocation-SurfaceCondition', 9), ('hazardousLocation-ObstacleOnTheRoad', 10), ('hazardousLocation-AnimalOnTheRoad', 11), ('humanPresenceOnTheRoad', 12), ('wrongWayDriving', 14), ('rescueAndRecoveryWorkInProgress', 15), ('adverseWeatherCondition-ExtremeWeatherCondition', 17), ('adverseWeatherCondition-Visibility', 18), ('adverseWeatherCondition-Precipitation', 19), ('slowVehicle', 26), ('dangerousEndOfQueue', 27), ('vehicleBreakdown', 91), ('postCrash', 92), ('humanProblem', 93), ('stationaryVehicle', 94), ('emergencyVehicleApproaching', 95), ('hazardousLocation-DangerousCurve', 96), ('collisionRisk', 97), ('signalViolation', 98), ('dangerousSituation', 99)])
    CauseCodeType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SubCauseCodeType >-----#
    SubCauseCodeType = INT(name='SubCauseCodeType', mode=MODE_TYPE)
    SubCauseCodeType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TrafficConditionSubCauseCode >-----#
    TrafficConditionSubCauseCode = INT(name='TrafficConditionSubCauseCode', mode=MODE_TYPE)
    TrafficConditionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('increasedVolumeOfTraffic', 1), ('trafficJamSlowlyIncreasing', 2), ('trafficJamIncreasing', 3), ('trafficJamStronglyIncreasing', 4), ('trafficStationary', 5), ('trafficJamSlightlyDecreasing', 6), ('trafficJamDecreasing', 7), ('trafficJamStronglyDecreasing', 8)])
    TrafficConditionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AccidentSubCauseCode >-----#
    AccidentSubCauseCode = INT(name='AccidentSubCauseCode', mode=MODE_TYPE)
    AccidentSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('multiVehicleAccident', 1), ('heavyAccident', 2), ('accidentInvolvingLorry', 3), ('accidentInvolvingBus', 4), ('accidentInvolvingHazardousMaterials', 5), ('accidentOnOppositeLane', 6), ('unsecuredAccident', 7), ('assistanceRequested', 8)])
    AccidentSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< RoadworksSubCauseCode >-----#
    RoadworksSubCauseCode = INT(name='RoadworksSubCauseCode', mode=MODE_TYPE)
    RoadworksSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('majorRoadworks', 1), ('roadMarkingWork', 2), ('slowMovingRoadMaintenance', 3), ('shortTermStationaryRoadworks', 4), ('streetCleaning', 5), ('winterService', 6)])
    RoadworksSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HumanPresenceOnTheRoadSubCauseCode >-----#
    HumanPresenceOnTheRoadSubCauseCode = INT(name='HumanPresenceOnTheRoadSubCauseCode', mode=MODE_TYPE)
    HumanPresenceOnTheRoadSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('childrenOnRoadway', 1), ('cyclistOnRoadway', 2), ('motorcyclistOnRoadway', 3)])
    HumanPresenceOnTheRoadSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< WrongWayDrivingSubCauseCode >-----#
    WrongWayDrivingSubCauseCode = INT(name='WrongWayDrivingSubCauseCode', mode=MODE_TYPE)
    WrongWayDrivingSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('wrongLane', 1), ('wrongDirection', 2)])
    WrongWayDrivingSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode >-----#
    AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode = INT(name='AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('strongWinds', 1), ('damagingHail', 2), ('hurricane', 3), ('thunderstorm', 4), ('tornado', 5), ('blizzard', 6)])
    AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-AdhesionSubCauseCode >-----#
    AdverseWeatherCondition_AdhesionSubCauseCode = INT(name='AdverseWeatherCondition-AdhesionSubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_AdhesionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('heavyFrostOnRoad', 1), ('fuelOnRoad', 2), ('mudOnRoad', 3), ('snowOnRoad', 4), ('iceOnRoad', 5), ('blackIceOnRoad', 6), ('oilOnRoad', 7), ('looseChippings', 8), ('instantBlackIce', 9), ('roadsSalted', 10)])
    AdverseWeatherCondition_AdhesionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-VisibilitySubCauseCode >-----#
    AdverseWeatherCondition_VisibilitySubCauseCode = INT(name='AdverseWeatherCondition-VisibilitySubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_VisibilitySubCauseCode._cont = ASN1Dict([('unavailable', 0), ('fog', 1), ('smoke', 2), ('heavySnowfall', 3), ('heavyRain', 4), ('heavyHail', 5), ('lowSunGlare', 6), ('sandstorms', 7), ('swarmsOfInsects', 8)])
    AdverseWeatherCondition_VisibilitySubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-PrecipitationSubCauseCode >-----#
    AdverseWeatherCondition_PrecipitationSubCauseCode = INT(name='AdverseWeatherCondition-PrecipitationSubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_PrecipitationSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('heavyRain', 1), ('heavySnowfall', 2), ('softHail', 3)])
    AdverseWeatherCondition_PrecipitationSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SlowVehicleSubCauseCode >-----#
    SlowVehicleSubCauseCode = INT(name='SlowVehicleSubCauseCode', mode=MODE_TYPE)
    SlowVehicleSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('maintenanceVehicle', 1), ('vehiclesSlowingToLookAtAccident', 2), ('abnormalLoad', 3), ('abnormalWideLoad', 4), ('convoy', 5), ('snowplough', 6), ('deicing', 7), ('saltingVehicles', 8)])
    SlowVehicleSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< StationaryVehicleSubCauseCode >-----#
    StationaryVehicleSubCauseCode = INT(name='StationaryVehicleSubCauseCode', mode=MODE_TYPE)
    StationaryVehicleSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('humanProblem', 1), ('vehicleBreakdown', 2), ('postCrash', 3), ('publicTransportStop', 4), ('carryingDangerousGoods', 5)])
    StationaryVehicleSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HumanProblemSubCauseCode >-----#
    HumanProblemSubCauseCode = INT(name='HumanProblemSubCauseCode', mode=MODE_TYPE)
    HumanProblemSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('glycemiaProblem', 1), ('heartProblem', 2)])
    HumanProblemSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< EmergencyVehicleApproachingSubCauseCode >-----#
    EmergencyVehicleApproachingSubCauseCode = INT(name='EmergencyVehicleApproachingSubCauseCode', mode=MODE_TYPE)
    EmergencyVehicleApproachingSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('emergencyVehicleApproaching', 1), ('prioritizedVehicleApproaching', 2)])
    EmergencyVehicleApproachingSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-DangerousCurveSubCauseCode >-----#
    HazardousLocation_DangerousCurveSubCauseCode = INT(name='HazardousLocation-DangerousCurveSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_DangerousCurveSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('dangerousLeftTurnCurve', 1), ('dangerousRightTurnCurve', 2), ('multipleCurvesStartingWithUnknownTurningDirection', 3), ('multipleCurvesStartingWithLeftTurn', 4), ('multipleCurvesStartingWithRightTurn', 5)])
    HazardousLocation_DangerousCurveSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-SurfaceConditionSubCauseCode >-----#
    HazardousLocation_SurfaceConditionSubCauseCode = INT(name='HazardousLocation-SurfaceConditionSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_SurfaceConditionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('rockfalls', 1), ('earthquakeDamage', 2), ('sewerCollapse', 3), ('subsidence', 4), ('snowDrifts', 5), ('stormDamage', 6), ('burstPipe', 7), ('volcanoEruption', 8), ('fallingIce', 9)])
    HazardousLocation_SurfaceConditionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-ObstacleOnTheRoadSubCauseCode >-----#
    HazardousLocation_ObstacleOnTheRoadSubCauseCode = INT(name='HazardousLocation-ObstacleOnTheRoadSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_ObstacleOnTheRoadSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('shedLoad', 1), ('partsOfVehicles', 2), ('partsOfTyres', 3), ('bigObjects', 4), ('fallenTrees', 5), ('hubCaps', 6), ('waitingVehicles', 7)])
    HazardousLocation_ObstacleOnTheRoadSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-AnimalOnTheRoadSubCauseCode >-----#
    HazardousLocation_AnimalOnTheRoadSubCauseCode = INT(name='HazardousLocation-AnimalOnTheRoadSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_AnimalOnTheRoadSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('wildAnimals', 1), ('herdOfAnimals', 2), ('smallAnimals', 3), ('largeAnimals', 4)])
    HazardousLocation_AnimalOnTheRoadSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< CollisionRiskSubCauseCode >-----#
    CollisionRiskSubCauseCode = INT(name='CollisionRiskSubCauseCode', mode=MODE_TYPE)
    CollisionRiskSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('longitudinalCollisionRisk', 1), ('crossingCollisionRisk', 2), ('lateralCollisionRisk', 3), ('vulnerableRoadUser', 4)])
    CollisionRiskSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SignalViolationSubCauseCode >-----#
    SignalViolationSubCauseCode = INT(name='SignalViolationSubCauseCode', mode=MODE_TYPE)
    SignalViolationSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('stopSignViolation', 1), ('trafficLightViolation', 2), ('turningRegulationViolation', 3)])
    SignalViolationSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< RescueAndRecoveryWorkInProgressSubCauseCode >-----#
    RescueAndRecoveryWorkInProgressSubCauseCode = INT(name='RescueAndRecoveryWorkInProgressSubCauseCode', mode=MODE_TYPE)
    RescueAndRecoveryWorkInProgressSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('emergencyVehicles', 1), ('rescueHelicopterLanding', 2), ('policeActivityOngoing', 3), ('medicalEmergencyOngoing', 4), ('childAbductionInProgress', 5)])
    RescueAndRecoveryWorkInProgressSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DangerousEndOfQueueSubCauseCode >-----#
    DangerousEndOfQueueSubCauseCode = INT(name='DangerousEndOfQueueSubCauseCode', mode=MODE_TYPE)
    DangerousEndOfQueueSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('suddenEndOfQueue', 1), ('queueOverHill', 2), ('queueAroundBend', 3), ('queueInTunnel', 4)])
    DangerousEndOfQueueSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DangerousSituationSubCauseCode >-----#
    DangerousSituationSubCauseCode = INT(name='DangerousSituationSubCauseCode', mode=MODE_TYPE)
    DangerousSituationSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('emergencyElectronicBrakeEngaged', 1), ('preCrashSystemEngaged', 2), ('espEngaged', 3), ('absEngaged', 4), ('aebEngaged', 5), ('brakeWarningEngaged', 6), ('collisionRiskWarningEngaged', 7)])
    DangerousSituationSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< VehicleBreakdownSubCauseCode >-----#
    VehicleBreakdownSubCauseCode = INT(name='VehicleBreakdownSubCauseCode', mode=MODE_TYPE)
    VehicleBreakdownSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('lackOfFuel', 1), ('lackOfBatteryPower', 2), ('engineProblem', 3), ('transmissionProblem', 4), ('engineCoolingProblem', 5), ('brakingSystemProblem', 6), ('steeringProblem', 7), ('tyrePuncture', 8)])
    VehicleBreakdownSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< PostCrashSubCauseCode >-----#
    PostCrashSubCauseCode = INT(name='PostCrashSubCauseCode', mode=MODE_TYPE)
    PostCrashSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('accidentWithoutECallTriggered', 1), ('accidentWithECallManuallyTriggered', 2), ('accidentWithECallAutomaticallyTriggered', 3), ('accidentWithECallTriggeredWithoutAccessToCellularNetwork', 4)])
    PostCrashSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Curvature >-----#
    Curvature = SEQ(name='Curvature', mode=MODE_TYPE)
    _Curvature_curvatureValue = INT(name='curvatureValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CurvatureValue')))
    _Curvature_curvatureConfidence = ENUM(name='curvatureConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CurvatureConfidence')))
    Curvature._cont = ASN1Dict([
        ('curvatureValue', _Curvature_curvatureValue),
        ('curvatureConfidence', _Curvature_curvatureConfidence),
        ])
    Curvature._ext = None
    
    #-----< CurvatureValue >-----#
    CurvatureValue = INT(name='CurvatureValue', mode=MODE_TYPE)
    CurvatureValue._cont = ASN1Dict([('straight', 0), ('reciprocalOf1MeterRadiusToRight', -30000), ('reciprocalOf1MeterRadiusToLeft', 30000), ('unavailable', 30001)])
    CurvatureValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30000, ub=30001)], ev=None, er=[])
    
    #-----< CurvatureConfidence >-----#
    CurvatureConfidence = ENUM(name='CurvatureConfidence', mode=MODE_TYPE)
    CurvatureConfidence._cont = ASN1Dict([('onePerMeter-0-00002', 0), ('onePerMeter-0-0001', 1), ('onePerMeter-0-0005', 2), ('onePerMeter-0-002', 3), ('onePerMeter-0-01', 4), ('onePerMeter-0-1', 5), ('outOfRange', 6), ('unavailable', 7)])
    CurvatureConfidence._ext = None
    
    #-----< CurvatureCalculationMode >-----#
    CurvatureCalculationMode = ENUM(name='CurvatureCalculationMode', mode=MODE_TYPE)
    CurvatureCalculationMode._cont = ASN1Dict([('yawRateUsed', 0), ('yawRateNotUsed', 1), ('unavailable', 2)])
    CurvatureCalculationMode._ext = []
    
    #-----< Heading >-----#
    Heading = SEQ(name='Heading', mode=MODE_TYPE)
    _Heading_headingValue = INT(name='headingValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HeadingValue')))
    _Heading_headingConfidence = INT(name='headingConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HeadingConfidence')))
    Heading._cont = ASN1Dict([
        ('headingValue', _Heading_headingValue),
        ('headingConfidence', _Heading_headingConfidence),
        ])
    Heading._ext = None
    
    #-----< HeadingValue >-----#
    HeadingValue = INT(name='HeadingValue', mode=MODE_TYPE)
    HeadingValue._cont = ASN1Dict([('wgs84North', 0), ('wgs84East', 900), ('wgs84South', 1800), ('wgs84West', 2700), ('unavailable', 3601)])
    HeadingValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3601)], ev=None, er=[])
    
    #-----< HeadingConfidence >-----#
    HeadingConfidence = INT(name='HeadingConfidence', mode=MODE_TYPE)
    HeadingConfidence._cont = ASN1Dict([('equalOrWithinZeroPointOneDegree', 1), ('equalOrWithinOneDegree', 10), ('outOfRange', 126), ('unavailable', 127)])
    HeadingConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< LanePosition >-----#
    LanePosition = INT(name='LanePosition', mode=MODE_TYPE)
    LanePosition._cont = ASN1Dict([('offTheRoad', -1), ('hardShoulder', 0), ('outermostDrivingLane', 1), ('secondLaneFromOutside', 2)])
    LanePosition._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1, ub=14)], ev=None, er=[])
    
    #-----< ClosedLanes >-----#
    ClosedLanes = SEQ(name='ClosedLanes', mode=MODE_TYPE)
    _ClosedLanes_hardShoulderStatus = ENUM(name='hardShoulderStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HardShoulderStatus')), opt=True)
    _ClosedLanes_drivingLaneStatus = BIT_STR(name='drivingLaneStatus', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DrivingLaneStatus')))
    ClosedLanes._cont = ASN1Dict([
        ('hardShoulderStatus', _ClosedLanes_hardShoulderStatus),
        ('drivingLaneStatus', _ClosedLanes_drivingLaneStatus),
        ])
    ClosedLanes._ext = []
    
    #-----< HardShoulderStatus >-----#
    HardShoulderStatus = ENUM(name='HardShoulderStatus', mode=MODE_TYPE)
    HardShoulderStatus._cont = ASN1Dict([('availableForStopping', 0), ('closed', 1), ('availableForDriving', 2)])
    HardShoulderStatus._ext = None
    
    #-----< DrivingLaneStatus >-----#
    DrivingLaneStatus = BIT_STR(name='DrivingLaneStatus', mode=MODE_TYPE)
    DrivingLaneStatus._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=14)], ev=None, er=[])
    
    #-----< PerformanceClass >-----#
    PerformanceClass = INT(name='PerformanceClass', mode=MODE_TYPE)
    PerformanceClass._cont = ASN1Dict([('unavailable', 0), ('performanceClassA', 1), ('performanceClassB', 2)])
    PerformanceClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< SpeedValue >-----#
    SpeedValue = INT(name='SpeedValue', mode=MODE_TYPE)
    SpeedValue._cont = ASN1Dict([('standstill', 0), ('oneCentimeterPerSec', 1), ('unavailable', 16383)])
    SpeedValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< SpeedConfidence >-----#
    SpeedConfidence = INT(name='SpeedConfidence', mode=MODE_TYPE)
    SpeedConfidence._cont = ASN1Dict([('equalOrWithinOneCentimeterPerSec', 1), ('equalOrWithinOneMeterPerSec', 100), ('outOfRange', 126), ('unavailable', 127)])
    SpeedConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< VehicleMass >-----#
    VehicleMass = INT(name='VehicleMass', mode=MODE_TYPE)
    VehicleMass._cont = ASN1Dict([('hundredKg', 1), ('unavailable', 1024)])
    VehicleMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    
    #-----< Speed >-----#
    Speed = SEQ(name='Speed', mode=MODE_TYPE)
    _Speed_speedValue = INT(name='speedValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SpeedValue')))
    _Speed_speedConfidence = INT(name='speedConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SpeedConfidence')))
    Speed._cont = ASN1Dict([
        ('speedValue', _Speed_speedValue),
        ('speedConfidence', _Speed_speedConfidence),
        ])
    Speed._ext = None
    
    #-----< DriveDirection >-----#
    DriveDirection = ENUM(name='DriveDirection', mode=MODE_TYPE)
    DriveDirection._cont = ASN1Dict([('forward', 0), ('backward', 1), ('unavailable', 2)])
    DriveDirection._ext = None
    
    #-----< EmbarkationStatus >-----#
    EmbarkationStatus = BOOL(name='EmbarkationStatus', mode=MODE_TYPE)
    
    #-----< LongitudinalAcceleration >-----#
    LongitudinalAcceleration = SEQ(name='LongitudinalAcceleration', mode=MODE_TYPE)
    _LongitudinalAcceleration_longitudinalAccelerationValue = INT(name='longitudinalAccelerationValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LongitudinalAccelerationValue')))
    _LongitudinalAcceleration_longitudinalAccelerationConfidence = INT(name='longitudinalAccelerationConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AccelerationConfidence')))
    LongitudinalAcceleration._cont = ASN1Dict([
        ('longitudinalAccelerationValue', _LongitudinalAcceleration_longitudinalAccelerationValue),
        ('longitudinalAccelerationConfidence', _LongitudinalAcceleration_longitudinalAccelerationConfidence),
        ])
    LongitudinalAcceleration._ext = None
    
    #-----< LongitudinalAccelerationValue >-----#
    LongitudinalAccelerationValue = INT(name='LongitudinalAccelerationValue', mode=MODE_TYPE)
    LongitudinalAccelerationValue._cont = ASN1Dict([('pointOneMeterPerSecSquaredForward', 1), ('pointOneMeterPerSecSquaredBackward', -1), ('unavailable', 161)])
    LongitudinalAccelerationValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-160, ub=161)], ev=None, er=[])
    
    #-----< AccelerationConfidence >-----#
    AccelerationConfidence = INT(name='AccelerationConfidence', mode=MODE_TYPE)
    AccelerationConfidence._cont = ASN1Dict([('pointOneMeterPerSecSquared', 1), ('outOfRange', 101), ('unavailable', 102)])
    AccelerationConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=102)], ev=None, er=[])
    
    #-----< LateralAcceleration >-----#
    LateralAcceleration = SEQ(name='LateralAcceleration', mode=MODE_TYPE)
    _LateralAcceleration_lateralAccelerationValue = INT(name='lateralAccelerationValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LateralAccelerationValue')))
    _LateralAcceleration_lateralAccelerationConfidence = INT(name='lateralAccelerationConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AccelerationConfidence')))
    LateralAcceleration._cont = ASN1Dict([
        ('lateralAccelerationValue', _LateralAcceleration_lateralAccelerationValue),
        ('lateralAccelerationConfidence', _LateralAcceleration_lateralAccelerationConfidence),
        ])
    LateralAcceleration._ext = None
    
    #-----< LateralAccelerationValue >-----#
    LateralAccelerationValue = INT(name='LateralAccelerationValue', mode=MODE_TYPE)
    LateralAccelerationValue._cont = ASN1Dict([('pointOneMeterPerSecSquaredToRight', -1), ('pointOneMeterPerSecSquaredToLeft', 1), ('unavailable', 161)])
    LateralAccelerationValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-160, ub=161)], ev=None, er=[])
    
    #-----< VerticalAcceleration >-----#
    VerticalAcceleration = SEQ(name='VerticalAcceleration', mode=MODE_TYPE)
    _VerticalAcceleration_verticalAccelerationValue = INT(name='verticalAccelerationValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VerticalAccelerationValue')))
    _VerticalAcceleration_verticalAccelerationConfidence = INT(name='verticalAccelerationConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AccelerationConfidence')))
    VerticalAcceleration._cont = ASN1Dict([
        ('verticalAccelerationValue', _VerticalAcceleration_verticalAccelerationValue),
        ('verticalAccelerationConfidence', _VerticalAcceleration_verticalAccelerationConfidence),
        ])
    VerticalAcceleration._ext = None
    
    #-----< VerticalAccelerationValue >-----#
    VerticalAccelerationValue = INT(name='VerticalAccelerationValue', mode=MODE_TYPE)
    VerticalAccelerationValue._cont = ASN1Dict([('pointOneMeterPerSecSquaredUp', 1), ('pointOneMeterPerSecSquaredDown', -1), ('unavailable', 161)])
    VerticalAccelerationValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-160, ub=161)], ev=None, er=[])
    
    #-----< StationType >-----#
    StationType = INT(name='StationType', mode=MODE_TYPE)
    StationType._cont = ASN1Dict([('unknown', 0), ('pedestrian', 1), ('cyclist', 2), ('moped', 3), ('motorcycle', 4), ('passengerCar', 5), ('bus', 6), ('lightTruck', 7), ('heavyTruck', 8), ('trailer', 9), ('specialVehicles', 10), ('tram', 11), ('roadSideUnit', 15)])
    StationType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ExteriorLights >-----#
    ExteriorLights = BIT_STR(name='ExteriorLights', mode=MODE_TYPE)
    ExteriorLights._cont = ASN1Dict([('lowBeamHeadlightsOn', 0), ('highBeamHeadlightsOn', 1), ('leftTurnSignalOn', 2), ('rightTurnSignalOn', 3), ('daytimeRunningLightsOn', 4), ('reverseLightOn', 5), ('fogLightOn', 6), ('parkingLightsOn', 7)])
    ExteriorLights._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< DangerousGoodsBasic >-----#
    DangerousGoodsBasic = ENUM(name='DangerousGoodsBasic', mode=MODE_TYPE)
    DangerousGoodsBasic._cont = ASN1Dict([('explosives1', 0), ('explosives2', 1), ('explosives3', 2), ('explosives4', 3), ('explosives5', 4), ('explosives6', 5), ('flammableGases', 6), ('nonFlammableGases', 7), ('toxicGases', 8), ('flammableLiquids', 9), ('flammableSolids', 10), ('substancesLiableToSpontaneousCombustion', 11), ('substancesEmittingFlammableGasesUponContactWithWater', 12), ('oxidizingSubstances', 13), ('organicPeroxides', 14), ('toxicSubstances', 15), ('infectiousSubstances', 16), ('radioactiveMaterial', 17), ('corrosiveSubstances', 18), ('miscellaneousDangerousSubstances', 19)])
    DangerousGoodsBasic._ext = None
    
    #-----< DangerousGoodsExtended >-----#
    DangerousGoodsExtended = SEQ(name='DangerousGoodsExtended', mode=MODE_TYPE)
    _DangerousGoodsExtended_dangerousGoodsType = ENUM(name='dangerousGoodsType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DangerousGoodsBasic')))
    _DangerousGoodsExtended_unNumber = INT(name='unNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_unNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9999)], ev=None, er=[])
    _DangerousGoodsExtended_elevatedTemperature = BOOL(name='elevatedTemperature', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_tunnelsRestricted = BOOL(name='tunnelsRestricted', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_limitedQuantity = BOOL(name='limitedQuantity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_emergencyActionCode = STR_IA5(name='emergencyActionCode', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DangerousGoodsExtended_emergencyActionCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    _DangerousGoodsExtended_phoneNumber = STR_IA5(name='phoneNumber', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DangerousGoodsExtended_phoneNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    _DangerousGoodsExtended_companyName = STR_UTF8(name='companyName', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DangerousGoodsExtended_companyName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    DangerousGoodsExtended._cont = ASN1Dict([
        ('dangerousGoodsType', _DangerousGoodsExtended_dangerousGoodsType),
        ('unNumber', _DangerousGoodsExtended_unNumber),
        ('elevatedTemperature', _DangerousGoodsExtended_elevatedTemperature),
        ('tunnelsRestricted', _DangerousGoodsExtended_tunnelsRestricted),
        ('limitedQuantity', _DangerousGoodsExtended_limitedQuantity),
        ('emergencyActionCode', _DangerousGoodsExtended_emergencyActionCode),
        ('phoneNumber', _DangerousGoodsExtended_phoneNumber),
        ('companyName', _DangerousGoodsExtended_companyName),
        ])
    DangerousGoodsExtended._ext = None
    
    #-----< SpecialTransportType >-----#
    SpecialTransportType = BIT_STR(name='SpecialTransportType', mode=MODE_TYPE)
    SpecialTransportType._cont = ASN1Dict([('heavyLoad', 0), ('excessWidth', 1), ('excessLength', 2), ('excessHeight', 3)])
    SpecialTransportType._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< LightBarSirenInUse >-----#
    LightBarSirenInUse = BIT_STR(name='LightBarSirenInUse', mode=MODE_TYPE)
    LightBarSirenInUse._cont = ASN1Dict([('lightBarActivated', 0), ('sirenActivated', 1)])
    LightBarSirenInUse._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< HeightLonCarr >-----#
    HeightLonCarr = INT(name='HeightLonCarr', mode=MODE_TYPE)
    HeightLonCarr._cont = ASN1Dict([('oneCentimeter', 1), ('unavailable', 100)])
    HeightLonCarr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    
    #-----< PosLonCarr >-----#
    PosLonCarr = INT(name='PosLonCarr', mode=MODE_TYPE)
    PosLonCarr._cont = ASN1Dict([('oneCentimeter', 1), ('unavailable', 127)])
    PosLonCarr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< PosPillar >-----#
    PosPillar = INT(name='PosPillar', mode=MODE_TYPE)
    PosPillar._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 30)])
    PosPillar._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< PosCentMass >-----#
    PosCentMass = INT(name='PosCentMass', mode=MODE_TYPE)
    PosCentMass._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 63)])
    PosCentMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< RequestResponseIndication >-----#
    RequestResponseIndication = ENUM(name='RequestResponseIndication', mode=MODE_TYPE)
    RequestResponseIndication._cont = ASN1Dict([('request', 0), ('response', 1)])
    RequestResponseIndication._ext = None
    
    #-----< SpeedLimit >-----#
    SpeedLimit = INT(name='SpeedLimit', mode=MODE_TYPE)
    SpeedLimit._cont = ASN1Dict([('oneKmPerHour', 1)])
    SpeedLimit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< StationarySince >-----#
    StationarySince = ENUM(name='StationarySince', mode=MODE_TYPE)
    StationarySince._cont = ASN1Dict([('lessThan1Minute', 0), ('lessThan2Minutes', 1), ('lessThan15Minutes', 2), ('equalOrGreater15Minutes', 3)])
    StationarySince._ext = None
    
    #-----< Temperature >-----#
    Temperature = INT(name='Temperature', mode=MODE_TYPE)
    Temperature._cont = ASN1Dict([('equalOrSmallerThanMinus60Deg', -60), ('oneDegreeCelsius', 1), ('equalOrGreaterThan67Deg', 67)])
    Temperature._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=67)], ev=None, er=[])
    
    #-----< TrafficRule >-----#
    TrafficRule = ENUM(name='TrafficRule', mode=MODE_TYPE)
    TrafficRule._cont = ASN1Dict([('noPassing', 0), ('noPassingForTrucks', 1), ('passToRight', 2), ('passToLeft', 3)])
    TrafficRule._ext = []
    
    #-----< WheelBaseVehicle >-----#
    WheelBaseVehicle = INT(name='WheelBaseVehicle', mode=MODE_TYPE)
    WheelBaseVehicle._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 127)])
    WheelBaseVehicle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< TurningRadius >-----#
    TurningRadius = INT(name='TurningRadius', mode=MODE_TYPE)
    TurningRadius._cont = ASN1Dict([('point4Meters', 1), ('unavailable', 255)])
    TurningRadius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< PosFrontAx >-----#
    PosFrontAx = INT(name='PosFrontAx', mode=MODE_TYPE)
    PosFrontAx._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 20)])
    PosFrontAx._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< PositionOfOccupants >-----#
    PositionOfOccupants = BIT_STR(name='PositionOfOccupants', mode=MODE_TYPE)
    PositionOfOccupants._cont = ASN1Dict([('row1LeftOccupied', 0), ('row1RightOccupied', 1), ('row1MidOccupied', 2), ('row1NotDetectable', 3), ('row1NotPresent', 4), ('row2LeftOccupied', 5), ('row2RightOccupied', 6), ('row2MidOccupied', 7), ('row2NotDetectable', 8), ('row2NotPresent', 9), ('row3LeftOccupied', 10), ('row3RightOccupied', 11), ('row3MidOccupied', 12), ('row3NotDetectable', 13), ('row3NotPresent', 14), ('row4LeftOccupied', 15), ('row4RightOccupied', 16), ('row4MidOccupied', 17), ('row4NotDetectable', 18), ('row4NotPresent', 19)])
    PositionOfOccupants._const_sz = ASN1Set(rv=[20], rr=[], ev=None, er=[])
    
    #-----< PositioningSolutionType >-----#
    PositioningSolutionType = ENUM(name='PositioningSolutionType', mode=MODE_TYPE)
    PositioningSolutionType._cont = ASN1Dict([('noPositioningSolution', 0), ('sGNSS', 1), ('dGNSS', 2), ('sGNSSplusDR', 3), ('dGNSSplusDR', 4), ('dR', 5)])
    PositioningSolutionType._ext = []
    
    #-----< VehicleIdentification >-----#
    VehicleIdentification = SEQ(name='VehicleIdentification', mode=MODE_TYPE)
    _VehicleIdentification_wMInumber = STR_IA5(name='wMInumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'WMInumber')), opt=True)
    _VehicleIdentification_vDS = STR_IA5(name='vDS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VDS')), opt=True)
    VehicleIdentification._cont = ASN1Dict([
        ('wMInumber', _VehicleIdentification_wMInumber),
        ('vDS', _VehicleIdentification_vDS),
        ])
    VehicleIdentification._ext = []
    
    #-----< WMInumber >-----#
    WMInumber = STR_IA5(name='WMInumber', mode=MODE_TYPE)
    WMInumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< VDS >-----#
    VDS = STR_IA5(name='VDS', mode=MODE_TYPE)
    VDS._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< EnergyStorageType >-----#
    EnergyStorageType = BIT_STR(name='EnergyStorageType', mode=MODE_TYPE)
    EnergyStorageType._cont = ASN1Dict([('hydrogenStorage', 0), ('electricEnergyStorage', 1), ('liquidPropaneGas', 2), ('compressedNaturalGas', 3), ('diesel', 4), ('gasoline', 5), ('ammonia', 6)])
    EnergyStorageType._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< VehicleLength >-----#
    VehicleLength = SEQ(name='VehicleLength', mode=MODE_TYPE)
    _VehicleLength_vehicleLengthValue = INT(name='vehicleLengthValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VehicleLengthValue')))
    _VehicleLength_vehicleLengthConfidenceIndication = ENUM(name='vehicleLengthConfidenceIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VehicleLengthConfidenceIndication')))
    VehicleLength._cont = ASN1Dict([
        ('vehicleLengthValue', _VehicleLength_vehicleLengthValue),
        ('vehicleLengthConfidenceIndication', _VehicleLength_vehicleLengthConfidenceIndication),
        ])
    VehicleLength._ext = None
    
    #-----< VehicleLengthValue >-----#
    VehicleLengthValue = INT(name='VehicleLengthValue', mode=MODE_TYPE)
    VehicleLengthValue._cont = ASN1Dict([('tenCentimeters', 1), ('outOfRange', 1022), ('unavailable', 1023)])
    VehicleLengthValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1023)], ev=None, er=[])
    
    #-----< VehicleLengthConfidenceIndication >-----#
    VehicleLengthConfidenceIndication = ENUM(name='VehicleLengthConfidenceIndication', mode=MODE_TYPE)
    VehicleLengthConfidenceIndication._cont = ASN1Dict([('noTrailerPresent', 0), ('trailerPresentWithKnownLength', 1), ('trailerPresentWithUnknownLength', 2), ('trailerPresenceIsUnknown', 3), ('unavailable', 4)])
    VehicleLengthConfidenceIndication._ext = None
    
    #-----< VehicleWidth >-----#
    VehicleWidth = INT(name='VehicleWidth', mode=MODE_TYPE)
    VehicleWidth._cont = ASN1Dict([('tenCentimeters', 1), ('outOfRange', 61), ('unavailable', 62)])
    VehicleWidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=62)], ev=None, er=[])
    
    #-----< PathHistory >-----#
    PathHistory = SEQ_OF(name='PathHistory', mode=MODE_TYPE)
    _PathHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'PathPoint')))
    PathHistory._cont = _PathHistory__item_
    PathHistory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=40)], ev=None, er=[])
    
    #-----< EmergencyPriority >-----#
    EmergencyPriority = BIT_STR(name='EmergencyPriority', mode=MODE_TYPE)
    EmergencyPriority._cont = ASN1Dict([('requestForRightOfWay', 0), ('requestForFreeCrossingAtATrafficLight', 1)])
    EmergencyPriority._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< InformationQuality >-----#
    InformationQuality = INT(name='InformationQuality', mode=MODE_TYPE)
    InformationQuality._cont = ASN1Dict([('unavailable', 0), ('lowest', 1), ('highest', 7)])
    InformationQuality._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< RoadType >-----#
    RoadType = ENUM(name='RoadType', mode=MODE_TYPE)
    RoadType._cont = ASN1Dict([('urban-NoStructuralSeparationToOppositeLanes', 0), ('urban-WithStructuralSeparationToOppositeLanes', 1), ('nonUrban-NoStructuralSeparationToOppositeLanes', 2), ('nonUrban-WithStructuralSeparationToOppositeLanes', 3)])
    RoadType._ext = None
    
    #-----< SteeringWheelAngle >-----#
    SteeringWheelAngle = SEQ(name='SteeringWheelAngle', mode=MODE_TYPE)
    _SteeringWheelAngle_steeringWheelAngleValue = INT(name='steeringWheelAngleValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SteeringWheelAngleValue')))
    _SteeringWheelAngle_steeringWheelAngleConfidence = INT(name='steeringWheelAngleConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SteeringWheelAngleConfidence')))
    SteeringWheelAngle._cont = ASN1Dict([
        ('steeringWheelAngleValue', _SteeringWheelAngle_steeringWheelAngleValue),
        ('steeringWheelAngleConfidence', _SteeringWheelAngle_steeringWheelAngleConfidence),
        ])
    SteeringWheelAngle._ext = None
    
    #-----< SteeringWheelAngleValue >-----#
    SteeringWheelAngleValue = INT(name='SteeringWheelAngleValue', mode=MODE_TYPE)
    SteeringWheelAngleValue._cont = ASN1Dict([('straight', 0), ('onePointFiveDegreesToRight', -1), ('onePointFiveDegreesToLeft', 1), ('unavailable', 512)])
    SteeringWheelAngleValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-511, ub=512)], ev=None, er=[])
    
    #-----< SteeringWheelAngleConfidence >-----#
    SteeringWheelAngleConfidence = INT(name='SteeringWheelAngleConfidence', mode=MODE_TYPE)
    SteeringWheelAngleConfidence._cont = ASN1Dict([('equalOrWithinOnePointFiveDegree', 1), ('outOfRange', 126), ('unavailable', 127)])
    SteeringWheelAngleConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< TimestampIts >-----#
    TimestampIts = INT(name='TimestampIts', mode=MODE_TYPE)
    TimestampIts._cont = ASN1Dict([('utcStartOf2004', 0), ('oneMillisecAfterUTCStartOf2004', 1)])
    TimestampIts._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4398046511103)], ev=None, er=[])
    
    #-----< VehicleRole >-----#
    VehicleRole = ENUM(name='VehicleRole', mode=MODE_TYPE)
    VehicleRole._cont = ASN1Dict([('default', 0), ('publicTransport', 1), ('specialTransport', 2), ('dangerousGoods', 3), ('roadWork', 4), ('rescue', 5), ('emergency', 6), ('safetyCar', 7), ('agriculture', 8), ('commercial', 9), ('military', 10), ('roadOperator', 11), ('taxi', 12), ('reserved1', 13), ('reserved2', 14), ('reserved3', 15)])
    VehicleRole._ext = None
    
    #-----< YawRate >-----#
    YawRate = SEQ(name='YawRate', mode=MODE_TYPE)
    _YawRate_yawRateValue = INT(name='yawRateValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'YawRateValue')))
    _YawRate_yawRateConfidence = ENUM(name='yawRateConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'YawRateConfidence')))
    YawRate._cont = ASN1Dict([
        ('yawRateValue', _YawRate_yawRateValue),
        ('yawRateConfidence', _YawRate_yawRateConfidence),
        ])
    YawRate._ext = None
    
    #-----< YawRateValue >-----#
    YawRateValue = INT(name='YawRateValue', mode=MODE_TYPE)
    YawRateValue._cont = ASN1Dict([('straight', 0), ('degSec-000-01ToRight', -1), ('degSec-000-01ToLeft', 1), ('unavailable', 32767)])
    YawRateValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32766, ub=32767)], ev=None, er=[])
    
    #-----< YawRateConfidence >-----#
    YawRateConfidence = ENUM(name='YawRateConfidence', mode=MODE_TYPE)
    YawRateConfidence._cont = ASN1Dict([('degSec-000-01', 0), ('degSec-000-05', 1), ('degSec-000-10', 2), ('degSec-001-00', 3), ('degSec-005-00', 4), ('degSec-010-00', 5), ('degSec-100-00', 6), ('outOfRange', 7), ('unavailable', 8)])
    YawRateConfidence._ext = None
    
    #-----< ProtectedZoneType >-----#
    ProtectedZoneType = ENUM(name='ProtectedZoneType', mode=MODE_TYPE)
    ProtectedZoneType._cont = ASN1Dict([('cenDsrcTolling', 0)])
    ProtectedZoneType._ext = []
    
    #-----< RelevanceDistance >-----#
    RelevanceDistance = ENUM(name='RelevanceDistance', mode=MODE_TYPE)
    RelevanceDistance._cont = ASN1Dict([('lessThan50m', 0), ('lessThan100m', 1), ('lessThan200m', 2), ('lessThan500m', 3), ('lessThan1000m', 4), ('lessThan5km', 5), ('lessThan10km', 6), ('over10km', 7)])
    RelevanceDistance._ext = None
    
    #-----< RelevanceTrafficDirection >-----#
    RelevanceTrafficDirection = ENUM(name='RelevanceTrafficDirection', mode=MODE_TYPE)
    RelevanceTrafficDirection._cont = ASN1Dict([('allTrafficDirections', 0), ('upstreamTraffic', 1), ('downstreamTraffic', 2), ('oppositeTraffic', 3)])
    RelevanceTrafficDirection._ext = None
    
    #-----< TransmissionInterval >-----#
    TransmissionInterval = INT(name='TransmissionInterval', mode=MODE_TYPE)
    TransmissionInterval._cont = ASN1Dict([('oneMilliSecond', 1), ('tenSeconds', 10000)])
    TransmissionInterval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10000)], ev=None, er=[])
    
    #-----< ValidityDuration >-----#
    ValidityDuration = INT(name='ValidityDuration', mode=MODE_TYPE)
    ValidityDuration._cont = ASN1Dict([('timeOfDetection', 0), ('oneSecondAfterDetection', 1)])
    ValidityDuration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=86400)], ev=None, er=[])
    
    #-----< ActionID >-----#
    ActionID = SEQ(name='ActionID', mode=MODE_TYPE)
    _ActionID_originatingStationID = INT(name='originatingStationID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'StationID')))
    _ActionID_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SequenceNumber')))
    ActionID._cont = ASN1Dict([
        ('originatingStationID', _ActionID_originatingStationID),
        ('sequenceNumber', _ActionID_sequenceNumber),
        ])
    ActionID._ext = None
    
    #-----< ItineraryPath >-----#
    ItineraryPath = SEQ_OF(name='ItineraryPath', mode=MODE_TYPE)
    _ItineraryPath__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'ReferencePosition')))
    ItineraryPath._cont = _ItineraryPath__item_
    ItineraryPath._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    
    #-----< ProtectedCommunicationZone >-----#
    ProtectedCommunicationZone = SEQ(name='ProtectedCommunicationZone', mode=MODE_TYPE)
    _ProtectedCommunicationZone_protectedZoneType = ENUM(name='protectedZoneType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneType')))
    _ProtectedCommunicationZone_expiryTime = INT(name='expiryTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'TimestampIts')), opt=True)
    _ProtectedCommunicationZone_protectedZoneLatitude = INT(name='protectedZoneLatitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Latitude')))
    _ProtectedCommunicationZone_protectedZoneLongitude = INT(name='protectedZoneLongitude', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Longitude')))
    _ProtectedCommunicationZone_protectedZoneRadius = INT(name='protectedZoneRadius', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneRadius')), opt=True)
    _ProtectedCommunicationZone_protectedZoneID = INT(name='protectedZoneID', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneID')), opt=True)
    ProtectedCommunicationZone._cont = ASN1Dict([
        ('protectedZoneType', _ProtectedCommunicationZone_protectedZoneType),
        ('expiryTime', _ProtectedCommunicationZone_expiryTime),
        ('protectedZoneLatitude', _ProtectedCommunicationZone_protectedZoneLatitude),
        ('protectedZoneLongitude', _ProtectedCommunicationZone_protectedZoneLongitude),
        ('protectedZoneRadius', _ProtectedCommunicationZone_protectedZoneRadius),
        ('protectedZoneID', _ProtectedCommunicationZone_protectedZoneID),
        ])
    ProtectedCommunicationZone._ext = None
    
    #-----< Traces >-----#
    Traces = SEQ_OF(name='Traces', mode=MODE_TYPE)
    _Traces__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'PathHistory')))
    Traces._cont = _Traces__item_
    Traces._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< NumberOfOccupants >-----#
    NumberOfOccupants = INT(name='NumberOfOccupants', mode=MODE_TYPE)
    NumberOfOccupants._cont = ASN1Dict([('oneOccupant', 1), ('unavailable', 127)])
    NumberOfOccupants._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< SequenceNumber >-----#
    SequenceNumber = INT(name='SequenceNumber', mode=MODE_TYPE)
    SequenceNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< PositionOfPillars >-----#
    PositionOfPillars = SEQ_OF(name='PositionOfPillars', mode=MODE_TYPE)
    _PositionOfPillars__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'PosPillar')))
    PositionOfPillars._cont = _PositionOfPillars__item_
    PositionOfPillars._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=[], er=[])
    
    #-----< RestrictedTypes >-----#
    RestrictedTypes = SEQ_OF(name='RestrictedTypes', mode=MODE_TYPE)
    _RestrictedTypes__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'StationType')))
    RestrictedTypes._cont = _RestrictedTypes__item_
    RestrictedTypes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=[], er=[])
    
    #-----< EventHistory >-----#
    EventHistory = SEQ_OF(name='EventHistory', mode=MODE_TYPE)
    _EventHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'EventPoint')))
    EventHistory._cont = _EventHistory__item_
    EventHistory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=23)], ev=None, er=[])
    
    #-----< EventPoint >-----#
    EventPoint = SEQ(name='EventPoint', mode=MODE_TYPE)
    _EventPoint_eventPosition = SEQ(name='eventPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaReferencePosition')))
    _EventPoint_eventDeltaTime = INT(name='eventDeltaTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PathDeltaTime')), opt=True)
    _EventPoint_informationQuality = INT(name='informationQuality', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'InformationQuality')))
    EventPoint._cont = ASN1Dict([
        ('eventPosition', _EventPoint_eventPosition),
        ('eventDeltaTime', _EventPoint_eventDeltaTime),
        ('informationQuality', _EventPoint_informationQuality),
        ])
    EventPoint._ext = None
    
    #-----< ProtectedCommunicationZonesRSU >-----#
    ProtectedCommunicationZonesRSU = SEQ_OF(name='ProtectedCommunicationZonesRSU', mode=MODE_TYPE)
    _ProtectedCommunicationZonesRSU__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'ProtectedCommunicationZone')))
    ProtectedCommunicationZonesRSU._cont = _ProtectedCommunicationZonesRSU__item_
    ProtectedCommunicationZonesRSU._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< CenDsrcTollingZone >-----#
    CenDsrcTollingZone = SEQ(name='CenDsrcTollingZone', mode=MODE_TYPE)
    _CenDsrcTollingZone_protectedZoneLatitude = INT(name='protectedZoneLatitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Latitude')))
    _CenDsrcTollingZone_protectedZoneLongitude = INT(name='protectedZoneLongitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Longitude')))
    _CenDsrcTollingZone_cenDsrcTollingZoneID = INT(name='cenDsrcTollingZoneID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CenDsrcTollingZoneID')), opt=True)
    CenDsrcTollingZone._cont = ASN1Dict([
        ('protectedZoneLatitude', _CenDsrcTollingZone_protectedZoneLatitude),
        ('protectedZoneLongitude', _CenDsrcTollingZone_protectedZoneLongitude),
        ('cenDsrcTollingZoneID', _CenDsrcTollingZone_cenDsrcTollingZoneID),
        ])
    CenDsrcTollingZone._ext = None
    
    #-----< ProtectedZoneRadius >-----#
    ProtectedZoneRadius = INT(name='ProtectedZoneRadius', mode=MODE_TYPE)
    ProtectedZoneRadius._cont = ASN1Dict([('oneMeter', 1)])
    ProtectedZoneRadius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=[], er=[])
    
    #-----< ProtectedZoneID >-----#
    ProtectedZoneID = INT(name='ProtectedZoneID', mode=MODE_TYPE)
    ProtectedZoneID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=134217727)], ev=None, er=[])
    
    #-----< CenDsrcTollingZoneID >-----#
    CenDsrcTollingZoneID = INT(name='CenDsrcTollingZoneID', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneID')))
    
    _all_ = [
        _ItsPduHeader_protocolVersion,
        _ItsPduHeader_messageID,
        _ItsPduHeader_stationID,
        ItsPduHeader,
        StationID,
        _ReferencePosition_latitude,
        _ReferencePosition_longitude,
        _ReferencePosition_positionConfidenceEllipse,
        _ReferencePosition_altitude,
        ReferencePosition,
        _DeltaReferencePosition_deltaLatitude,
        _DeltaReferencePosition_deltaLongitude,
        _DeltaReferencePosition_deltaAltitude,
        DeltaReferencePosition,
        Longitude,
        Latitude,
        _Altitude_altitudeValue,
        _Altitude_altitudeConfidence,
        Altitude,
        AltitudeValue,
        AltitudeConfidence,
        DeltaLongitude,
        DeltaLatitude,
        DeltaAltitude,
        _PosConfidenceEllipse_semiMajorConfidence,
        _PosConfidenceEllipse_semiMinorConfidence,
        _PosConfidenceEllipse_semiMajorOrientation,
        PosConfidenceEllipse,
        _PathPoint_pathPosition,
        _PathPoint_pathDeltaTime,
        PathPoint,
        PathDeltaTime,
        _PtActivation_ptActivationType,
        _PtActivation_ptActivationData,
        PtActivation,
        PtActivationType,
        PtActivationData,
        AccelerationControl,
        SemiAxisLength,
        _CauseCode_causeCode,
        _CauseCode_subCauseCode,
        CauseCode,
        CauseCodeType,
        SubCauseCodeType,
        TrafficConditionSubCauseCode,
        AccidentSubCauseCode,
        RoadworksSubCauseCode,
        HumanPresenceOnTheRoadSubCauseCode,
        WrongWayDrivingSubCauseCode,
        AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode,
        AdverseWeatherCondition_AdhesionSubCauseCode,
        AdverseWeatherCondition_VisibilitySubCauseCode,
        AdverseWeatherCondition_PrecipitationSubCauseCode,
        SlowVehicleSubCauseCode,
        StationaryVehicleSubCauseCode,
        HumanProblemSubCauseCode,
        EmergencyVehicleApproachingSubCauseCode,
        HazardousLocation_DangerousCurveSubCauseCode,
        HazardousLocation_SurfaceConditionSubCauseCode,
        HazardousLocation_ObstacleOnTheRoadSubCauseCode,
        HazardousLocation_AnimalOnTheRoadSubCauseCode,
        CollisionRiskSubCauseCode,
        SignalViolationSubCauseCode,
        RescueAndRecoveryWorkInProgressSubCauseCode,
        DangerousEndOfQueueSubCauseCode,
        DangerousSituationSubCauseCode,
        VehicleBreakdownSubCauseCode,
        PostCrashSubCauseCode,
        _Curvature_curvatureValue,
        _Curvature_curvatureConfidence,
        Curvature,
        CurvatureValue,
        CurvatureConfidence,
        CurvatureCalculationMode,
        _Heading_headingValue,
        _Heading_headingConfidence,
        Heading,
        HeadingValue,
        HeadingConfidence,
        LanePosition,
        _ClosedLanes_hardShoulderStatus,
        _ClosedLanes_drivingLaneStatus,
        ClosedLanes,
        HardShoulderStatus,
        DrivingLaneStatus,
        PerformanceClass,
        SpeedValue,
        SpeedConfidence,
        VehicleMass,
        _Speed_speedValue,
        _Speed_speedConfidence,
        Speed,
        DriveDirection,
        EmbarkationStatus,
        _LongitudinalAcceleration_longitudinalAccelerationValue,
        _LongitudinalAcceleration_longitudinalAccelerationConfidence,
        LongitudinalAcceleration,
        LongitudinalAccelerationValue,
        AccelerationConfidence,
        _LateralAcceleration_lateralAccelerationValue,
        _LateralAcceleration_lateralAccelerationConfidence,
        LateralAcceleration,
        LateralAccelerationValue,
        _VerticalAcceleration_verticalAccelerationValue,
        _VerticalAcceleration_verticalAccelerationConfidence,
        VerticalAcceleration,
        VerticalAccelerationValue,
        StationType,
        ExteriorLights,
        DangerousGoodsBasic,
        _DangerousGoodsExtended_dangerousGoodsType,
        _DangerousGoodsExtended_unNumber,
        _DangerousGoodsExtended_elevatedTemperature,
        _DangerousGoodsExtended_tunnelsRestricted,
        _DangerousGoodsExtended_limitedQuantity,
        _DangerousGoodsExtended_emergencyActionCode,
        _DangerousGoodsExtended_phoneNumber,
        _DangerousGoodsExtended_companyName,
        DangerousGoodsExtended,
        SpecialTransportType,
        LightBarSirenInUse,
        HeightLonCarr,
        PosLonCarr,
        PosPillar,
        PosCentMass,
        RequestResponseIndication,
        SpeedLimit,
        StationarySince,
        Temperature,
        TrafficRule,
        WheelBaseVehicle,
        TurningRadius,
        PosFrontAx,
        PositionOfOccupants,
        PositioningSolutionType,
        _VehicleIdentification_wMInumber,
        _VehicleIdentification_vDS,
        VehicleIdentification,
        WMInumber,
        VDS,
        EnergyStorageType,
        _VehicleLength_vehicleLengthValue,
        _VehicleLength_vehicleLengthConfidenceIndication,
        VehicleLength,
        VehicleLengthValue,
        VehicleLengthConfidenceIndication,
        VehicleWidth,
        _PathHistory__item_,
        PathHistory,
        EmergencyPriority,
        InformationQuality,
        RoadType,
        _SteeringWheelAngle_steeringWheelAngleValue,
        _SteeringWheelAngle_steeringWheelAngleConfidence,
        SteeringWheelAngle,
        SteeringWheelAngleValue,
        SteeringWheelAngleConfidence,
        TimestampIts,
        VehicleRole,
        _YawRate_yawRateValue,
        _YawRate_yawRateConfidence,
        YawRate,
        YawRateValue,
        YawRateConfidence,
        ProtectedZoneType,
        RelevanceDistance,
        RelevanceTrafficDirection,
        TransmissionInterval,
        ValidityDuration,
        _ActionID_originatingStationID,
        _ActionID_sequenceNumber,
        ActionID,
        _ItineraryPath__item_,
        ItineraryPath,
        _ProtectedCommunicationZone_protectedZoneType,
        _ProtectedCommunicationZone_expiryTime,
        _ProtectedCommunicationZone_protectedZoneLatitude,
        _ProtectedCommunicationZone_protectedZoneLongitude,
        _ProtectedCommunicationZone_protectedZoneRadius,
        _ProtectedCommunicationZone_protectedZoneID,
        ProtectedCommunicationZone,
        _Traces__item_,
        Traces,
        NumberOfOccupants,
        SequenceNumber,
        _PositionOfPillars__item_,
        PositionOfPillars,
        _RestrictedTypes__item_,
        RestrictedTypes,
        _EventHistory__item_,
        EventHistory,
        _EventPoint_eventPosition,
        _EventPoint_eventDeltaTime,
        _EventPoint_informationQuality,
        EventPoint,
        _ProtectedCommunicationZonesRSU__item_,
        ProtectedCommunicationZonesRSU,
        _CenDsrcTollingZone_protectedZoneLatitude,
        _CenDsrcTollingZone_protectedZoneLongitude,
        _CenDsrcTollingZone_cenDsrcTollingZoneID,
        CenDsrcTollingZone,
        ProtectedZoneRadius,
        ProtectedZoneID,
        CenDsrcTollingZoneID,
    ]

init_modules(DSRCData, AVIAEINumberingAndDataStructures, EfcDsrcApplication, EfcDsrcGeneric, ITS_Container)
