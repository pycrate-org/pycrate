# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class EfcDataDictionary:

    _name_  = 'EfcDataDictionary'
    _oid_   = [1, 0, 17573, 3, 1, 5]
    
    _obj_ = [
        'Int1Unsigned',
        'Int1Signed',
        'Int2Unsigned',
        'Int2Signed',
        'Int3Unsigned',
        'Int4Unsigned',
        'Int4Signed',
        'Int8Unsigned',
        'Int8Signed',
        'AccountStatus',
        'ActualNumberOfPassengers',
        'AlphabetIndicator',
        'Altitude',
        'Axles',
        'CabType',
        'ChassisType',
        'Co2EmissionClass',
        'Co2EmissionValue',
        'Co2EmissionValueLoad',
        'Co2Scheme',
        'ContractAuthenticator',
        'ContractSerialNumber',
        'CopValue',
        'CountryCode',
        'DetectionMode',
        'DistanceUnit',
        'DriverClass',
        'EmissionUnit',
        'EngineCapacity',
        'EngineCharacteristics',
        'EnginePower',
        'EquipmentIccId',
        'EquipmentObuId',
        'EquipmentStatus',
        'EuroValue',
        'EuroValueSubClass',
        'IssuerIdentifier',
        'Latitude',
        'LocalVehicleClassId',
        'LocationClassId',
        'Longitude',
        'Month',
        'PaymentSecurityData',
        'PayUnit',
        'PersonalAccountNumber',
        'RearWheelsSteeringType',
        'ReceiptAuthenticator',
        'ReceiptDistance',
        'ResultFin',
        'ReceiptIccId',
        'ReceiptObuId',
        'ResultOp',
        'ReceiptServiceSerialNumber',
        'ReceiptText',
        'StationType',
        'SuspensionType',
        'TariffClassId',
        'Time',
        'TimeClassId',
        'TimeUnit',
        'TrailerType',
        'TripPurpose',
        'TyreConfiguration',
        'UserClassId',
        'VehicleAuthenticator',
        'VehicleClass',
        'VehicleCurrentMaxTrainWeight',
        'VehicleFirstAxleHeight',
        'VehicleHeightOverall',
        'VehicleLengthOverall',
        'VehicleMassInRunningOrder',
        'VehicleMaxLadenWeight',
        'VehicleOperationalRange',
        'VehicleTechnicalPermissibleMaxLadenMass',
        'VehicleTotalDistance',
        'VehicleTrainMaximumWeight',
        'VehicleUsageCategoryType',
        'VehicleWeightLaden',
        'VehicleWeightUnladen',
        'VehicleWidthOverall',
        'Weekday',
        'AbsolutePosition2d',
        'AbsolutePosition3d',
        'AxleWeightLimit',
        'AxleWeightLimits',
        'DateCompact',
        'DieselEmissionValues',
        'DriverCharacteristics',
        'Distance',
        'Duration',
        'EngineDetails',
        'EuVehicleGroup',
        'ExhaustEmissionValues',
        'FutureCharacteristics',
        'NumberOfAxles',
        'ObeId',
        'Particulate',
        'PassengerCapacity',
        'PaymentFee',
        'Period',
        'Provider',
        'RelativePosition3d',
        'SessionClass',
        'SessionLocation',
        'SignedValue',
        'SoundLevel',
        'TimeCompact',
        'TrailerDetails',
        'WheelsConfiguration',
        'AxlesWeightLimits',
        'ChargeObjectId',
        'ContractValidity',
        'DateAndTime',
        'EnvironmentalCharacteristics',
        'InitialVehicleRegistrationDate',
        'Lpn',
        'PaymentMeans',
        'PaymentMeansBalance',
        'PurseBalance',
        'TrailerCharacteristics',
        'ValidityOfContract',
        'VehicleAxlesNumber',
        'VehicleDimensions',
        'VehicleIdentificationNumber',
        'VehicleWeightLimits',
        'EfcContextMark',
        'ReceiptContract',
        'ReceiptData',
        'ReceiptFinancialPart',
        'ReceiptServicePart',
        'VehicleAxles',
        'VehicleSpecificCharacteristics',
        'AggregatedSingleTariffClassSession',
        'DetectedChargeObject',
        'TariffClassDescription',
        'UserId',
        'VehicleDescription',
        ]
    _type_ = [
        'Int1Unsigned',
        'Int1Signed',
        'Int2Unsigned',
        'Int2Signed',
        'Int3Unsigned',
        'Int4Unsigned',
        'Int4Signed',
        'Int8Unsigned',
        'Int8Signed',
        'AccountStatus',
        'ActualNumberOfPassengers',
        'AlphabetIndicator',
        'Altitude',
        'Axles',
        'CabType',
        'ChassisType',
        'Co2EmissionClass',
        'Co2EmissionValue',
        'Co2EmissionValueLoad',
        'Co2Scheme',
        'ContractAuthenticator',
        'ContractSerialNumber',
        'CopValue',
        'CountryCode',
        'DetectionMode',
        'DistanceUnit',
        'DriverClass',
        'EmissionUnit',
        'EngineCapacity',
        'EngineCharacteristics',
        'EnginePower',
        'EquipmentIccId',
        'EquipmentObuId',
        'EquipmentStatus',
        'EuroValue',
        'EuroValueSubClass',
        'IssuerIdentifier',
        'Latitude',
        'LocalVehicleClassId',
        'LocationClassId',
        'Longitude',
        'Month',
        'PaymentSecurityData',
        'PayUnit',
        'PersonalAccountNumber',
        'RearWheelsSteeringType',
        'ReceiptAuthenticator',
        'ReceiptDistance',
        'ResultFin',
        'ReceiptIccId',
        'ReceiptObuId',
        'ResultOp',
        'ReceiptServiceSerialNumber',
        'ReceiptText',
        'StationType',
        'SuspensionType',
        'TariffClassId',
        'Time',
        'TimeClassId',
        'TimeUnit',
        'TrailerType',
        'TripPurpose',
        'TyreConfiguration',
        'UserClassId',
        'VehicleAuthenticator',
        'VehicleClass',
        'VehicleCurrentMaxTrainWeight',
        'VehicleFirstAxleHeight',
        'VehicleHeightOverall',
        'VehicleLengthOverall',
        'VehicleMassInRunningOrder',
        'VehicleMaxLadenWeight',
        'VehicleOperationalRange',
        'VehicleTechnicalPermissibleMaxLadenMass',
        'VehicleTotalDistance',
        'VehicleTrainMaximumWeight',
        'VehicleUsageCategoryType',
        'VehicleWeightLaden',
        'VehicleWeightUnladen',
        'VehicleWidthOverall',
        'Weekday',
        'AbsolutePosition2d',
        'AbsolutePosition3d',
        'AxleWeightLimit',
        'AxleWeightLimits',
        'DateCompact',
        'DieselEmissionValues',
        'DriverCharacteristics',
        'Distance',
        'Duration',
        'EngineDetails',
        'EuVehicleGroup',
        'ExhaustEmissionValues',
        'FutureCharacteristics',
        'NumberOfAxles',
        'ObeId',
        'Particulate',
        'PassengerCapacity',
        'PaymentFee',
        'Period',
        'Provider',
        'RelativePosition3d',
        'SessionClass',
        'SessionLocation',
        'SignedValue',
        'SoundLevel',
        'TimeCompact',
        'TrailerDetails',
        'WheelsConfiguration',
        'AxlesWeightLimits',
        'ChargeObjectId',
        'ContractValidity',
        'DateAndTime',
        'EnvironmentalCharacteristics',
        'InitialVehicleRegistrationDate',
        'Lpn',
        'PaymentMeans',
        'PaymentMeansBalance',
        'PurseBalance',
        'TrailerCharacteristics',
        'ValidityOfContract',
        'VehicleAxlesNumber',
        'VehicleDimensions',
        'VehicleIdentificationNumber',
        'VehicleWeightLimits',
        'EfcContextMark',
        'ReceiptContract',
        'ReceiptData',
        'ReceiptFinancialPart',
        'ReceiptServicePart',
        'VehicleAxles',
        'VehicleSpecificCharacteristics',
        'AggregatedSingleTariffClassSession',
        'DetectedChargeObject',
        'TariffClassDescription',
        'UserId',
        'VehicleDescription',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Int1Unsigned >-----#
    Int1Unsigned = INT(name='Int1Unsigned', mode=MODE_TYPE)
    Int1Unsigned._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Int1Signed >-----#
    Int1Signed = INT(name='Int1Signed', mode=MODE_TYPE)
    Int1Signed._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    
    #-----< Int2Unsigned >-----#
    Int2Unsigned = INT(name='Int2Unsigned', mode=MODE_TYPE)
    Int2Unsigned._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< Int2Signed >-----#
    Int2Signed = INT(name='Int2Signed', mode=MODE_TYPE)
    Int2Signed._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    
    #-----< Int3Unsigned >-----#
    Int3Unsigned = INT(name='Int3Unsigned', mode=MODE_TYPE)
    Int3Unsigned._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    
    #-----< Int4Unsigned >-----#
    Int4Unsigned = INT(name='Int4Unsigned', mode=MODE_TYPE)
    Int4Unsigned._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< Int4Signed >-----#
    Int4Signed = INT(name='Int4Signed', mode=MODE_TYPE)
    Int4Signed._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2147483648, ub=2147483647)], ev=None, er=[])
    
    #-----< Int8Unsigned >-----#
    Int8Unsigned = INT(name='Int8Unsigned', mode=MODE_TYPE)
    Int8Unsigned._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9223372036854775807)], ev=None, er=[])
    
    #-----< Int8Signed >-----#
    Int8Signed = INT(name='Int8Signed', mode=MODE_TYPE)
    Int8Signed._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-9223372036854775808, ub=9223372036854775807)], ev=None, er=[])
    
    #-----< AccountStatus >-----#
    AccountStatus = INT(name='AccountStatus', mode=MODE_TYPE)
    AccountStatus._cont = ASN1Dict([('ok', 0), ('low', 1), ('empty', 2), ('negative', 3)])
    AccountStatus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ActualNumberOfPassengers >-----#
    ActualNumberOfPassengers = INT(name='ActualNumberOfPassengers', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    
    #-----< AlphabetIndicator >-----#
    AlphabetIndicator = ENUM(name='AlphabetIndicator', mode=MODE_TYPE)
    AlphabetIndicator._cont = ASN1Dict([('latinAlphabetNo1', 1), ('latinAlphabetNo2', 2), ('latinAlphabetNo3', 3), ('latinAlphabetNo4', 4), ('latinCyrillicAlphabet', 5), ('latinArabicAlphabet', 6), ('latinGreekAlphabet', 7), ('latinHebrewAlphabet', 8), ('latinAlphabetNo5', 9), ('latinAlphabetNo6', 10), ('twoOctetBMP', 11), ('forOctetCannonical', 12), ('latinAlphabetNo7', 13), ('latinAlphabetNo8', 14), ('latinAlphabetNo9', 15), ('latinAlphabetNo10', 16), ('latinThaiAlphabet', 17), ('utf8', 18), ('utf16BigEndian', 19), ('utf16LittleEndian', 20), ('utf32BigEndian', 21), ('utf32LittleEndian', 22), ('ucs4', 23), ('ascii', 24), ('iscii', 25), ('tis620', 26), ('vscii', 27), ('koi8R', 28), ('koi8U', 29), ('jisX0213', 30), ('gbt2312', 31), ('big5', 32), ('ksx1001', 33)])
    AlphabetIndicator._ext = None
    
    #-----< Altitude >-----#
    Altitude = INT(name='Altitude', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Signed')))
    
    #-----< Axles >-----#
    Axles = INT(name='Axles', mode=MODE_TYPE)
    Axles._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< CabType >-----#
    CabType = INT(name='CabType', mode=MODE_TYPE)
    CabType._cont = ASN1Dict([('dayCab', 0), ('sleeperCab', 1)])
    CabType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< ChassisType >-----#
    ChassisType = INT(name='ChassisType', mode=MODE_TYPE)
    ChassisType._cont = ASN1Dict([('rigidLorry', 0), ('tractor', 1), ('van', 2)])
    ChassisType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< Co2EmissionClass >-----#
    Co2EmissionClass = INT(name='Co2EmissionClass', mode=MODE_TYPE)
    Co2EmissionClass._cont = ASN1Dict([('noEntry', 0), ('co2EmissionClass1', 1), ('co2EmissionClass2', 2), ('co2EmissionClass3', 3), ('co2EmissionClass4', 4), ('co2EmissionClass5', 5), ('co2EmissionClass6', 6), ('co2EmissionClass7', 7)])
    Co2EmissionClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< Co2EmissionValue >-----#
    Co2EmissionValue = INT(name='Co2EmissionValue', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< Co2EmissionValueLoad >-----#
    Co2EmissionValueLoad = INT(name='Co2EmissionValueLoad', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    
    #-----< Co2Scheme >-----#
    Co2Scheme = INT(name='Co2Scheme', mode=MODE_TYPE)
    Co2Scheme._cont = ASN1Dict([('noEntry', 0), ('eU', 1)])
    Co2Scheme._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< ContractAuthenticator >-----#
    ContractAuthenticator = OCT_STR(name='ContractAuthenticator', mode=MODE_TYPE)
    
    #-----< ContractSerialNumber >-----#
    ContractSerialNumber = INT(name='ContractSerialNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    
    #-----< CopValue >-----#
    CopValue = INT(name='CopValue', mode=MODE_TYPE)
    CopValue._cont = ASN1Dict([('noEntry', 0), ('co2Class1', 1), ('co2Class2', 2), ('co2Class3', 3), ('co2Class4', 4), ('co2Class5', 5), ('co2Class6', 6), ('co2Class7', 7)])
    CopValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< CountryCode >-----#
    CountryCode = BIT_STR(name='CountryCode', mode=MODE_TYPE)
    CountryCode._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< DetectionMode >-----#
    DetectionMode = INT(name='DetectionMode', mode=MODE_TYPE)
    DetectionMode._cont = ASN1Dict([('measured', 0), ('inferred', 1), ('lac', 2)])
    DetectionMode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DistanceUnit >-----#
    DistanceUnit = INT(name='DistanceUnit', mode=MODE_TYPE)
    DistanceUnit._cont = ASN1Dict([('kilometres', 0), ('miles', 1), ('metres', 2), ('yards', 3), ('feet', 4), ('decimetres', 5), ('quartermetres', 6), ('centimeters', 7), ('millimeters', 8)])
    DistanceUnit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DriverClass >-----#
    DriverClass = INT(name='DriverClass', mode=MODE_TYPE)
    DriverClass._cont = ASN1Dict([('genericPerson', 0), ('reducedMobility', 1), ('otherDisability', 2), ('officialAuthority', 3), ('notToBeDisclosed', 4), ('craftsPerson', 5)])
    DriverClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< EmissionUnit >-----#
    EmissionUnit = INT(name='EmissionUnit', mode=MODE_TYPE)
    EmissionUnit._cont = ASN1Dict([('mgPerKm', 0), ('mgPerKwh', 1)])
    EmissionUnit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    
    #-----< EngineCapacity >-----#
    EngineCapacity = INT(name='EngineCapacity', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< EngineCharacteristics >-----#
    EngineCharacteristics = INT(name='EngineCharacteristics', mode=MODE_TYPE)
    EngineCharacteristics._cont = ASN1Dict([('noEntry', 0), ('noEngine', 1), ('petrolUnleaded', 2), ('petrolLeaded', 3), ('diesel', 4), ('lpg', 5), ('battery', 6), ('solar', 7), ('hybrid', 8), ('hydrogen', 9), ('multiFuel', 10), ('bivalentPetrolLpg', 11), ('bivalentPetrolCng', 12), ('combinedPetrolElectric', 13), ('cng', 14), ('lng', 15), ('combinedDieselElectric', 16), ('combinedHydrogenElectric', 17), ('bivalentHydrogenPetrol', 18), ('bivalentHydrogenPetrolElectricEngine', 19), ('fuelCellHydrogen', 20), ('fuelCellPetrol', 21), ('fuelCellMethanol', 22), ('fuelCellEthanol', 23), ('fuelCellDiesel', 24), ('combinedMultiFuelElectricEngine', 25), ('combinedCngElectricEngine', 26), ('combinedLngElectricEngine', 27), ('petrolEthanol', 28), ('combinedLpgElectricEngine', 29), ('hybridPetrolExternalBattery', 30), ('hybridDieselExternalBattery', 31), ('hybridLpgExternalBattery', 32), ('hybridHydrogenExternalBattery', 33), ('hybridMultiFuelExternalBattery', 34), ('hybridCngExternalBattery', 35), ('hybridLngExternalBattery', 36), ('hybridBivalentHydrogenPetrolExternalBattery', 37), ('hydrogenCng', 38), ('hydrogenLng', 39), ('hybridHydrogenCngExternalBattery', 40), ('hybridHydrogenLngExternalBattery', 41), ('ethanol', 42), ('hybridFuelCellHydrogen', 43), ('hybridFuelCellHydrogenExternalBattery', 44), ('dualFuelLngDiesel', 45), ('electricExternal', 46), ('biogas', 47), ('bioDiesel', 48), ('bioPetrol', 49), ('bivalentPetrolBiogas', 50), ('combinedBiogasElectricEngine', 51), ('dualFuelCngDiesel', 52), ('other', 255)])
    EngineCharacteristics._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< EnginePower >-----#
    EnginePower = INT(name='EnginePower', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< EquipmentIccId >-----#
    EquipmentIccId = OCT_STR(name='EquipmentIccId', mode=MODE_TYPE)
    
    #-----< EquipmentObuId >-----#
    EquipmentObuId = OCT_STR(name='EquipmentObuId', mode=MODE_TYPE)
    
    #-----< EquipmentStatus >-----#
    EquipmentStatus = BIT_STR(name='EquipmentStatus', mode=MODE_TYPE)
    EquipmentStatus._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< EuroValue >-----#
    EuroValue = INT(name='EuroValue', mode=MODE_TYPE)
    EuroValue._cont = ASN1Dict([('noEntry', 0), ('euro1', 1), ('euro2', 2), ('euro3', 3), ('euro4', 4), ('euro5', 5), ('euro6', 6), ('euro7', 7), ('eev', 15)])
    EuroValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< EuroValueSubClass >-----#
    EuroValueSubClass = INT(name='EuroValueSubClass', mode=MODE_TYPE)
    EuroValueSubClass._cont = ASN1Dict([('noEntry', 0), ('euro7G', 1), ('euro7ext', 2), ('euro7Gext', 3)])
    EuroValueSubClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< IssuerIdentifier >-----#
    IssuerIdentifier = INT(name='IssuerIdentifier', mode=MODE_TYPE)
    IssuerIdentifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< Latitude >-----#
    Latitude = INT(name='Latitude', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Signed')))
    
    #-----< LocalVehicleClassId >-----#
    LocalVehicleClassId = INT(name='LocalVehicleClassId', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< LocationClassId >-----#
    LocationClassId = INT(name='LocationClassId', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    
    #-----< Longitude >-----#
    Longitude = INT(name='Longitude', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Signed')))
    
    #-----< Month >-----#
    Month = INT(name='Month', mode=MODE_TYPE)
    Month._cont = ASN1Dict([('noMonth', 0), ('january', 1), ('february', 2), ('march', 3), ('april', 4), ('may', 5), ('june', 6), ('july', 7), ('august', 8), ('september', 9), ('october', 10), ('november', 11), ('december', 12)])
    Month._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=12)], ev=None, er=[])
    
    #-----< PaymentSecurityData >-----#
    PaymentSecurityData = OCT_STR(name='PaymentSecurityData', mode=MODE_TYPE)
    
    #-----< PayUnit >-----#
    PayUnit = OCT_STR(name='PayUnit', mode=MODE_TYPE)
    PayUnit._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< PersonalAccountNumber >-----#
    PersonalAccountNumber = OCT_STR(name='PersonalAccountNumber', mode=MODE_TYPE)
    PersonalAccountNumber._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< RearWheelsSteeringType >-----#
    RearWheelsSteeringType = INT(name='RearWheelsSteeringType', mode=MODE_TYPE)
    RearWheelsSteeringType._cont = ASN1Dict([('noRearWheels', 0), ('foreMostRearWheels', 1), ('rearMostRearWheels', 2), ('allRearWheels', 3)])
    RearWheelsSteeringType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< ReceiptAuthenticator >-----#
    ReceiptAuthenticator = OCT_STR(name='ReceiptAuthenticator', mode=MODE_TYPE)
    
    #-----< ReceiptDistance >-----#
    ReceiptDistance = INT(name='ReceiptDistance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int3Unsigned')))
    
    #-----< ResultFin >-----#
    ResultFin = OCT_STR(name='ResultFin', mode=MODE_TYPE)
    ResultFin._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ReceiptIccId >-----#
    ReceiptIccId = OCT_STR(name='ReceiptIccId', mode=MODE_TYPE)
    
    #-----< ReceiptObuId >-----#
    ReceiptObuId = OCT_STR(name='ReceiptObuId', mode=MODE_TYPE)
    
    #-----< ResultOp >-----#
    ResultOp = INT(name='ResultOp', mode=MODE_TYPE)
    ResultOp._cont = ASN1Dict([('correctTransaction', 0), ('obeStatusNotAccepted', 1), ('equipmentStatusNotAccepted', 2), ('contractNotInWhiteList', 3), ('contractIdentifierInBlackList', 4), ('contractIdentifierNotCorrect', 5), ('expiredContract', 6), ('contractRestrictionsNotFulfilled', 7), ('claimedVehicleCharacteristicsNotValid', 8), ('vehicleClassAuthenticationFailed', 9), ('entryVehicleClassDifferentFromExitVehicleClass', 10), ('entryReceiptMissing', 11), ('entryReceiptNotValid', 12), ('entryTollStationNotValid', 13), ('equipmentNotCertified', 14), ('timeDifference', 15), ('accessCredentialsNotAccepted', 16), ('contractAuthenticatorNotAccepted', 17), ('receiptAuthenticatorNotAccepted', 18), ('claimedVehicleCharacteristicsMissing', 19), ('paymentMeansNotAccepted', 20), ('paymentAuthenticatorNotAccepted', 21), ('paymentMeansInBlackList', 22), ('paymentMeansNotCorrect', 23), ('expiredPaymentMeans', 24), ('paymentMeansRestrictionsNotFulfilled', 25)])
    ResultOp._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ReceiptServiceSerialNumber >-----#
    ReceiptServiceSerialNumber = INT(name='ReceiptServiceSerialNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int3Unsigned')))
    
    #-----< ReceiptText >-----#
    ReceiptText = OCT_STR(name='ReceiptText', mode=MODE_TYPE)
    
    #-----< StationType >-----#
    StationType = INT(name='StationType', mode=MODE_TYPE)
    StationType._cont = ASN1Dict([('unspecified', 0), ('closedEntryWithPayment', 1), ('closedEntryWithoutPayment', 2), ('closedTransit', 3), ('closedExit', 4), ('closedCredit', 5), ('mixed', 6), ('passage', 7), ('checkpoint', 8), ('reload', 9)])
    StationType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< SuspensionType >-----#
    SuspensionType = INT(name='SuspensionType', mode=MODE_TYPE)
    SuspensionType._cont = ASN1Dict([('noEntry', 0), ('airSuspension', 1), ('hydraulicSuspension', 2), ('electricSuspension', 3)])
    SuspensionType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< TariffClassId >-----#
    TariffClassId = INT(name='TariffClassId', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    
    #-----< Time >-----#
    Time = INT(name='Time', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    
    #-----< TimeClassId >-----#
    TimeClassId = INT(name='TimeClassId', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< TimeUnit >-----#
    TimeUnit = INT(name='TimeUnit', mode=MODE_TYPE)
    TimeUnit._cont = ASN1Dict([('seconds', 0), ('minutes', 1), ('hours', 2), ('days', 3), ('months', 4), ('years', 5)])
    TimeUnit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TrailerType >-----#
    TrailerType = INT(name='TrailerType', mode=MODE_TYPE)
    TrailerType._cont = ASN1Dict([('notPresent', 0), ('trailer', 1), ('semiTrailer', 2)])
    TrailerType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< TripPurpose >-----#
    TripPurpose = INT(name='TripPurpose', mode=MODE_TYPE)
    TripPurpose._cont = ASN1Dict([('genericTrip', 0), ('businessTrip', 1), ('privateTrip', 2), ('humanitarianAid', 3), ('militaryPurposes', 4), ('notToBeDisclosed', 5), ('craftBasedTrip', 6), ('combinedTransport', 7)])
    TripPurpose._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TyreConfiguration >-----#
    TyreConfiguration = INT(name='TyreConfiguration', mode=MODE_TYPE)
    TyreConfiguration._cont = ASN1Dict([('notSpecified', 0), ('singleTyre', 1), ('dualTyres', 2)])
    TyreConfiguration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< UserClassId >-----#
    UserClassId = INT(name='UserClassId', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    
    #-----< VehicleAuthenticator >-----#
    VehicleAuthenticator = OCT_STR(name='VehicleAuthenticator', mode=MODE_TYPE)
    
    #-----< VehicleClass >-----#
    VehicleClass = INT(name='VehicleClass', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    
    #-----< VehicleCurrentMaxTrainWeight >-----#
    VehicleCurrentMaxTrainWeight = INT(name='VehicleCurrentMaxTrainWeight', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleFirstAxleHeight >-----#
    VehicleFirstAxleHeight = INT(name='VehicleFirstAxleHeight', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    
    #-----< VehicleHeightOverall >-----#
    VehicleHeightOverall = INT(name='VehicleHeightOverall', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    
    #-----< VehicleLengthOverall >-----#
    VehicleLengthOverall = INT(name='VehicleLengthOverall', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    
    #-----< VehicleMassInRunningOrder >-----#
    VehicleMassInRunningOrder = INT(name='VehicleMassInRunningOrder', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleMaxLadenWeight >-----#
    VehicleMaxLadenWeight = INT(name='VehicleMaxLadenWeight', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleOperationalRange >-----#
    VehicleOperationalRange = INT(name='VehicleOperationalRange', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleTechnicalPermissibleMaxLadenMass >-----#
    VehicleTechnicalPermissibleMaxLadenMass = INT(name='VehicleTechnicalPermissibleMaxLadenMass', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleTotalDistance >-----#
    VehicleTotalDistance = INT(name='VehicleTotalDistance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    
    #-----< VehicleTrainMaximumWeight >-----#
    VehicleTrainMaximumWeight = INT(name='VehicleTrainMaximumWeight', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleUsageCategoryType >-----#
    VehicleUsageCategoryType = INT(name='VehicleUsageCategoryType', mode=MODE_TYPE)
    VehicleUsageCategoryType._cont = ASN1Dict([('noEntry', 0), ('handicappedPeople', 1), ('military', 2), ('police', 3), ('roadMaintenance', 4), ('circusTruck', 5), ('mobileShopTruck', 6), ('truckCarryingMilk', 7), ('truckCarryingTimber', 8), ('publicTransport', 9), ('enforcementAgent', 10), ('ambulance', 11), ('fireBrigade', 12), ('officialAuthority', 13), ('agriculturalVehicle', 14), ('bus', 15), ('mobileHome', 16), ('mobileCrane', 17), ('exceptionalTransport', 18), ('emperor', 19), ('vocationalVehicle', 20), ('vehicleLiableToToll', 21), ('craftsTransport', 22), ('combinedTransport', 23)])
    VehicleUsageCategoryType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< VehicleWeightLaden >-----#
    VehicleWeightLaden = INT(name='VehicleWeightLaden', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleWeightUnladen >-----#
    VehicleWeightUnladen = INT(name='VehicleWeightUnladen', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    
    #-----< VehicleWidthOverall >-----#
    VehicleWidthOverall = INT(name='VehicleWidthOverall', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    
    #-----< Weekday >-----#
    Weekday = INT(name='Weekday', mode=MODE_TYPE)
    Weekday._cont = ASN1Dict([('reserved', 0), ('monday', 1), ('tuesday', 2), ('wednesday', 3), ('thursday', 4), ('friday', 5), ('saturday', 6), ('sunday', 7)])
    Weekday._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< AbsolutePosition2d >-----#
    AbsolutePosition2d = SEQ(name='AbsolutePosition2d', mode=MODE_TYPE)
    _AbsolutePosition2d_gnssLon = INT(name='gnssLon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Longitude')))
    _AbsolutePosition2d_gnssLat = INT(name='gnssLat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Latitude')))
    AbsolutePosition2d._cont = ASN1Dict([
        ('gnssLon', _AbsolutePosition2d_gnssLon),
        ('gnssLat', _AbsolutePosition2d_gnssLat),
        ])
    AbsolutePosition2d._ext = None
    
    #-----< AbsolutePosition3d >-----#
    AbsolutePosition3d = SEQ(name='AbsolutePosition3d', mode=MODE_TYPE)
    _AbsolutePosition3d_longitude = INT(name='longitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Longitude')))
    _AbsolutePosition3d_latitude = INT(name='latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Latitude')))
    _AbsolutePosition3d_altitude = INT(name='altitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Altitude')), opt=True)
    AbsolutePosition3d._cont = ASN1Dict([
        ('longitude', _AbsolutePosition3d_longitude),
        ('latitude', _AbsolutePosition3d_latitude),
        ('altitude', _AbsolutePosition3d_altitude),
        ])
    AbsolutePosition3d._ext = None
    
    #-----< AxleWeightLimit >-----#
    AxleWeightLimit = SEQ(name='AxleWeightLimit', mode=MODE_TYPE)
    _AxleWeightLimit_axleNumber = INT(name='axleNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    _AxleWeightLimit_maxLadenWeightOnAxle = INT(name='maxLadenWeightOnAxle', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    AxleWeightLimit._cont = ASN1Dict([
        ('axleNumber', _AxleWeightLimit_axleNumber),
        ('maxLadenWeightOnAxle', _AxleWeightLimit_maxLadenWeightOnAxle),
        ])
    AxleWeightLimit._ext = None
    
    #-----< AxleWeightLimits >-----#
    AxleWeightLimits = SEQ(name='AxleWeightLimits', mode=MODE_TYPE)
    _AxleWeightLimits_maxLadenWeightOnAxle1 = INT(name='maxLadenWeightOnAxle1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _AxleWeightLimits_maxLadenWeightOnAxle2 = INT(name='maxLadenWeightOnAxle2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _AxleWeightLimits_maxLadenWeightOnAxle3 = INT(name='maxLadenWeightOnAxle3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _AxleWeightLimits_maxLadenWeightOnAxle4 = INT(name='maxLadenWeightOnAxle4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _AxleWeightLimits_maxLadenWeightOnAxle5 = INT(name='maxLadenWeightOnAxle5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    AxleWeightLimits._cont = ASN1Dict([
        ('maxLadenWeightOnAxle1', _AxleWeightLimits_maxLadenWeightOnAxle1),
        ('maxLadenWeightOnAxle2', _AxleWeightLimits_maxLadenWeightOnAxle2),
        ('maxLadenWeightOnAxle3', _AxleWeightLimits_maxLadenWeightOnAxle3),
        ('maxLadenWeightOnAxle4', _AxleWeightLimits_maxLadenWeightOnAxle4),
        ('maxLadenWeightOnAxle5', _AxleWeightLimits_maxLadenWeightOnAxle5),
        ])
    AxleWeightLimits._ext = None
    
    #-----< DateCompact >-----#
    DateCompact = SEQ(name='DateCompact', mode=MODE_TYPE)
    _DateCompact_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_year._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1990, ub=2117)], ev=None, er=[])
    _DateCompact_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Month')))
    _DateCompact_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_day._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    DateCompact._cont = ASN1Dict([
        ('year', _DateCompact_year),
        ('month', _DateCompact_month),
        ('day', _DateCompact_day),
        ])
    DateCompact._ext = None
    
    #-----< DieselEmissionValues >-----#
    DieselEmissionValues = SEQ(name='DieselEmissionValues', mode=MODE_TYPE)
    _DieselEmissionValues_particulate = SEQ(name='particulate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Particulate')))
    _DieselEmissionValues_absorptionCoeff = INT(name='absorptionCoeff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    DieselEmissionValues._cont = ASN1Dict([
        ('particulate', _DieselEmissionValues_particulate),
        ('absorptionCoeff', _DieselEmissionValues_absorptionCoeff),
        ])
    DieselEmissionValues._ext = None
    
    #-----< DriverCharacteristics >-----#
    DriverCharacteristics = SEQ(name='DriverCharacteristics', mode=MODE_TYPE)
    _DriverCharacteristics_driverClass = INT(name='driverClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DriverClass')))
    _DriverCharacteristics_tripPurpose = INT(name='tripPurpose', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TripPurpose')))
    DriverCharacteristics._cont = ASN1Dict([
        ('driverClass', _DriverCharacteristics_driverClass),
        ('tripPurpose', _DriverCharacteristics_tripPurpose),
        ])
    DriverCharacteristics._ext = None
    
    #-----< Distance >-----#
    Distance = SEQ(name='Distance', mode=MODE_TYPE)
    _Distance_distanceValue = INT(name='distanceValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    _Distance_distanceUnit = INT(name='distanceUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DistanceUnit')), default=0)
    Distance._cont = ASN1Dict([
        ('distanceValue', _Distance_distanceValue),
        ('distanceUnit', _Distance_distanceUnit),
        ])
    Distance._ext = None
    
    #-----< Duration >-----#
    Duration = SEQ(name='Duration', mode=MODE_TYPE)
    _Duration_durationValue = INT(name='durationValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    _Duration_timeUnit = INT(name='timeUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TimeUnit')), default=0)
    Duration._cont = ASN1Dict([
        ('durationValue', _Duration_durationValue),
        ('timeUnit', _Duration_timeUnit),
        ])
    Duration._ext = None
    
    #-----< EngineDetails >-----#
    EngineDetails = SEQ(name='EngineDetails', mode=MODE_TYPE)
    _EngineDetails_engineCapacity = INT(name='engineCapacity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EngineCapacity')))
    _EngineDetails_enginePower = INT(name='enginePower', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EnginePower')))
    EngineDetails._cont = ASN1Dict([
        ('engineCapacity', _EngineDetails_engineCapacity),
        ('enginePower', _EngineDetails_enginePower),
        ])
    EngineDetails._ext = None
    
    #-----< EuVehicleGroup >-----#
    EuVehicleGroup = SEQ(name='EuVehicleGroup', mode=MODE_TYPE)
    _EuVehicleGroup_mainEuVehicleGroup = STR_UTF8(name='mainEuVehicleGroup', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuVehicleGroup_mainEuVehicleGroup._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _EuVehicleGroup_subGroup = STR_UTF8(name='subGroup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EuVehicleGroup_subGroup._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    EuVehicleGroup._cont = ASN1Dict([
        ('mainEuVehicleGroup', _EuVehicleGroup_mainEuVehicleGroup),
        ('subGroup', _EuVehicleGroup_subGroup),
        ])
    EuVehicleGroup._ext = None
    
    #-----< ExhaustEmissionValues >-----#
    ExhaustEmissionValues = SEQ(name='ExhaustEmissionValues', mode=MODE_TYPE)
    _ExhaustEmissionValues_unitType = INT(name='unitType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EmissionUnit')))
    _ExhaustEmissionValues_emissionCo = INT(name='emissionCo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExhaustEmissionValues_emissionCo._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _ExhaustEmissionValues_emissionHc = INT(name='emissionHc', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _ExhaustEmissionValues_emissionNox = INT(name='emissionNox', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _ExhaustEmissionValues_emissionHcNox = INT(name='emissionHcNox', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    ExhaustEmissionValues._cont = ASN1Dict([
        ('unitType', _ExhaustEmissionValues_unitType),
        ('emissionCo', _ExhaustEmissionValues_emissionCo),
        ('emissionHc', _ExhaustEmissionValues_emissionHc),
        ('emissionNox', _ExhaustEmissionValues_emissionNox),
        ('emissionHcNox', _ExhaustEmissionValues_emissionHcNox),
        ])
    ExhaustEmissionValues._ext = None
    
    #-----< FutureCharacteristics >-----#
    FutureCharacteristics = SEQ(name='FutureCharacteristics', mode=MODE_TYPE)
    _FutureCharacteristics_futureElement = INT(name='futureElement', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FutureCharacteristics_futureElement._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _FutureCharacteristics_co2Scheme = INT(name='co2Scheme', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Co2Scheme')))
    _FutureCharacteristics_co2Class = INT(name='co2Class', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Co2EmissionClass')))
    _FutureCharacteristics_suspensionType = INT(name='suspensionType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'SuspensionType')))
    FutureCharacteristics._cont = ASN1Dict([
        ('futureElement', _FutureCharacteristics_futureElement),
        ('co2Scheme', _FutureCharacteristics_co2Scheme),
        ('co2Class', _FutureCharacteristics_co2Class),
        ('suspensionType', _FutureCharacteristics_suspensionType),
        ])
    FutureCharacteristics._ext = None
    
    #-----< NumberOfAxles >-----#
    NumberOfAxles = SEQ(name='NumberOfAxles', mode=MODE_TYPE)
    _NumberOfAxles_trailerAxles = INT(name='trailerAxles', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Axles')))
    _NumberOfAxles_tractorAxles = INT(name='tractorAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Axles')))
    NumberOfAxles._cont = ASN1Dict([
        ('trailerAxles', _NumberOfAxles_trailerAxles),
        ('tractorAxles', _NumberOfAxles_tractorAxles),
        ])
    NumberOfAxles._ext = None
    
    #-----< ObeId >-----#
    ObeId = SEQ(name='ObeId', mode=MODE_TYPE)
    _ObeId_manufacturerId = INT(name='manufacturerId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _ObeId_equipmentObuId = OCT_STR(name='equipmentObuId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EquipmentObuId')))
    ObeId._cont = ASN1Dict([
        ('manufacturerId', _ObeId_manufacturerId),
        ('equipmentObuId', _ObeId_equipmentObuId),
        ])
    ObeId._ext = None
    
    #-----< Particulate >-----#
    Particulate = SEQ(name='Particulate', mode=MODE_TYPE)
    _Particulate_unitType = INT(name='unitType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EmissionUnit')))
    _Particulate_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Particulate_value._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    Particulate._cont = ASN1Dict([
        ('unitType', _Particulate_unitType),
        ('value', _Particulate_value),
        ])
    Particulate._ext = None
    
    #-----< PassengerCapacity >-----#
    PassengerCapacity = SEQ(name='PassengerCapacity', mode=MODE_TYPE)
    _PassengerCapacity_numberOfSeats = INT(name='numberOfSeats', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    _PassengerCapacity_numberOfStandingPlaces = INT(name='numberOfStandingPlaces', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    PassengerCapacity._cont = ASN1Dict([
        ('numberOfSeats', _PassengerCapacity_numberOfSeats),
        ('numberOfStandingPlaces', _PassengerCapacity_numberOfStandingPlaces),
        ])
    PassengerCapacity._ext = None
    
    #-----< PaymentFee >-----#
    PaymentFee = SEQ(name='PaymentFee', mode=MODE_TYPE)
    _PaymentFee_paymentFeeAmount = INT(name='paymentFeeAmount', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _PaymentFee_paymentFeeUnit = OCT_STR(name='paymentFeeUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PayUnit')))
    PaymentFee._cont = ASN1Dict([
        ('paymentFeeAmount', _PaymentFee_paymentFeeAmount),
        ('paymentFeeUnit', _PaymentFee_paymentFeeUnit),
        ])
    PaymentFee._ext = None
    
    #-----< Period >-----#
    Period = SEQ(name='Period', mode=MODE_TYPE)
    _Period_beginOfPeriod = TIME_GEN(name='beginOfPeriod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Period_endOfPeriod = TIME_GEN(name='endOfPeriod', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Period._cont = ASN1Dict([
        ('beginOfPeriod', _Period_beginOfPeriod),
        ('endOfPeriod', _Period_endOfPeriod),
        ])
    Period._ext = None
    
    #-----< Provider >-----#
    Provider = SEQ(name='Provider', mode=MODE_TYPE)
    _Provider_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'CountryCode')))
    _Provider_providerIdentifier = INT(name='providerIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'IssuerIdentifier')))
    Provider._cont = ASN1Dict([
        ('countryCode', _Provider_countryCode),
        ('providerIdentifier', _Provider_providerIdentifier),
        ])
    Provider._ext = None
    
    #-----< RelativePosition3d >-----#
    RelativePosition3d = SEQ(name='RelativePosition3d', mode=MODE_TYPE)
    _RelativePosition3d_longitude = INT(name='longitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Signed')))
    _RelativePosition3d_latitude = INT(name='latitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Signed')))
    _RelativePosition3d_altitude = INT(name='altitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Signed')), opt=True)
    RelativePosition3d._cont = ASN1Dict([
        ('longitude', _RelativePosition3d_longitude),
        ('latitude', _RelativePosition3d_latitude),
        ('altitude', _RelativePosition3d_altitude),
        ])
    RelativePosition3d._ext = None
    
    #-----< SessionClass >-----#
    SessionClass = SEQ(name='SessionClass', mode=MODE_TYPE)
    _SessionClass_sessionTariffClass = INT(name='sessionTariffClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    _SessionClass_sessionClaimedClass = INT(name='sessionClaimedClass', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    SessionClass._cont = ASN1Dict([
        ('sessionTariffClass', _SessionClass_sessionTariffClass),
        ('sessionClaimedClass', _SessionClass_sessionClaimedClass),
        ])
    SessionClass._ext = None
    
    #-----< SessionLocation >-----#
    SessionLocation = SEQ(name='SessionLocation', mode=MODE_TYPE)
    _SessionLocation_ascendingKilometrage = BOOL(name='ascendingKilometrage', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionLocation_laneCodeNumber = INT(name='laneCodeNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionLocation_laneCodeNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    SessionLocation._cont = ASN1Dict([
        ('ascendingKilometrage', _SessionLocation_ascendingKilometrage),
        ('laneCodeNumber', _SessionLocation_laneCodeNumber),
        ])
    SessionLocation._ext = None
    
    #-----< SignedValue >-----#
    SignedValue = CHOICE(name='SignedValue', mode=MODE_TYPE)
    _SignedValue_positive = INT(name='positive', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SignedValue_positive._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _SignedValue_negative = INT(name='negative', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SignedValue_negative._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=-1)], ev=None, er=[])
    SignedValue._cont = ASN1Dict([
        ('positive', _SignedValue_positive),
        ('negative', _SignedValue_negative),
        ])
    SignedValue._ext = None
    
    #-----< SoundLevel >-----#
    SoundLevel = SEQ(name='SoundLevel', mode=MODE_TYPE)
    _SoundLevel_soundStationary = INT(name='soundStationary', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    _SoundLevel_soundDriveBy = INT(name='soundDriveBy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    SoundLevel._cont = ASN1Dict([
        ('soundStationary', _SoundLevel_soundStationary),
        ('soundDriveBy', _SoundLevel_soundDriveBy),
        ])
    SoundLevel._ext = None
    
    #-----< TimeCompact >-----#
    TimeCompact = SEQ(name='TimeCompact', mode=MODE_TYPE)
    _TimeCompact_hours = INT(name='hours', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimeCompact_hours._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=23)], ev=None, er=[])
    _TimeCompact_mins = INT(name='mins', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimeCompact_mins._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    _TimeCompact_doubleSecs = INT(name='doubleSecs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TimeCompact_doubleSecs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=30)], ev=None, er=[])
    TimeCompact._cont = ASN1Dict([
        ('hours', _TimeCompact_hours),
        ('mins', _TimeCompact_mins),
        ('doubleSecs', _TimeCompact_doubleSecs),
        ])
    TimeCompact._ext = None
    
    #-----< TrailerDetails >-----#
    TrailerDetails = SEQ(name='TrailerDetails', mode=MODE_TYPE)
    _TrailerDetails_trailerType = INT(name='trailerType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TrailerType')))
    _TrailerDetails_trailerAxles = INT(name='trailerAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Axles')))
    TrailerDetails._cont = ASN1Dict([
        ('trailerType', _TrailerDetails_trailerType),
        ('trailerAxles', _TrailerDetails_trailerAxles),
        ])
    TrailerDetails._ext = None
    
    #-----< WheelsConfiguration >-----#
    WheelsConfiguration = SEQ(name='WheelsConfiguration', mode=MODE_TYPE)
    _WheelsConfiguration_numberOfWheels = INT(name='numberOfWheels', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WheelsConfiguration_numberOfWheels._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _WheelsConfiguration_numberOfDrivenWheels = INT(name='numberOfDrivenWheels', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _WheelsConfiguration_numberOfDrivenWheels._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _WheelsConfiguration_numberOfSteeredWheels = INT(name='numberOfSteeredWheels', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _WheelsConfiguration_numberOfSteeredWheels._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _WheelsConfiguration_rearWheelsSteeringType = INT(name='rearWheelsSteeringType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'RearWheelsSteeringType')), opt=True)
    WheelsConfiguration._cont = ASN1Dict([
        ('numberOfWheels', _WheelsConfiguration_numberOfWheels),
        ('numberOfDrivenWheels', _WheelsConfiguration_numberOfDrivenWheels),
        ('numberOfSteeredWheels', _WheelsConfiguration_numberOfSteeredWheels),
        ('rearWheelsSteeringType', _WheelsConfiguration_rearWheelsSteeringType),
        ])
    WheelsConfiguration._ext = None
    
    #-----< AxlesWeightLimits >-----#
    AxlesWeightLimits = SEQ_OF(name='AxlesWeightLimits', mode=MODE_TYPE)
    _AxlesWeightLimits__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'AxleWeightLimit')))
    AxlesWeightLimits._cont = _AxlesWeightLimits__item_
    
    #-----< ChargeObjectId >-----#
    ChargeObjectId = SEQ(name='ChargeObjectId', mode=MODE_TYPE)
    _ChargeObjectId_chargeObjectOperator = SEQ(name='chargeObjectOperator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Provider')), opt=True)
    _ChargeObjectId_chargeObjectDesignation = INT(name='chargeObjectDesignation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    ChargeObjectId._cont = ASN1Dict([
        ('chargeObjectOperator', _ChargeObjectId_chargeObjectOperator),
        ('chargeObjectDesignation', _ChargeObjectId_chargeObjectDesignation),
        ])
    ChargeObjectId._ext = None
    
    #-----< ContractValidity >-----#
    ContractValidity = SEQ(name='ContractValidity', mode=MODE_TYPE)
    _ContractValidity_contractRestrictions = OCT_STR(name='contractRestrictions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ContractValidity_contractRestrictions._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _ContractValidity_contractExpiryDate = SEQ(name='contractExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DateCompact')))
    ContractValidity._cont = ASN1Dict([
        ('contractRestrictions', _ContractValidity_contractRestrictions),
        ('contractExpiryDate', _ContractValidity_contractExpiryDate),
        ])
    ContractValidity._ext = None
    
    #-----< DateAndTime >-----#
    DateAndTime = SEQ(name='DateAndTime', mode=MODE_TYPE)
    _DateAndTime_timeDate = SEQ(name='timeDate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DateCompact')))
    _DateAndTime_timeCompact = SEQ(name='timeCompact', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TimeCompact')))
    DateAndTime._cont = ASN1Dict([
        ('timeDate', _DateAndTime_timeDate),
        ('timeCompact', _DateAndTime_timeCompact),
        ])
    DateAndTime._ext = None
    
    #-----< EnvironmentalCharacteristics >-----#
    EnvironmentalCharacteristics = SEQ(name='EnvironmentalCharacteristics', mode=MODE_TYPE)
    _EnvironmentalCharacteristics_euroValue = INT(name='euroValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EuroValue')))
    _EnvironmentalCharacteristics_copValue = INT(name='copValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'CopValue')))
    EnvironmentalCharacteristics._cont = ASN1Dict([
        ('euroValue', _EnvironmentalCharacteristics_euroValue),
        ('copValue', _EnvironmentalCharacteristics_copValue),
        ])
    EnvironmentalCharacteristics._ext = None
    
    #-----< InitialVehicleRegistrationDate >-----#
    InitialVehicleRegistrationDate = SEQ(name='InitialVehicleRegistrationDate', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'DateCompact')))
    
    #-----< Lpn >-----#
    Lpn = SEQ(name='Lpn', mode=MODE_TYPE)
    _Lpn_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'CountryCode')))
    _Lpn_alphabetIndicator = ENUM(name='alphabetIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'AlphabetIndicator')))
    _Lpn_licencePlateNumber = OCT_STR(name='licencePlateNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Lpn._cont = ASN1Dict([
        ('countryCode', _Lpn_countryCode),
        ('alphabetIndicator', _Lpn_alphabetIndicator),
        ('licencePlateNumber', _Lpn_licencePlateNumber),
        ])
    Lpn._ext = None
    
    #-----< PaymentMeans >-----#
    PaymentMeans = SEQ(name='PaymentMeans', mode=MODE_TYPE)
    _PaymentMeans_personalAccountNumber = OCT_STR(name='personalAccountNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PersonalAccountNumber')))
    _PaymentMeans_paymentMeansExpiryDate = SEQ(name='paymentMeansExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DateCompact')))
    _PaymentMeans_paymentMeansUsageControl = OCT_STR(name='paymentMeansUsageControl', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PaymentMeans_paymentMeansUsageControl._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    PaymentMeans._cont = ASN1Dict([
        ('personalAccountNumber', _PaymentMeans_personalAccountNumber),
        ('paymentMeansExpiryDate', _PaymentMeans_paymentMeansExpiryDate),
        ('paymentMeansUsageControl', _PaymentMeans_paymentMeansUsageControl),
        ])
    PaymentMeans._ext = None
    
    #-----< PaymentMeansBalance >-----#
    PaymentMeansBalance = CHOICE(name='PaymentMeansBalance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDataDictionary', 'SignedValue')))
    
    #-----< PurseBalance >-----#
    PurseBalance = SEQ(name='PurseBalance', mode=MODE_TYPE)
    _PurseBalance_purseValue = CHOICE(name='purseValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'SignedValue')))
    _PurseBalance_purseUnit = OCT_STR(name='purseUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PayUnit')))
    PurseBalance._cont = ASN1Dict([
        ('purseValue', _PurseBalance_purseValue),
        ('purseUnit', _PurseBalance_purseUnit),
        ])
    PurseBalance._ext = None
    
    #-----< TrailerCharacteristics >-----#
    TrailerCharacteristics = SEQ(name='TrailerCharacteristics', mode=MODE_TYPE)
    _TrailerCharacteristics_trailerDetails = SEQ(name='trailerDetails', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TrailerDetails')))
    _TrailerCharacteristics_trailerMaxLadenWeight = INT(name='trailerMaxLadenWeight', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _TrailerCharacteristics_trailerWeightUnladen = INT(name='trailerWeightUnladen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    TrailerCharacteristics._cont = ASN1Dict([
        ('trailerDetails', _TrailerCharacteristics_trailerDetails),
        ('trailerMaxLadenWeight', _TrailerCharacteristics_trailerMaxLadenWeight),
        ('trailerWeightUnladen', _TrailerCharacteristics_trailerWeightUnladen),
        ])
    TrailerCharacteristics._ext = None
    
    #-----< ValidityOfContract >-----#
    ValidityOfContract = SEQ(name='ValidityOfContract', mode=MODE_TYPE)
    _ValidityOfContract_issuerRestrictions = OCT_STR(name='issuerRestrictions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ValidityOfContract_issuerRestrictions._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ValidityOfContract_contractExpiryDate = SEQ(name='contractExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DateCompact')))
    ValidityOfContract._cont = ASN1Dict([
        ('issuerRestrictions', _ValidityOfContract_issuerRestrictions),
        ('contractExpiryDate', _ValidityOfContract_contractExpiryDate),
        ])
    ValidityOfContract._ext = None
    
    #-----< VehicleAxlesNumber >-----#
    VehicleAxlesNumber = SEQ(name='VehicleAxlesNumber', mode=MODE_TYPE)
    _VehicleAxlesNumber_tyreConfiguration = INT(name='tyreConfiguration', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TyreConfiguration')))
    _VehicleAxlesNumber_numberOfAxles = SEQ(name='numberOfAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'NumberOfAxles')))
    VehicleAxlesNumber._cont = ASN1Dict([
        ('tyreConfiguration', _VehicleAxlesNumber_tyreConfiguration),
        ('numberOfAxles', _VehicleAxlesNumber_numberOfAxles),
        ])
    VehicleAxlesNumber._ext = None
    
    #-----< VehicleDimensions >-----#
    VehicleDimensions = SEQ(name='VehicleDimensions', mode=MODE_TYPE)
    _VehicleDimensions_vehicleLengthOverall = INT(name='vehicleLengthOverall', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleLengthOverall')))
    _VehicleDimensions_vehicleHeightOverall = INT(name='vehicleHeightOverall', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleHeightOverall')))
    _VehicleDimensions_vehicleWidthOverall = INT(name='vehicleWidthOverall', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleWidthOverall')))
    VehicleDimensions._cont = ASN1Dict([
        ('vehicleLengthOverall', _VehicleDimensions_vehicleLengthOverall),
        ('vehicleHeightOverall', _VehicleDimensions_vehicleHeightOverall),
        ('vehicleWidthOverall', _VehicleDimensions_vehicleWidthOverall),
        ])
    VehicleDimensions._ext = None
    
    #-----< VehicleIdentificationNumber >-----#
    VehicleIdentificationNumber = SEQ(name='VehicleIdentificationNumber', mode=MODE_TYPE)
    _VehicleIdentificationNumber_vin = STR_VIS(name='vin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VehicleIdentificationNumber_vin._const_sz = ASN1Set(rv=[17], rr=[], ev=None, er=[])
    _VehicleIdentificationNumber_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=(0, 9))
    _VehicleIdentificationNumber_fill._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    VehicleIdentificationNumber._cont = ASN1Dict([
        ('vin', _VehicleIdentificationNumber_vin),
        ('fill', _VehicleIdentificationNumber_fill),
        ])
    VehicleIdentificationNumber._ext = None
    
    #-----< VehicleWeightLimits >-----#
    VehicleWeightLimits = SEQ(name='VehicleWeightLimits', mode=MODE_TYPE)
    _VehicleWeightLimits_vehicleMaxLadenWeight = INT(name='vehicleMaxLadenWeight', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleMaxLadenWeight')))
    _VehicleWeightLimits_vehicleTrainMaximumWeight = INT(name='vehicleTrainMaximumWeight', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleTrainMaximumWeight')))
    _VehicleWeightLimits_vehicleWeightUnladen = INT(name='vehicleWeightUnladen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleWeightUnladen')))
    VehicleWeightLimits._cont = ASN1Dict([
        ('vehicleMaxLadenWeight', _VehicleWeightLimits_vehicleMaxLadenWeight),
        ('vehicleTrainMaximumWeight', _VehicleWeightLimits_vehicleTrainMaximumWeight),
        ('vehicleWeightUnladen', _VehicleWeightLimits_vehicleWeightUnladen),
        ])
    VehicleWeightLimits._ext = None
    
    #-----< EfcContextMark >-----#
    EfcContextMark = SEQ(name='EfcContextMark', mode=MODE_TYPE)
    _EfcContextMark_contractProvider = SEQ(name='contractProvider', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Provider')))
    _EfcContextMark_typeOfContract = OCT_STR(name='typeOfContract', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContextMark_typeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _EfcContextMark_contextVersion = INT(name='contextVersion', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContextMark_contextVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    EfcContextMark._cont = ASN1Dict([
        ('contractProvider', _EfcContextMark_contractProvider),
        ('typeOfContract', _EfcContextMark_typeOfContract),
        ('contextVersion', _EfcContextMark_contextVersion),
        ])
    EfcContextMark._ext = None
    
    #-----< ReceiptContract >-----#
    ReceiptContract = SEQ(name='ReceiptContract', mode=MODE_TYPE)
    _ReceiptContract_sessionContractProvider = SEQ(name='sessionContractProvider', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Provider')))
    _ReceiptContract_sessionTypeOfContract = OCT_STR(name='sessionTypeOfContract', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptContract_sessionTypeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ReceiptContract_sessionContractSerialNumber = INT(name='sessionContractSerialNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    ReceiptContract._cont = ASN1Dict([
        ('sessionContractProvider', _ReceiptContract_sessionContractProvider),
        ('sessionTypeOfContract', _ReceiptContract_sessionTypeOfContract),
        ('sessionContractSerialNumber', _ReceiptContract_sessionContractSerialNumber),
        ])
    ReceiptContract._ext = None
    
    #-----< ReceiptData >-----#
    ReceiptData = SEQ(name='ReceiptData', mode=MODE_TYPE)
    _ReceiptData_sessionTime = SEQ(name='sessionTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DateAndTime')))
    _ReceiptData_sessionServiceProvider = SEQ(name='sessionServiceProvider', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Provider')))
    _ReceiptData_locationOfStation = INT(name='locationOfStation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')))
    _ReceiptData_sessionLocation = SEQ(name='sessionLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'SessionLocation')))
    _ReceiptData_sessionType = INT(name='sessionType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    _ReceiptData_sessionResult = INT(name='sessionResult', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ResultOp')))
    _ReceiptData_sessionTariffClass = INT(name='sessionTariffClass', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    _ReceiptData_sessionClaimedClass = INT(name='sessionClaimedClass', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')))
    _ReceiptData_sessionFee = SEQ(name='sessionFee', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PaymentFee')))
    _ReceiptData_sessionContractProvider = SEQ(name='sessionContractProvider', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Provider')))
    _ReceiptData_sessionTypeOfContract = OCT_STR(name='sessionTypeOfContract', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_sessionTypeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ReceiptData_sessionContextVersion = INT(name='sessionContextVersion', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_sessionContextVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _ReceiptData_receiptDataAuthenticator = OCT_STR(name='receiptDataAuthenticator', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_receiptDataAuthenticator._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    ReceiptData._cont = ASN1Dict([
        ('sessionTime', _ReceiptData_sessionTime),
        ('sessionServiceProvider', _ReceiptData_sessionServiceProvider),
        ('locationOfStation', _ReceiptData_locationOfStation),
        ('sessionLocation', _ReceiptData_sessionLocation),
        ('sessionType', _ReceiptData_sessionType),
        ('sessionResult', _ReceiptData_sessionResult),
        ('sessionTariffClass', _ReceiptData_sessionTariffClass),
        ('sessionClaimedClass', _ReceiptData_sessionClaimedClass),
        ('sessionFee', _ReceiptData_sessionFee),
        ('sessionContractProvider', _ReceiptData_sessionContractProvider),
        ('sessionTypeOfContract', _ReceiptData_sessionTypeOfContract),
        ('sessionContextVersion', _ReceiptData_sessionContextVersion),
        ('receiptDataAuthenticator', _ReceiptData_receiptDataAuthenticator),
        ])
    ReceiptData._ext = None
    
    #-----< ReceiptFinancialPart >-----#
    ReceiptFinancialPart = SEQ(name='ReceiptFinancialPart', mode=MODE_TYPE)
    _ReceiptFinancialPart_personalAccountNumber = OCT_STR(name='personalAccountNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PersonalAccountNumber')))
    _ReceiptFinancialPart_sessionPaymentFee = SEQ(name='sessionPaymentFee', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PaymentFee')))
    _ReceiptFinancialPart_sessionCurrentBalance = SEQ(name='sessionCurrentBalance', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PurseBalance')))
    _ReceiptFinancialPart_receiptFinancialSerialNumber = INT(name='receiptFinancialSerialNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')))
    ReceiptFinancialPart._cont = ASN1Dict([
        ('personalAccountNumber', _ReceiptFinancialPart_personalAccountNumber),
        ('sessionPaymentFee', _ReceiptFinancialPart_sessionPaymentFee),
        ('sessionCurrentBalance', _ReceiptFinancialPart_sessionCurrentBalance),
        ('receiptFinancialSerialNumber', _ReceiptFinancialPart_receiptFinancialSerialNumber),
        ])
    ReceiptFinancialPart._ext = None
    
    #-----< ReceiptServicePart >-----#
    ReceiptServicePart = SEQ(name='ReceiptServicePart', mode=MODE_TYPE)
    _ReceiptServicePart_sessionTime = SEQ(name='sessionTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DateAndTime')))
    _ReceiptServicePart_sessionServiceProvider = SEQ(name='sessionServiceProvider', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Provider')))
    _ReceiptServicePart_stationLocation = INT(name='stationLocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptServicePart_stationLocation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1048575)], ev=None, er=[])
    _ReceiptServicePart_sessionLocation = BIT_STR(name='sessionLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptServicePart_sessionLocation._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _ReceiptServicePart_typeOfSession = INT(name='typeOfSession', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'StationType')))
    _ReceiptServicePart_sessionResultOperational = INT(name='sessionResultOperational', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ResultOp')))
    _ReceiptServicePart_sessionResultFinancial = OCT_STR(name='sessionResultFinancial', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ResultFin')))
    ReceiptServicePart._cont = ASN1Dict([
        ('sessionTime', _ReceiptServicePart_sessionTime),
        ('sessionServiceProvider', _ReceiptServicePart_sessionServiceProvider),
        ('stationLocation', _ReceiptServicePart_stationLocation),
        ('sessionLocation', _ReceiptServicePart_sessionLocation),
        ('typeOfSession', _ReceiptServicePart_typeOfSession),
        ('sessionResultOperational', _ReceiptServicePart_sessionResultOperational),
        ('sessionResultFinancial', _ReceiptServicePart_sessionResultFinancial),
        ])
    ReceiptServicePart._ext = None
    
    #-----< VehicleAxles >-----#
    VehicleAxles = SEQ(name='VehicleAxles', mode=MODE_TYPE)
    _VehicleAxles_vehicleFirstAxleHeight = INT(name='vehicleFirstAxleHeight', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleFirstAxleHeight')))
    _VehicleAxles_vehicleAxlesNumber = SEQ(name='vehicleAxlesNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleAxlesNumber')))
    VehicleAxles._cont = ASN1Dict([
        ('vehicleFirstAxleHeight', _VehicleAxles_vehicleFirstAxleHeight),
        ('vehicleAxlesNumber', _VehicleAxles_vehicleAxlesNumber),
        ])
    VehicleAxles._ext = None
    
    #-----< VehicleSpecificCharacteristics >-----#
    VehicleSpecificCharacteristics = SEQ(name='VehicleSpecificCharacteristics', mode=MODE_TYPE)
    _VehicleSpecificCharacteristics_environmentalCharacteristics = SEQ(name='environmentalCharacteristics', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EnvironmentalCharacteristics')))
    _VehicleSpecificCharacteristics_engineCharacteristics = INT(name='engineCharacteristics', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EngineCharacteristics')))
    _VehicleSpecificCharacteristics_descriptiveCharacteristics = INT(name='descriptiveCharacteristics', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleUsageCategoryType')))
    _VehicleSpecificCharacteristics_futureCharacteristics = SEQ(name='futureCharacteristics', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'FutureCharacteristics')))
    VehicleSpecificCharacteristics._cont = ASN1Dict([
        ('environmentalCharacteristics', _VehicleSpecificCharacteristics_environmentalCharacteristics),
        ('engineCharacteristics', _VehicleSpecificCharacteristics_engineCharacteristics),
        ('descriptiveCharacteristics', _VehicleSpecificCharacteristics_descriptiveCharacteristics),
        ('futureCharacteristics', _VehicleSpecificCharacteristics_futureCharacteristics),
        ])
    VehicleSpecificCharacteristics._ext = None
    
    #-----< AggregatedSingleTariffClassSession >-----#
    AggregatedSingleTariffClassSession = SEQ(name='AggregatedSingleTariffClassSession', mode=MODE_TYPE)
    _AggregatedSingleTariffClassSession_timePeriodCovered = SEQ(name='timePeriodCovered', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Period')), opt=True)
    _AggregatedSingleTariffClassSession_currentTariffClass = SEQ(name='currentTariffClass', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TariffClassDescription')), opt=True)
    _AggregatedSingleTariffClassSession_vehicleDescription = SEQ(name='vehicleDescription', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleDescription')), opt=True)
    _AggregatedSingleTariffClassSession_totalDistanceCovered = SEQ(name='totalDistanceCovered', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Distance')), opt=True)
    _AggregatedSingleTariffClassSession_numberOfDetectedEvents = INT(name='numberOfDetectedEvents', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int2Unsigned')), opt=True)
    _AggregatedSingleTariffClassSession_obeStatus = INT(name='obeStatus', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')), opt=True)
    _AggregatedSingleTariffClassSession_feeExclVat = SEQ(name='feeExclVat', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PaymentFee')), opt=True)
    _AggregatedSingleTariffClassSession_sumVat = SEQ(name='sumVat', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PaymentFee')), opt=True)
    AggregatedSingleTariffClassSession._cont = ASN1Dict([
        ('timePeriodCovered', _AggregatedSingleTariffClassSession_timePeriodCovered),
        ('currentTariffClass', _AggregatedSingleTariffClassSession_currentTariffClass),
        ('vehicleDescription', _AggregatedSingleTariffClassSession_vehicleDescription),
        ('totalDistanceCovered', _AggregatedSingleTariffClassSession_totalDistanceCovered),
        ('numberOfDetectedEvents', _AggregatedSingleTariffClassSession_numberOfDetectedEvents),
        ('obeStatus', _AggregatedSingleTariffClassSession_obeStatus),
        ('feeExclVat', _AggregatedSingleTariffClassSession_feeExclVat),
        ('sumVat', _AggregatedSingleTariffClassSession_sumVat),
        ])
    AggregatedSingleTariffClassSession._ext = []
    
    #-----< DetectedChargeObject >-----#
    DetectedChargeObject = SEQ(name='DetectedChargeObject', mode=MODE_TYPE)
    _DetectedChargeObject_chargeObjectId = SEQ(name='chargeObjectId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ChargeObjectId')))
    _DetectedChargeObject_subObjectNumber = INT(name='subObjectNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int4Unsigned')), opt=True)
    _DetectedChargeObject_timeWhenUsed = TIME_GEN(name='timeWhenUsed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DetectedChargeObject_mileageWhenUsed = SEQ(name='mileageWhenUsed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Distance')), opt=True)
    _DetectedChargeObject_currentTariffClass = SEQ(name='currentTariffClass', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TariffClassDescription')), opt=True)
    _DetectedChargeObject_vehicleDescription = SEQ(name='vehicleDescription', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleDescription')), opt=True)
    _DetectedChargeObject_obeStatus = INT(name='obeStatus', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Int1Unsigned')), opt=True)
    _DetectedChargeObject_feeExclVat = SEQ(name='feeExclVat', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PaymentFee')), opt=True)
    _DetectedChargeObject_sumVat = SEQ(name='sumVat', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PaymentFee')), opt=True)
    _DetectedChargeObject_chargeObjDetectionMode = INT(name='chargeObjDetectionMode', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DetectionMode')), opt=True)
    DetectedChargeObject._cont = ASN1Dict([
        ('chargeObjectId', _DetectedChargeObject_chargeObjectId),
        ('subObjectNumber', _DetectedChargeObject_subObjectNumber),
        ('timeWhenUsed', _DetectedChargeObject_timeWhenUsed),
        ('mileageWhenUsed', _DetectedChargeObject_mileageWhenUsed),
        ('currentTariffClass', _DetectedChargeObject_currentTariffClass),
        ('vehicleDescription', _DetectedChargeObject_vehicleDescription),
        ('obeStatus', _DetectedChargeObject_obeStatus),
        ('feeExclVat', _DetectedChargeObject_feeExclVat),
        ('sumVat', _DetectedChargeObject_sumVat),
        ('chargeObjDetectionMode', _DetectedChargeObject_chargeObjDetectionMode),
        ])
    DetectedChargeObject._ext = []
    
    #-----< TariffClassDescription >-----#
    TariffClassDescription = SEQ(name='TariffClassDescription', mode=MODE_TYPE)
    _TariffClassDescription_tariffClassId = INT(name='tariffClassId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TariffClassId')), default=0)
    _TariffClassDescription_localVehicleClassId = INT(name='localVehicleClassId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'LocalVehicleClassId')), opt=True)
    _TariffClassDescription_timeClassId = INT(name='timeClassId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TimeClassId')), opt=True)
    _TariffClassDescription_locationClassId = INT(name='locationClassId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'LocationClassId')), opt=True)
    _TariffClassDescription_userClassId = INT(name='userClassId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'UserClassId')), opt=True)
    TariffClassDescription._cont = ASN1Dict([
        ('tariffClassId', _TariffClassDescription_tariffClassId),
        ('localVehicleClassId', _TariffClassDescription_localVehicleClassId),
        ('timeClassId', _TariffClassDescription_timeClassId),
        ('locationClassId', _TariffClassDescription_locationClassId),
        ('userClassId', _TariffClassDescription_userClassId),
        ])
    TariffClassDescription._ext = None
    
    #-----< UserId >-----#
    UserId = SEQ(name='UserId', mode=MODE_TYPE)
    _UserId_pan = OCT_STR(name='pan', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PersonalAccountNumber')), opt=True)
    _UserId_contractSerialNumber = INT(name='contractSerialNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ContractSerialNumber')), opt=True)
    _UserId_licencePlateNumber = SEQ(name='licencePlateNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Lpn')), opt=True)
    _UserId_obeId = SEQ(name='obeId', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ObeId')), opt=True)
    _UserId_equipmentIccId = OCT_STR(name='equipmentIccId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EquipmentIccId')), opt=True)
    _UserId_customerId = OCT_STR(name='customerId', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UserId_customerId._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    _UserId_efcContextMark = SEQ(name='efcContextMark', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EfcContextMark')), opt=True)
    UserId._cont = ASN1Dict([
        ('pan', _UserId_pan),
        ('contractSerialNumber', _UserId_contractSerialNumber),
        ('licencePlateNumber', _UserId_licencePlateNumber),
        ('obeId', _UserId_obeId),
        ('equipmentIccId', _UserId_equipmentIccId),
        ('customerId', _UserId_customerId),
        ('efcContextMark', _UserId_efcContextMark),
        ])
    UserId._ext = []
    
    #-----< VehicleDescription >-----#
    VehicleDescription = SEQ(name='VehicleDescription', mode=MODE_TYPE)
    _VehicleDescription_vehicleLPNr = SEQ(name='vehicleLPNr', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'Lpn')), opt=True)
    _VehicleDescription_axles = SEQ(name='axles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleAxles')), opt=True)
    _VehicleDescription_class_ = INT(name='class', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleClass')), opt=True)
    _VehicleDescription_dimensions = SEQ(name='dimensions', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleDimensions')), opt=True)
    _VehicleDescription_specificCharacteristics = SEQ(name='specificCharacteristics', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleSpecificCharacteristics')), opt=True)
    _VehicleDescription_ladenWeight = INT(name='ladenWeight', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleWeightLaden')), opt=True)
    _VehicleDescription_weightLimits = SEQ(name='weightLimits', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleWeightLimits')), opt=True)
    _VehicleDescription_trailerCharacteristics = SEQ(name='trailerCharacteristics', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'TrailerCharacteristics')), opt=True)
    _VehicleDescription_vehicleCurrentMaxTrainWeight = INT(name='vehicleCurrentMaxTrainWeight', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'VehicleCurrentMaxTrainWeight')), opt=True)
    _VehicleDescription_actualNumberOfPassengers = INT(name='actualNumberOfPassengers', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ActualNumberOfPassengers')), opt=True)
    _VehicleDescription_axleWeightLimits = SEQ(name='axleWeightLimits', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'AxleWeightLimits')), opt=True)
    _VehicleDescription_dieselEmissionValues = SEQ(name='dieselEmissionValues', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DieselEmissionValues')), opt=True)
    _VehicleDescription_driverCharacteristics = SEQ(name='driverCharacteristics', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'DriverCharacteristics')), opt=True)
    _VehicleDescription_engineDetails = SEQ(name='engineDetails', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'EngineDetails')), opt=True)
    _VehicleDescription_exhaustEmissionValues = SEQ(name='exhaustEmissionValues', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'ExhaustEmissionValues')), opt=True)
    _VehicleDescription_passengerCapacity = SEQ(name='passengerCapacity', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'PassengerCapacity')), opt=True)
    _VehicleDescription_soundLevel = SEQ(name='soundLevel', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDataDictionary', 'SoundLevel')), opt=True)
    VehicleDescription._cont = ASN1Dict([
        ('vehicleLPNr', _VehicleDescription_vehicleLPNr),
        ('axles', _VehicleDescription_axles),
        ('class', _VehicleDescription_class_),
        ('dimensions', _VehicleDescription_dimensions),
        ('specificCharacteristics', _VehicleDescription_specificCharacteristics),
        ('ladenWeight', _VehicleDescription_ladenWeight),
        ('weightLimits', _VehicleDescription_weightLimits),
        ('trailerCharacteristics', _VehicleDescription_trailerCharacteristics),
        ('vehicleCurrentMaxTrainWeight', _VehicleDescription_vehicleCurrentMaxTrainWeight),
        ('actualNumberOfPassengers', _VehicleDescription_actualNumberOfPassengers),
        ('axleWeightLimits', _VehicleDescription_axleWeightLimits),
        ('dieselEmissionValues', _VehicleDescription_dieselEmissionValues),
        ('driverCharacteristics', _VehicleDescription_driverCharacteristics),
        ('engineDetails', _VehicleDescription_engineDetails),
        ('exhaustEmissionValues', _VehicleDescription_exhaustEmissionValues),
        ('passengerCapacity', _VehicleDescription_passengerCapacity),
        ('soundLevel', _VehicleDescription_soundLevel),
        ])
    VehicleDescription._ext = []
    
    _all_ = [
        Int1Unsigned,
        Int1Signed,
        Int2Unsigned,
        Int2Signed,
        Int3Unsigned,
        Int4Unsigned,
        Int4Signed,
        Int8Unsigned,
        Int8Signed,
        AccountStatus,
        ActualNumberOfPassengers,
        AlphabetIndicator,
        Altitude,
        Axles,
        CabType,
        ChassisType,
        Co2EmissionClass,
        Co2EmissionValue,
        Co2EmissionValueLoad,
        Co2Scheme,
        ContractAuthenticator,
        ContractSerialNumber,
        CopValue,
        CountryCode,
        DetectionMode,
        DistanceUnit,
        DriverClass,
        EmissionUnit,
        EngineCapacity,
        EngineCharacteristics,
        EnginePower,
        EquipmentIccId,
        EquipmentObuId,
        EquipmentStatus,
        EuroValue,
        EuroValueSubClass,
        IssuerIdentifier,
        Latitude,
        LocalVehicleClassId,
        LocationClassId,
        Longitude,
        Month,
        PaymentSecurityData,
        PayUnit,
        PersonalAccountNumber,
        RearWheelsSteeringType,
        ReceiptAuthenticator,
        ReceiptDistance,
        ResultFin,
        ReceiptIccId,
        ReceiptObuId,
        ResultOp,
        ReceiptServiceSerialNumber,
        ReceiptText,
        StationType,
        SuspensionType,
        TariffClassId,
        Time,
        TimeClassId,
        TimeUnit,
        TrailerType,
        TripPurpose,
        TyreConfiguration,
        UserClassId,
        VehicleAuthenticator,
        VehicleClass,
        VehicleCurrentMaxTrainWeight,
        VehicleFirstAxleHeight,
        VehicleHeightOverall,
        VehicleLengthOverall,
        VehicleMassInRunningOrder,
        VehicleMaxLadenWeight,
        VehicleOperationalRange,
        VehicleTechnicalPermissibleMaxLadenMass,
        VehicleTotalDistance,
        VehicleTrainMaximumWeight,
        VehicleUsageCategoryType,
        VehicleWeightLaden,
        VehicleWeightUnladen,
        VehicleWidthOverall,
        Weekday,
        _AbsolutePosition2d_gnssLon,
        _AbsolutePosition2d_gnssLat,
        AbsolutePosition2d,
        _AbsolutePosition3d_longitude,
        _AbsolutePosition3d_latitude,
        _AbsolutePosition3d_altitude,
        AbsolutePosition3d,
        _AxleWeightLimit_axleNumber,
        _AxleWeightLimit_maxLadenWeightOnAxle,
        AxleWeightLimit,
        _AxleWeightLimits_maxLadenWeightOnAxle1,
        _AxleWeightLimits_maxLadenWeightOnAxle2,
        _AxleWeightLimits_maxLadenWeightOnAxle3,
        _AxleWeightLimits_maxLadenWeightOnAxle4,
        _AxleWeightLimits_maxLadenWeightOnAxle5,
        AxleWeightLimits,
        _DateCompact_year,
        _DateCompact_month,
        _DateCompact_day,
        DateCompact,
        _DieselEmissionValues_particulate,
        _DieselEmissionValues_absorptionCoeff,
        DieselEmissionValues,
        _DriverCharacteristics_driverClass,
        _DriverCharacteristics_tripPurpose,
        DriverCharacteristics,
        _Distance_distanceValue,
        _Distance_distanceUnit,
        Distance,
        _Duration_durationValue,
        _Duration_timeUnit,
        Duration,
        _EngineDetails_engineCapacity,
        _EngineDetails_enginePower,
        EngineDetails,
        _EuVehicleGroup_mainEuVehicleGroup,
        _EuVehicleGroup_subGroup,
        EuVehicleGroup,
        _ExhaustEmissionValues_unitType,
        _ExhaustEmissionValues_emissionCo,
        _ExhaustEmissionValues_emissionHc,
        _ExhaustEmissionValues_emissionNox,
        _ExhaustEmissionValues_emissionHcNox,
        ExhaustEmissionValues,
        _FutureCharacteristics_futureElement,
        _FutureCharacteristics_co2Scheme,
        _FutureCharacteristics_co2Class,
        _FutureCharacteristics_suspensionType,
        FutureCharacteristics,
        _NumberOfAxles_trailerAxles,
        _NumberOfAxles_tractorAxles,
        NumberOfAxles,
        _ObeId_manufacturerId,
        _ObeId_equipmentObuId,
        ObeId,
        _Particulate_unitType,
        _Particulate_value,
        Particulate,
        _PassengerCapacity_numberOfSeats,
        _PassengerCapacity_numberOfStandingPlaces,
        PassengerCapacity,
        _PaymentFee_paymentFeeAmount,
        _PaymentFee_paymentFeeUnit,
        PaymentFee,
        _Period_beginOfPeriod,
        _Period_endOfPeriod,
        Period,
        _Provider_countryCode,
        _Provider_providerIdentifier,
        Provider,
        _RelativePosition3d_longitude,
        _RelativePosition3d_latitude,
        _RelativePosition3d_altitude,
        RelativePosition3d,
        _SessionClass_sessionTariffClass,
        _SessionClass_sessionClaimedClass,
        SessionClass,
        _SessionLocation_ascendingKilometrage,
        _SessionLocation_laneCodeNumber,
        SessionLocation,
        _SignedValue_positive,
        _SignedValue_negative,
        SignedValue,
        _SoundLevel_soundStationary,
        _SoundLevel_soundDriveBy,
        SoundLevel,
        _TimeCompact_hours,
        _TimeCompact_mins,
        _TimeCompact_doubleSecs,
        TimeCompact,
        _TrailerDetails_trailerType,
        _TrailerDetails_trailerAxles,
        TrailerDetails,
        _WheelsConfiguration_numberOfWheels,
        _WheelsConfiguration_numberOfDrivenWheels,
        _WheelsConfiguration_numberOfSteeredWheels,
        _WheelsConfiguration_rearWheelsSteeringType,
        WheelsConfiguration,
        _AxlesWeightLimits__item_,
        AxlesWeightLimits,
        _ChargeObjectId_chargeObjectOperator,
        _ChargeObjectId_chargeObjectDesignation,
        ChargeObjectId,
        _ContractValidity_contractRestrictions,
        _ContractValidity_contractExpiryDate,
        ContractValidity,
        _DateAndTime_timeDate,
        _DateAndTime_timeCompact,
        DateAndTime,
        _EnvironmentalCharacteristics_euroValue,
        _EnvironmentalCharacteristics_copValue,
        EnvironmentalCharacteristics,
        InitialVehicleRegistrationDate,
        _Lpn_countryCode,
        _Lpn_alphabetIndicator,
        _Lpn_licencePlateNumber,
        Lpn,
        _PaymentMeans_personalAccountNumber,
        _PaymentMeans_paymentMeansExpiryDate,
        _PaymentMeans_paymentMeansUsageControl,
        PaymentMeans,
        PaymentMeansBalance,
        _PurseBalance_purseValue,
        _PurseBalance_purseUnit,
        PurseBalance,
        _TrailerCharacteristics_trailerDetails,
        _TrailerCharacteristics_trailerMaxLadenWeight,
        _TrailerCharacteristics_trailerWeightUnladen,
        TrailerCharacteristics,
        _ValidityOfContract_issuerRestrictions,
        _ValidityOfContract_contractExpiryDate,
        ValidityOfContract,
        _VehicleAxlesNumber_tyreConfiguration,
        _VehicleAxlesNumber_numberOfAxles,
        VehicleAxlesNumber,
        _VehicleDimensions_vehicleLengthOverall,
        _VehicleDimensions_vehicleHeightOverall,
        _VehicleDimensions_vehicleWidthOverall,
        VehicleDimensions,
        _VehicleIdentificationNumber_vin,
        _VehicleIdentificationNumber_fill,
        VehicleIdentificationNumber,
        _VehicleWeightLimits_vehicleMaxLadenWeight,
        _VehicleWeightLimits_vehicleTrainMaximumWeight,
        _VehicleWeightLimits_vehicleWeightUnladen,
        VehicleWeightLimits,
        _EfcContextMark_contractProvider,
        _EfcContextMark_typeOfContract,
        _EfcContextMark_contextVersion,
        EfcContextMark,
        _ReceiptContract_sessionContractProvider,
        _ReceiptContract_sessionTypeOfContract,
        _ReceiptContract_sessionContractSerialNumber,
        ReceiptContract,
        _ReceiptData_sessionTime,
        _ReceiptData_sessionServiceProvider,
        _ReceiptData_locationOfStation,
        _ReceiptData_sessionLocation,
        _ReceiptData_sessionType,
        _ReceiptData_sessionResult,
        _ReceiptData_sessionTariffClass,
        _ReceiptData_sessionClaimedClass,
        _ReceiptData_sessionFee,
        _ReceiptData_sessionContractProvider,
        _ReceiptData_sessionTypeOfContract,
        _ReceiptData_sessionContextVersion,
        _ReceiptData_receiptDataAuthenticator,
        ReceiptData,
        _ReceiptFinancialPart_personalAccountNumber,
        _ReceiptFinancialPart_sessionPaymentFee,
        _ReceiptFinancialPart_sessionCurrentBalance,
        _ReceiptFinancialPart_receiptFinancialSerialNumber,
        ReceiptFinancialPart,
        _ReceiptServicePart_sessionTime,
        _ReceiptServicePart_sessionServiceProvider,
        _ReceiptServicePart_stationLocation,
        _ReceiptServicePart_sessionLocation,
        _ReceiptServicePart_typeOfSession,
        _ReceiptServicePart_sessionResultOperational,
        _ReceiptServicePart_sessionResultFinancial,
        ReceiptServicePart,
        _VehicleAxles_vehicleFirstAxleHeight,
        _VehicleAxles_vehicleAxlesNumber,
        VehicleAxles,
        _VehicleSpecificCharacteristics_environmentalCharacteristics,
        _VehicleSpecificCharacteristics_engineCharacteristics,
        _VehicleSpecificCharacteristics_descriptiveCharacteristics,
        _VehicleSpecificCharacteristics_futureCharacteristics,
        VehicleSpecificCharacteristics,
        _AggregatedSingleTariffClassSession_timePeriodCovered,
        _AggregatedSingleTariffClassSession_currentTariffClass,
        _AggregatedSingleTariffClassSession_vehicleDescription,
        _AggregatedSingleTariffClassSession_totalDistanceCovered,
        _AggregatedSingleTariffClassSession_numberOfDetectedEvents,
        _AggregatedSingleTariffClassSession_obeStatus,
        _AggregatedSingleTariffClassSession_feeExclVat,
        _AggregatedSingleTariffClassSession_sumVat,
        AggregatedSingleTariffClassSession,
        _DetectedChargeObject_chargeObjectId,
        _DetectedChargeObject_subObjectNumber,
        _DetectedChargeObject_timeWhenUsed,
        _DetectedChargeObject_mileageWhenUsed,
        _DetectedChargeObject_currentTariffClass,
        _DetectedChargeObject_vehicleDescription,
        _DetectedChargeObject_obeStatus,
        _DetectedChargeObject_feeExclVat,
        _DetectedChargeObject_sumVat,
        _DetectedChargeObject_chargeObjDetectionMode,
        DetectedChargeObject,
        _TariffClassDescription_tariffClassId,
        _TariffClassDescription_localVehicleClassId,
        _TariffClassDescription_timeClassId,
        _TariffClassDescription_locationClassId,
        _TariffClassDescription_userClassId,
        TariffClassDescription,
        _UserId_pan,
        _UserId_contractSerialNumber,
        _UserId_licencePlateNumber,
        _UserId_obeId,
        _UserId_equipmentIccId,
        _UserId_customerId,
        _UserId_efcContextMark,
        UserId,
        _VehicleDescription_vehicleLPNr,
        _VehicleDescription_axles,
        _VehicleDescription_class_,
        _VehicleDescription_dimensions,
        _VehicleDescription_specificCharacteristics,
        _VehicleDescription_ladenWeight,
        _VehicleDescription_weightLimits,
        _VehicleDescription_trailerCharacteristics,
        _VehicleDescription_vehicleCurrentMaxTrainWeight,
        _VehicleDescription_actualNumberOfPassengers,
        _VehicleDescription_axleWeightLimits,
        _VehicleDescription_dieselEmissionValues,
        _VehicleDescription_driverCharacteristics,
        _VehicleDescription_engineDetails,
        _VehicleDescription_exhaustEmissionValues,
        _VehicleDescription_passengerCapacity,
        _VehicleDescription_soundLevel,
        VehicleDescription,
    ]

class AVIAEINumberingAndDataStructures:

    _name_  = 'AVIAEINumberingAndDataStructures'
    _oid_   = [1, 0, 14816, 1, 1]
    
    _obj_ = [
        'CS1',
        'CS2',
        'CS3',
        'CS4',
        'CS5',
        'CS7',
        'FreightContainerData',
        'CS8',
        'CountryCode',
        'IssuerIdentifier',
        'ManufacturerIdentifier',
        'LicPlateNumber',
        'ServiceNumber',
        'TaxCode',
        'AlphabetIndicator',
        'AviEriDateTime',
        'StartTime',
        'StopTime',
        'GeoGraphicalLimit',
        'ServiceApplicationLimit',
        'version',
        ]
    _type_ = [
        'CS1',
        'CS2',
        'CS3',
        'CS4',
        'CS5',
        'CS7',
        'FreightContainerData',
        'CS8',
        'CountryCode',
        'IssuerIdentifier',
        'ManufacturerIdentifier',
        'LicPlateNumber',
        'ServiceNumber',
        'TaxCode',
        'AlphabetIndicator',
        'AviEriDateTime',
        'StartTime',
        'StopTime',
        'GeoGraphicalLimit',
        'ServiceApplicationLimit',
        ]
    _set_ = [
        ]
    _val_ = [
        'version',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< CS1 >-----#
    CS1 = SEQ(name='CS1', mode=MODE_TYPE)
    _CS1_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _CS1_issuerIdentifier = INT(name='issuerIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'IssuerIdentifier')))
    _CS1_serviceNumber = BIT_STR(name='serviceNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ServiceNumber')))
    CS1._cont = ASN1Dict([
        ('countryCode', _CS1_countryCode),
        ('issuerIdentifier', _CS1_issuerIdentifier),
        ('serviceNumber', _CS1_serviceNumber),
        ])
    CS1._ext = None
    
    #-----< CS2 >-----#
    CS2 = SEQ(name='CS2', mode=MODE_TYPE)
    _CS2_manufacturerIdentifier = INT(name='manufacturerIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ManufacturerIdentifier')))
    _CS2_serviceNumber = BIT_STR(name='serviceNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ServiceNumber')))
    CS2._cont = ASN1Dict([
        ('manufacturerIdentifier', _CS2_manufacturerIdentifier),
        ('serviceNumber', _CS2_serviceNumber),
        ])
    CS2._ext = None
    
    #-----< CS3 >-----#
    CS3 = SEQ(name='CS3', mode=MODE_TYPE)
    _CS3_startTime = OCT_STR(name='startTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'StartTime')))
    _CS3_stopTime = OCT_STR(name='stopTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'StopTime')))
    _CS3_geographLimit = BIT_STR(name='geographLimit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'GeoGraphicalLimit')))
    _CS3_serviceAppLimit = BIT_STR(name='serviceAppLimit', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'ServiceApplicationLimit')))
    CS3._cont = ASN1Dict([
        ('startTime', _CS3_startTime),
        ('stopTime', _CS3_stopTime),
        ('geographLimit', _CS3_geographLimit),
        ('serviceAppLimit', _CS3_serviceAppLimit),
        ])
    CS3._ext = None
    
    #-----< CS4 >-----#
    CS4 = SEQ(name='CS4', mode=MODE_TYPE)
    _CS4_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _CS4_alphabetIndicator = INT(name='alphabetIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'AlphabetIndicator')))
    _CS4_licPlateNumber = OCT_STR(name='licPlateNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'LicPlateNumber')))
    CS4._cont = ASN1Dict([
        ('countryCode', _CS4_countryCode),
        ('alphabetIndicator', _CS4_alphabetIndicator),
        ('licPlateNumber', _CS4_licPlateNumber),
        ])
    CS4._ext = None
    
    #-----< CS5 >-----#
    CS5 = SEQ(name='CS5', mode=MODE_TYPE)
    _CS5_vin = STR_VIS(name='vin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CS5_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CS5_fill._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    CS5._cont = ASN1Dict([
        ('vin', _CS5_vin),
        ('fill', _CS5_fill),
        ])
    CS5._ext = None
    
    #-----< CS7 >-----#
    CS7 = SEQ(name='CS7', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'FreightContainerData')))
    
    #-----< FreightContainerData >-----#
    FreightContainerData = SEQ(name='FreightContainerData', mode=MODE_TYPE)
    _FreightContainerData_ownerCode = BIT_STR(name='ownerCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_ownerCode._const_sz = ASN1Set(rv=[19], rr=[], ev=None, er=[])
    _FreightContainerData_serialNumber = INT(name='serialNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_serialNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1000000)], ev=None, er=[])
    _FreightContainerData_checkDigit = INT(name='checkDigit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_checkDigit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    _FreightContainerData_length = INT(name='length', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_length._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2000)], ev=None, er=[])
    _FreightContainerData_height = INT(name='height', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_height._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=500)], ev=None, er=[])
    _FreightContainerData_width = INT(name='width', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_width._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=200, ub=300)], ev=None, er=[])
    _FreightContainerData_containerTypeCode = INT(name='containerTypeCode', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_containerTypeCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    _FreightContainerData_maximumGrossMass = INT(name='maximumGrossMass', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_maximumGrossMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=19, ub=500)], ev=None, er=[])
    _FreightContainerData_tareMass = INT(name='tareMass', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_tareMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=99)], ev=None, er=[])
    _FreightContainerData_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FreightContainerData_fill._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    FreightContainerData._cont = ASN1Dict([
        ('ownerCode', _FreightContainerData_ownerCode),
        ('serialNumber', _FreightContainerData_serialNumber),
        ('checkDigit', _FreightContainerData_checkDigit),
        ('length', _FreightContainerData_length),
        ('height', _FreightContainerData_height),
        ('width', _FreightContainerData_width),
        ('containerTypeCode', _FreightContainerData_containerTypeCode),
        ('maximumGrossMass', _FreightContainerData_maximumGrossMass),
        ('tareMass', _FreightContainerData_tareMass),
        ('fill', _FreightContainerData_fill),
        ])
    FreightContainerData._ext = None
    
    #-----< CS8 >-----#
    CS8 = SEQ(name='CS8', mode=MODE_TYPE)
    _CS8_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CS8_fill._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _CS8_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _CS8_taxCode = OCT_STR(name='taxCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'TaxCode')))
    CS8._cont = ASN1Dict([
        ('fill', _CS8_fill),
        ('countryCode', _CS8_countryCode),
        ('taxCode', _CS8_taxCode),
        ])
    CS8._ext = None
    
    #-----< CountryCode >-----#
    CountryCode = BIT_STR(name='CountryCode', mode=MODE_TYPE)
    CountryCode._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< IssuerIdentifier >-----#
    IssuerIdentifier = INT(name='IssuerIdentifier', mode=MODE_TYPE)
    IssuerIdentifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< ManufacturerIdentifier >-----#
    ManufacturerIdentifier = INT(name='ManufacturerIdentifier', mode=MODE_TYPE)
    ManufacturerIdentifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< LicPlateNumber >-----#
    LicPlateNumber = OCT_STR(name='LicPlateNumber', mode=MODE_TYPE)
    
    #-----< ServiceNumber >-----#
    ServiceNumber = BIT_STR(name='ServiceNumber', mode=MODE_TYPE)
    ServiceNumber._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    _ServiceNumber_contain = INT(name='_cont_ServiceNumber', mode=MODE_TYPE)
    _ServiceNumber_contain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    ServiceNumber._const_cont = _ServiceNumber_contain
    
    #-----< TaxCode >-----#
    TaxCode = OCT_STR(name='TaxCode', mode=MODE_TYPE)
    
    #-----< AlphabetIndicator >-----#
    AlphabetIndicator = INT(name='AlphabetIndicator', mode=MODE_TYPE)
    AlphabetIndicator._cont = ASN1Dict([('latinAlphabetNo1', 0), ('latinAlphabetNo2', 1), ('latinAlphabetNo3', 2), ('latinAlphabetNo4', 3), ('latinCyrillicAlphabet', 4), ('latinArabicAlphabet', 5), ('latinGreekAlphabet', 6), ('latinHebrewAlphabet', 7), ('latinAlphabetNo5', 8), ('latinAlphabetNo6', 9), ('twoOctetBMP', 10), ('fourOctetCanonical', 11)])
    AlphabetIndicator._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< AviEriDateTime >-----#
    AviEriDateTime = OCT_STR(name='AviEriDateTime', mode=MODE_TYPE)
    AviEriDateTime._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< StartTime >-----#
    StartTime = OCT_STR(name='StartTime', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'AviEriDateTime')))
    
    #-----< StopTime >-----#
    StopTime = OCT_STR(name='StopTime', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'AviEriDateTime')))
    
    #-----< GeoGraphicalLimit >-----#
    GeoGraphicalLimit = BIT_STR(name='GeoGraphicalLimit', mode=MODE_TYPE)
    GeoGraphicalLimit._cont = ASN1Dict([('globalRestriction', 0), ('regionalRestriction', 1), ('nationalRestriction', 2), ('district', 3), ('issuerCoverageRestriction', 4), ('reservedForCEN1', 5), ('reservedForCEN2', 6), ('issuerSpecificRestriction', 7)])
    GeoGraphicalLimit._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< ServiceApplicationLimit >-----#
    ServiceApplicationLimit = BIT_STR(name='ServiceApplicationLimit', mode=MODE_TYPE)
    ServiceApplicationLimit._cont = ASN1Dict([('notForPostpayment', 0), ('notForPrepayment', 1), ('notForVehicleaccess', 2), ('notForFleetcontrol', 3), ('issuerSpecificRestriction1', 4), ('issuerSpecificRestriction2', 5), ('issuerSpecificRestriction3', 6), ('issuerSpecificRestriction4', 7)])
    ServiceApplicationLimit._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< version >-----#
    version = INT(name='version', mode=MODE_VALUE)
    version._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    version._val = 1
    
    _all_ = [
        _CS1_countryCode,
        _CS1_issuerIdentifier,
        _CS1_serviceNumber,
        CS1,
        _CS2_manufacturerIdentifier,
        _CS2_serviceNumber,
        CS2,
        _CS3_startTime,
        _CS3_stopTime,
        _CS3_geographLimit,
        _CS3_serviceAppLimit,
        CS3,
        _CS4_countryCode,
        _CS4_alphabetIndicator,
        _CS4_licPlateNumber,
        CS4,
        _CS5_vin,
        _CS5_fill,
        CS5,
        CS7,
        _FreightContainerData_ownerCode,
        _FreightContainerData_serialNumber,
        _FreightContainerData_checkDigit,
        _FreightContainerData_length,
        _FreightContainerData_height,
        _FreightContainerData_width,
        _FreightContainerData_containerTypeCode,
        _FreightContainerData_maximumGrossMass,
        _FreightContainerData_tareMass,
        _FreightContainerData_fill,
        FreightContainerData,
        _CS8_fill,
        _CS8_countryCode,
        _CS8_taxCode,
        CS8,
        CountryCode,
        IssuerIdentifier,
        ManufacturerIdentifier,
        LicPlateNumber,
        _ServiceNumber_contain,
        ServiceNumber,
        TaxCode,
        AlphabetIndicator,
        AviEriDateTime,
        StartTime,
        StopTime,
        GeoGraphicalLimit,
        ServiceApplicationLimit,
        version,
    ]

class EfcDsrcApplication:

    _name_  = 'EfcDsrcApplication'
    _oid_   = [1, 0, 14906, 0, 8]
    
    _obj_ = [
        'ActualNumberOfPassengers',
        'AxleWeightLimits',
        'AddRq',
        'ChannelId',
        'ChannelRq',
        'ChannelRs',
        'CopyRq',
        'CreditRq',
        'CreditRs',
        'DebitRq',
        'DebitRs',
        'GetInstanceRq',
        'GetInstanceRs',
        'GetStampedRq',
        'GetStampedRs',
        'SetInstanceRq',
        'SetMMIRq',
        'SetStampedRq',
        'SubRq',
        'CO2EmissionValue',
        'ContractSerialNumber',
        'ContractAuthenticator',
        'ContractValidity',
        'ContractVehicle',
        'DateCompact',
        'DescriptiveCharacteristics',
        'DieselEmissionValues',
        'DriverCharacteristics',
        'EFC-ContextMark',
        'EnvironmentalCharacteristics',
        'EuroValue',
        'CopValue',
        'EngineCharacteristics',
        'Engine',
        'EquipmentOBUId',
        'EquipmentStatus',
        'ExhaustEmissionValues',
        'FutureCharacteristics',
        'ICC-Id',
        'Int1',
        'Int2',
        'Int3',
        'Int4',
        'LPN',
        'PassengerCapacity',
        'PaymentFee',
        'PaymentMeans',
        'PaymentMeansBalance',
        'SignedValue',
        'PaymentMeansUnit',
        'PaymentSecurityData',
        'PayUnit',
        'PersonalAccountNumber',
        'Provider',
        'PurseBalance',
        'ReceiptContract',
        'ReceiptData1',
        'ReceiptData2',
        'ReceiptData',
        'ReceiptDistance',
        'ReceiptFinancialPart',
        'ReceiptICC-Id',
        'ReceiptOBUId',
        'ReceiptServicePart',
        'ReceiptServiceSerialNumber',
        'ReceiptAuthenticator',
        'ReceiptText',
        'ResultFin',
        'ResultOp',
        'SessionClass',
        'SessionLocation',
        'StationType',
        'DateAndTime',
        'SoundLevel',
        'TrailerCharacteristics',
        'TrailerDetails',
        'TrailerLicencePlateNumber',
        'UnitType',
        'ValidityOfContract',
        'VehicleAuthenticator',
        'VehicleAxles',
        'TrailerAxles',
        'TractorAxles',
        'VehicleClass',
        'VehicleDimensions',
        'VehicleLicencePlateNumber',
        'VehicleIdentificationNumber',
        'VehicleSpecificCharacteristics',
        'VehicleTotalDistance',
        'VehicleWeightLaden',
        'VehicleCurrentMaxTrainWeight',
        'VehicleWeightLimits',
        ]
    _type_ = [
        'ActualNumberOfPassengers',
        'AxleWeightLimits',
        'AddRq',
        'ChannelId',
        'ChannelRq',
        'ChannelRs',
        'CopyRq',
        'CreditRq',
        'CreditRs',
        'DebitRq',
        'DebitRs',
        'GetInstanceRq',
        'GetInstanceRs',
        'GetStampedRq',
        'GetStampedRs',
        'SetInstanceRq',
        'SetMMIRq',
        'SetStampedRq',
        'SubRq',
        'CO2EmissionValue',
        'ContractSerialNumber',
        'ContractAuthenticator',
        'ContractValidity',
        'ContractVehicle',
        'DateCompact',
        'DescriptiveCharacteristics',
        'DieselEmissionValues',
        'DriverCharacteristics',
        'EFC-ContextMark',
        'EnvironmentalCharacteristics',
        'EuroValue',
        'CopValue',
        'EngineCharacteristics',
        'Engine',
        'EquipmentOBUId',
        'EquipmentStatus',
        'ExhaustEmissionValues',
        'FutureCharacteristics',
        'ICC-Id',
        'Int1',
        'Int2',
        'Int3',
        'Int4',
        'LPN',
        'PassengerCapacity',
        'PaymentFee',
        'PaymentMeans',
        'PaymentMeansBalance',
        'SignedValue',
        'PaymentMeansUnit',
        'PaymentSecurityData',
        'PayUnit',
        'PersonalAccountNumber',
        'Provider',
        'PurseBalance',
        'ReceiptContract',
        'ReceiptData1',
        'ReceiptData2',
        'ReceiptData',
        'ReceiptDistance',
        'ReceiptFinancialPart',
        'ReceiptICC-Id',
        'ReceiptOBUId',
        'ReceiptServicePart',
        'ReceiptServiceSerialNumber',
        'ReceiptAuthenticator',
        'ReceiptText',
        'ResultFin',
        'ResultOp',
        'SessionClass',
        'SessionLocation',
        'StationType',
        'DateAndTime',
        'SoundLevel',
        'TrailerCharacteristics',
        'TrailerDetails',
        'TrailerLicencePlateNumber',
        'UnitType',
        'ValidityOfContract',
        'VehicleAuthenticator',
        'VehicleAxles',
        'TrailerAxles',
        'TractorAxles',
        'VehicleClass',
        'VehicleDimensions',
        'VehicleLicencePlateNumber',
        'VehicleIdentificationNumber',
        'VehicleSpecificCharacteristics',
        'VehicleTotalDistance',
        'VehicleWeightLaden',
        'VehicleCurrentMaxTrainWeight',
        'VehicleWeightLimits',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        'GetInstanceRs',
        'GetStampedRs',
        'SetInstanceRq',
        'SetStampedRq',
        ]
    
    #-----< ActualNumberOfPassengers >-----#
    ActualNumberOfPassengers = INT(name='ActualNumberOfPassengers', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    
    #-----< AxleWeightLimits >-----#
    AxleWeightLimits = SEQ(name='AxleWeightLimits', mode=MODE_TYPE)
    _AxleWeightLimits_maxLadenweightOnAxle1 = INT(name='maxLadenweightOnAxle1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle2 = INT(name='maxLadenweightOnAxle2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle3 = INT(name='maxLadenweightOnAxle3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle4 = INT(name='maxLadenweightOnAxle4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _AxleWeightLimits_maxLadenweightOnAxle5 = INT(name='maxLadenweightOnAxle5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    AxleWeightLimits._cont = ASN1Dict([
        ('maxLadenweightOnAxle1', _AxleWeightLimits_maxLadenweightOnAxle1),
        ('maxLadenweightOnAxle2', _AxleWeightLimits_maxLadenweightOnAxle2),
        ('maxLadenweightOnAxle3', _AxleWeightLimits_maxLadenweightOnAxle3),
        ('maxLadenweightOnAxle4', _AxleWeightLimits_maxLadenweightOnAxle4),
        ('maxLadenweightOnAxle5', _AxleWeightLimits_maxLadenweightOnAxle5),
        ])
    AxleWeightLimits._ext = None
    
    #-----< AddRq >-----#
    AddRq = SEQ(name='AddRq', mode=MODE_TYPE)
    _AddRq_attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddRq_attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _AddRq_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    AddRq._cont = ASN1Dict([
        ('attributeId', _AddRq_attributeId),
        ('value', _AddRq_value),
        ])
    AddRq._ext = None
    
    #-----< ChannelId >-----#
    ChannelId = INT(name='ChannelId', mode=MODE_TYPE)
    ChannelId._cont = ASN1Dict([('obu', 0), ('sam1', 1), ('sam2', 2), ('icc', 3), ('display', 4), ('buzzer', 5), ('printer', 6), ('serialInterface', 7), ('parallelInterface', 8), ('gPS', 9), ('tachograph', 10), ('privateUse1', 11), ('privateUse2', 12), ('privateUse3', 13), ('privateUse4', 14), ('privateUse5', 15), ('bluetooth', 16)])
    ChannelId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ChannelRq >-----#
    ChannelRq = SEQ(name='ChannelRq', mode=MODE_TYPE)
    _ChannelRq_channelId = INT(name='channelId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelId')))
    _ChannelRq_apdu = OCT_STR(name='apdu', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ChannelRq._cont = ASN1Dict([
        ('channelId', _ChannelRq_channelId),
        ('apdu', _ChannelRq_apdu),
        ])
    ChannelRq._ext = None
    
    #-----< ChannelRs >-----#
    ChannelRs = SEQ(name='ChannelRs', mode=MODE_TYPE)
    _ChannelRs_channelId = INT(name='channelId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelId')))
    _ChannelRs_apdu = OCT_STR(name='apdu', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ChannelRs._cont = ASN1Dict([
        ('channelId', _ChannelRs_channelId),
        ('apdu', _ChannelRs_apdu),
        ])
    ChannelRs._ext = None
    
    #-----< CopyRq >-----#
    CopyRq = SEQ(name='CopyRq', mode=MODE_TYPE)
    _CopyRq_destinationEID = INT(name='destinationEID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CopyRq_destinationEID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _CopyRq_attributeIdList = SEQ_OF(name='attributeIdList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    CopyRq._cont = ASN1Dict([
        ('destinationEID', _CopyRq_destinationEID),
        ('attributeIdList', _CopyRq_attributeIdList),
        ])
    CopyRq._ext = None
    
    #-----< CreditRq >-----#
    CreditRq = SEQ(name='CreditRq', mode=MODE_TYPE)
    _CreditRq_refund = SEQ(name='refund', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _CreditRq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CreditRq_key = INT(name='key', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CreditRq_key._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    CreditRq._cont = ASN1Dict([
        ('refund', _CreditRq_refund),
        ('nonce', _CreditRq_nonce),
        ('key', _CreditRq_key),
        ])
    CreditRq._ext = None
    
    #-----< CreditRs >-----#
    CreditRs = SEQ(name='CreditRs', mode=MODE_TYPE)
    _CreditRs_creditResult = OCT_STR(name='creditResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultFin')))
    _CreditRs_creditAuthenticator = OCT_STR(name='creditAuthenticator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CreditRs._cont = ASN1Dict([
        ('creditResult', _CreditRs_creditResult),
        ('creditAuthenticator', _CreditRs_creditAuthenticator),
        ])
    CreditRs._ext = None
    
    #-----< DebitRq >-----#
    DebitRq = SEQ(name='DebitRq', mode=MODE_TYPE)
    _DebitRq_debitPaymentFee = SEQ(name='debitPaymentFee', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _DebitRq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DebitRq_keyRef = INT(name='keyRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DebitRq_keyRef._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    DebitRq._cont = ASN1Dict([
        ('debitPaymentFee', _DebitRq_debitPaymentFee),
        ('nonce', _DebitRq_nonce),
        ('keyRef', _DebitRq_keyRef),
        ])
    DebitRq._ext = None
    
    #-----< DebitRs >-----#
    DebitRs = SEQ(name='DebitRs', mode=MODE_TYPE)
    _DebitRs_debitResult = OCT_STR(name='debitResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultFin')))
    _DebitRs_debitAuthenticator = OCT_STR(name='debitAuthenticator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DebitRs._cont = ASN1Dict([
        ('debitResult', _DebitRs_debitResult),
        ('debitAuthenticator', _DebitRs_debitAuthenticator),
        ])
    DebitRs._ext = None
    
    #-----< GetInstanceRq >-----#
    GetInstanceRq = SEQ(name='GetInstanceRq', mode=MODE_TYPE)
    _GetInstanceRq_posOfFirstInstance = INT(name='posOfFirstInstance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetInstanceRq_posOfFirstInstance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GetInstanceRq_posOfLastInstance = INT(name='posOfLastInstance', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetInstanceRq_posOfLastInstance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _GetInstanceRq_attributeIdList = SEQ_OF(name='attributeIdList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    GetInstanceRq._cont = ASN1Dict([
        ('posOfFirstInstance', _GetInstanceRq_posOfFirstInstance),
        ('posOfLastInstance', _GetInstanceRq_posOfLastInstance),
        ('attributeIdList', _GetInstanceRq_attributeIdList),
        ])
    GetInstanceRq._ext = None
    
    #-----< GetInstanceRs >-----#
    GetInstanceRs = SEQ_OF(name='GetInstanceRs', mode=MODE_TYPE, param=True)
    
    #-----< GetStampedRq >-----#
    GetStampedRq = SEQ(name='GetStampedRq', mode=MODE_TYPE)
    _GetStampedRq_attributeIdList = SEQ_OF(name='attributeIdList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    _GetStampedRq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetStampedRq_keyRef = INT(name='keyRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetStampedRq_keyRef._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    GetStampedRq._cont = ASN1Dict([
        ('attributeIdList', _GetStampedRq_attributeIdList),
        ('nonce', _GetStampedRq_nonce),
        ('keyRef', _GetStampedRq_keyRef),
        ])
    GetStampedRq._ext = None
    
    #-----< GetStampedRs >-----#
    GetStampedRs = SEQ(name='GetStampedRs', mode=MODE_TYPE, param=True)
    
    #-----< SetInstanceRq >-----#
    SetInstanceRq = SEQ(name='SetInstanceRq', mode=MODE_TYPE, param=True)
    
    #-----< SetMMIRq >-----#
    SetMMIRq = INT(name='SetMMIRq', mode=MODE_TYPE)
    SetMMIRq._cont = ASN1Dict([('ok', 0), ('nok', 1), ('contactOperator', 2), ('noSignalling', 255)])
    SetMMIRq._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SetStampedRq >-----#
    SetStampedRq = SEQ(name='SetStampedRq', mode=MODE_TYPE, param=True)
    
    #-----< SubRq >-----#
    SubRq = SEQ(name='SubRq', mode=MODE_TYPE)
    _SubRq_attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SubRq_attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _SubRq_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SubRq._cont = ASN1Dict([
        ('attributeId', _SubRq_attributeId),
        ('value', _SubRq_value),
        ])
    SubRq._ext = None
    
    #-----< CO2EmissionValue >-----#
    CO2EmissionValue = INT(name='CO2EmissionValue', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    
    #-----< ContractSerialNumber >-----#
    ContractSerialNumber = INT(name='ContractSerialNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    
    #-----< ContractAuthenticator >-----#
    ContractAuthenticator = OCT_STR(name='ContractAuthenticator', mode=MODE_TYPE)
    
    #-----< ContractValidity >-----#
    ContractValidity = SEQ(name='ContractValidity', mode=MODE_TYPE)
    _ContractValidity_contractRestrictions = OCT_STR(name='contractRestrictions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ContractValidity_contractRestrictions._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _ContractValidity_contractExpiryDate = SEQ(name='contractExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    ContractValidity._cont = ASN1Dict([
        ('contractRestrictions', _ContractValidity_contractRestrictions),
        ('contractExpiryDate', _ContractValidity_contractExpiryDate),
        ])
    ContractValidity._ext = None
    
    #-----< ContractVehicle >-----#
    ContractVehicle = SEQ(name='ContractVehicle', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    
    #-----< DateCompact >-----#
    DateCompact = SEQ(name='DateCompact', mode=MODE_TYPE)
    _DateCompact_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_year._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1990, ub=2117)], ev=None, er=[])
    _DateCompact_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_month._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=12)], ev=None, er=[])
    _DateCompact_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DateCompact_day._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    DateCompact._cont = ASN1Dict([
        ('year', _DateCompact_year),
        ('month', _DateCompact_month),
        ('day', _DateCompact_day),
        ])
    DateCompact._ext = None
    
    #-----< DescriptiveCharacteristics >-----#
    DescriptiveCharacteristics = INT(name='DescriptiveCharacteristics', mode=MODE_TYPE)
    DescriptiveCharacteristics._cont = ASN1Dict([('noEntry', 0), ('vehicleShape1', 1), ('vehicleShape2', 2), ('vehicleShape3', 3), ('vehicleShape4', 4), ('vehicleShape5', 5), ('vehicleShape6', 6), ('vehicleShape7', 7), ('vehicleShape8', 8), ('vehicleShape9', 9), ('vehicleShape10', 10), ('vehicleShape11', 11), ('vehicleShape12', 12), ('vehicleShape13', 13), ('vehicleShape14', 14), ('vehicleShape15', 15), ('vehicleShape16', 16), ('vehicleShape17', 17), ('vehicleShape18', 18), ('vehicleShape19', 19), ('vehicleShape20', 20), ('vehicleShape21', 21), ('vehicleShape22', 22), ('vehicleShape23', 23), ('vehicleShape24', 24), ('vehicleShape25', 25), ('vehicleShape26', 26), ('vehicleShape27', 27), ('vehicleShape28', 28), ('vehicleShape29', 29), ('vehicleShape30', 30), ('vehicleShape31', 31), ('vehicleShape32', 32), ('vehicleShape33', 33), ('vehicleShape34', 34), ('vehicleShape35', 35), ('vehicleShape36', 36), ('vehicleShape37', 37), ('vehicleShape38', 38), ('vehicleShape39', 39), ('vehicleShape40', 40), ('vehicleShape41', 41), ('vehicleShape42', 42), ('vehicleShape43', 43), ('vehicleShape44', 44), ('vehicleShape45', 45), ('vehicleShape46', 46), ('vehicleShape47', 47), ('vehicleShape48', 48), ('vehicleShape49', 49), ('vehicleShape50', 50)])
    DescriptiveCharacteristics._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DieselEmissionValues >-----#
    DieselEmissionValues = SEQ(name='DieselEmissionValues', mode=MODE_TYPE)
    _DieselEmissionValues_particulate = SEQ(name='particulate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DieselEmissionValues_particulate_unitType = ENUM(name='unitType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'UnitType')))
    __DieselEmissionValues_particulate_value = INT(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DieselEmissionValues_particulate_value._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _DieselEmissionValues_particulate._cont = ASN1Dict([
        ('unitType', __DieselEmissionValues_particulate_unitType),
        ('value', __DieselEmissionValues_particulate_value),
        ])
    _DieselEmissionValues_particulate._ext = None
    _DieselEmissionValues_absorptionCoeff = INT(name='absorptionCoeff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    DieselEmissionValues._cont = ASN1Dict([
        ('particulate', _DieselEmissionValues_particulate),
        ('absorptionCoeff', _DieselEmissionValues_absorptionCoeff),
        ])
    DieselEmissionValues._ext = None
    
    #-----< DriverCharacteristics >-----#
    DriverCharacteristics = SEQ(name='DriverCharacteristics', mode=MODE_TYPE)
    _DriverCharacteristics_driverClass = INT(name='driverClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _DriverCharacteristics_tripPurpose = INT(name='tripPurpose', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    DriverCharacteristics._cont = ASN1Dict([
        ('driverClass', _DriverCharacteristics_driverClass),
        ('tripPurpose', _DriverCharacteristics_tripPurpose),
        ])
    DriverCharacteristics._ext = None
    
    #-----< EFC-ContextMark >-----#
    EFC_ContextMark = SEQ(name='EFC-ContextMark', mode=MODE_TYPE)
    _EFC_ContextMark_contractProvider = SEQ(name='contractProvider', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _EFC_ContextMark_typeOfContract = OCT_STR(name='typeOfContract', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EFC_ContextMark_typeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _EFC_ContextMark_contextVersion = INT(name='contextVersion', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EFC_ContextMark_contextVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    EFC_ContextMark._cont = ASN1Dict([
        ('contractProvider', _EFC_ContextMark_contractProvider),
        ('typeOfContract', _EFC_ContextMark_typeOfContract),
        ('contextVersion', _EFC_ContextMark_contextVersion),
        ])
    EFC_ContextMark._ext = None
    
    #-----< EnvironmentalCharacteristics >-----#
    EnvironmentalCharacteristics = SEQ(name='EnvironmentalCharacteristics', mode=MODE_TYPE)
    _EnvironmentalCharacteristics_euroValue = ENUM(name='euroValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EuroValue')))
    _EnvironmentalCharacteristics_copValue = ENUM(name='copValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CopValue')))
    EnvironmentalCharacteristics._cont = ASN1Dict([
        ('euroValue', _EnvironmentalCharacteristics_euroValue),
        ('copValue', _EnvironmentalCharacteristics_copValue),
        ])
    EnvironmentalCharacteristics._ext = None
    
    #-----< EuroValue >-----#
    EuroValue = ENUM(name='EuroValue', mode=MODE_TYPE)
    EuroValue._cont = ASN1Dict([('noEntry', 0), ('euro-1', 1), ('euro-2', 2), ('euro-3', 3), ('euro-4', 4), ('euro-5', 5), ('euro-6', 6), ('reservedForUse1', 7), ('reservedForUse2', 8), ('reservedForUse3', 9), ('reservedForUse4', 10), ('reservedForUse5', 11), ('reservedForUse6', 12), ('reservedForUse7', 13), ('reservedForUse8', 14), ('eev', 15)])
    EuroValue._ext = None
    
    #-----< CopValue >-----#
    CopValue = ENUM(name='CopValue', mode=MODE_TYPE)
    CopValue._cont = ASN1Dict([('noEntry', 0), ('co2class1', 1), ('co2class2', 2), ('co2class3', 3), ('co2class4', 4), ('co2class5', 5), ('co2class6', 6), ('co2class7', 7), ('reservedforUse', 8)])
    CopValue._ext = None
    
    #-----< EngineCharacteristics >-----#
    EngineCharacteristics = INT(name='EngineCharacteristics', mode=MODE_TYPE)
    EngineCharacteristics._cont = ASN1Dict([('noEntry', 0), ('noEngine', 1), ('petrolUnleaded', 2), ('petrolLeaded', 3), ('diesel', 4), ('lPG', 5), ('battery', 6), ('solar', 7), ('hybrid', 8), ('hydrogen', 9), ('multi-fuel', 10), ('bivalent-petrol-lpg', 11), ('bivalent-petrol-cng', 12), ('combined-petrol-electric', 13), ('cng', 14), ('lng', 15), ('combined-diesel-electric', 16), ('combined-hydrogen-electric', 17), ('bivalent-hydrogen-petrol', 18), ('bivalent-hydrogen-petrol-electric-engine', 19), ('fuel-cell-hydrogen', 20), ('fuel-cell-petrol', 21), ('fuel-cell-methanol', 22), ('fuel-cell-ethanol', 23), ('fuel-cell-diesel', 24), ('combined-multi-fuel-electric-engine', 25), ('combined-cng-electric-engine', 26), ('combined-lng-electric-engine', 27), ('petrol-ethanol', 28), ('combined-lpg-electric-engine', 29), ('hybrid-petrol-external-battery', 30), ('hybrid-diesel-external-battery', 31), ('hybrid-lpg-external-battery', 32), ('hybrid-hydrogen-external-battery', 33), ('hybrid-multi-fuel-external-battery', 34), ('hybrid-cng-external-battery', 35), ('hybrid-lng-external-battery', 36), ('hybrid-bivalent-hydrogen-petrol-external-battery', 37), ('hydrogen-cng', 38), ('hydrogen-lng', 39), ('hybrid-hydrogen-cng-external-battery', 40), ('hybrid-hydrogen-lng-external-battery', 41), ('ethanol', 42), ('hybrid-fuel-cell-hydrogen', 43), ('hybrid-fuel-cell-hydrogen-external-battery', 44), ('dual-fuel-lng-diesel', 45), ('electric-external', 46), ('biogas', 47), ('bioDiesel', 48), ('bioPetrol', 49), ('bivalent-petrol-biogas', 50), ('combined-biogas-electric-engine', 51), ('dual-fuel-cng-diesel', 52), ('other', 255)])
    EngineCharacteristics._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Engine >-----#
    Engine = SEQ(name='Engine', mode=MODE_TYPE)
    _Engine_engineCapacity = INT(name='engineCapacity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _Engine_enginePower = INT(name='enginePower', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    Engine._cont = ASN1Dict([
        ('engineCapacity', _Engine_engineCapacity),
        ('enginePower', _Engine_enginePower),
        ])
    Engine._ext = None
    
    #-----< EquipmentOBUId >-----#
    EquipmentOBUId = OCT_STR(name='EquipmentOBUId', mode=MODE_TYPE)
    
    #-----< EquipmentStatus >-----#
    EquipmentStatus = BIT_STR(name='EquipmentStatus', mode=MODE_TYPE)
    EquipmentStatus._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< ExhaustEmissionValues >-----#
    ExhaustEmissionValues = SEQ(name='ExhaustEmissionValues', mode=MODE_TYPE)
    _ExhaustEmissionValues_unitType = ENUM(name='unitType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'UnitType')))
    _ExhaustEmissionValues_emissionCO = INT(name='emissionCO', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExhaustEmissionValues_emissionCO._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _ExhaustEmissionValues_emissionHC = INT(name='emissionHC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _ExhaustEmissionValues_emissionNOX = INT(name='emissionNOX', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _ExhaustEmissionValues_emissionHCNOX = INT(name='emissionHCNOX', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    ExhaustEmissionValues._cont = ASN1Dict([
        ('unitType', _ExhaustEmissionValues_unitType),
        ('emissionCO', _ExhaustEmissionValues_emissionCO),
        ('emissionHC', _ExhaustEmissionValues_emissionHC),
        ('emissionNOX', _ExhaustEmissionValues_emissionNOX),
        ('emissionHCNOX', _ExhaustEmissionValues_emissionHCNOX),
        ])
    ExhaustEmissionValues._ext = None
    
    #-----< FutureCharacteristics >-----#
    FutureCharacteristics = INT(name='FutureCharacteristics', mode=MODE_TYPE)
    FutureCharacteristics._cont = ASN1Dict([('noEntry', 0), ('airSuspension', 1)])
    FutureCharacteristics._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ICC-Id >-----#
    ICC_Id = OCT_STR(name='ICC-Id', mode=MODE_TYPE)
    
    #-----< Int1 >-----#
    Int1 = INT(name='Int1', mode=MODE_TYPE)
    Int1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Int2 >-----#
    Int2 = INT(name='Int2', mode=MODE_TYPE)
    Int2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< Int3 >-----#
    Int3 = INT(name='Int3', mode=MODE_TYPE)
    Int3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16777215)], ev=None, er=[])
    
    #-----< Int4 >-----#
    Int4 = INT(name='Int4', mode=MODE_TYPE)
    Int4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< LPN >-----#
    LPN = SEQ(name='LPN', mode=MODE_TYPE)
    _LPN_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _LPN_alphabetIndicator = ENUM(name='alphabetIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LPN_alphabetIndicator._cont = ASN1Dict([('latinAlphabetNo1', 1), ('latinAlphabetNo2', 2), ('latinAlphabetNo3', 3), ('latinAlphabetNo4', 4), ('latinCyrillicAlphabet', 5), ('latinArabicAlphabet', 6), ('latinGreekAlphabet', 7), ('latinHebrewAlphabet', 8), ('latinAlphabetNo5', 9), ('latinAlphabetNo6', 10), ('twoOctetBMP', 11), ('fourOctetCanonical', 12), ('reservedForUse1', 13), ('reservedForUse2', 14), ('reservedForUse3', 15), ('reservedForUse4', 16), ('reservedForUse5', 17), ('reservedForUse6', 18), ('reservedForUse7', 19), ('reservedForUse8', 20), ('reservedForUse9', 21), ('reservedForUse10', 22), ('reservedForUse11', 23), ('reservedForUse12', 24), ('reservedForUse13', 25), ('reservedForUse14', 26), ('reservedForUse15', 27), ('reservedForUse16', 28), ('reservedForUse17', 29), ('reservedForUse18', 30), ('reservedForUse19', 31), ('reservedForUse20', 32), ('reservedForUse21', 33)])
    _LPN_alphabetIndicator._ext = None
    _LPN_licencePlateNumber = OCT_STR(name='licencePlateNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    LPN._cont = ASN1Dict([
        ('countryCode', _LPN_countryCode),
        ('alphabetIndicator', _LPN_alphabetIndicator),
        ('licencePlateNumber', _LPN_licencePlateNumber),
        ])
    LPN._ext = None
    
    #-----< PassengerCapacity >-----#
    PassengerCapacity = SEQ(name='PassengerCapacity', mode=MODE_TYPE)
    _PassengerCapacity_numberOfSeats = INT(name='numberOfSeats', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _PassengerCapacity_numberOfStandingPlaces = INT(name='numberOfStandingPlaces', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    PassengerCapacity._cont = ASN1Dict([
        ('numberOfSeats', _PassengerCapacity_numberOfSeats),
        ('numberOfStandingPlaces', _PassengerCapacity_numberOfStandingPlaces),
        ])
    PassengerCapacity._ext = None
    
    #-----< PaymentFee >-----#
    PaymentFee = SEQ(name='PaymentFee', mode=MODE_TYPE)
    _PaymentFee_paymentFeeAmount = INT(name='paymentFeeAmount', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _PaymentFee_paymentFeeUnit = OCT_STR(name='paymentFeeUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PayUnit')))
    PaymentFee._cont = ASN1Dict([
        ('paymentFeeAmount', _PaymentFee_paymentFeeAmount),
        ('paymentFeeUnit', _PaymentFee_paymentFeeUnit),
        ])
    PaymentFee._ext = None
    
    #-----< PaymentMeans >-----#
    PaymentMeans = SEQ(name='PaymentMeans', mode=MODE_TYPE)
    _PaymentMeans_personalAccountNumber = OCT_STR(name='personalAccountNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PersonalAccountNumber')))
    _PaymentMeans_paymentMeansExpiryDate = SEQ(name='paymentMeansExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    _PaymentMeans_pamentMeansUsageControl = OCT_STR(name='pamentMeansUsageControl', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PaymentMeans_pamentMeansUsageControl._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    PaymentMeans._cont = ASN1Dict([
        ('personalAccountNumber', _PaymentMeans_personalAccountNumber),
        ('paymentMeansExpiryDate', _PaymentMeans_paymentMeansExpiryDate),
        ('pamentMeansUsageControl', _PaymentMeans_pamentMeansUsageControl),
        ])
    PaymentMeans._ext = None
    
    #-----< PaymentMeansBalance >-----#
    PaymentMeansBalance = CHOICE(name='PaymentMeansBalance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'SignedValue')))
    
    #-----< SignedValue >-----#
    SignedValue = CHOICE(name='SignedValue', mode=MODE_TYPE)
    _SignedValue_positive = INT(name='positive', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SignedValue_positive._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8388607)], ev=None, er=[])
    _SignedValue_negative = INT(name='negative', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SignedValue_negative._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=-1)], ev=None, er=[])
    SignedValue._cont = ASN1Dict([
        ('positive', _SignedValue_positive),
        ('negative', _SignedValue_negative),
        ])
    SignedValue._ext = None
    
    #-----< PaymentMeansUnit >-----#
    PaymentMeansUnit = OCT_STR(name='PaymentMeansUnit', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'PayUnit')))
    
    #-----< PaymentSecurityData >-----#
    PaymentSecurityData = OCT_STR(name='PaymentSecurityData', mode=MODE_TYPE)
    
    #-----< PayUnit >-----#
    PayUnit = OCT_STR(name='PayUnit', mode=MODE_TYPE)
    PayUnit._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< PersonalAccountNumber >-----#
    PersonalAccountNumber = OCT_STR(name='PersonalAccountNumber', mode=MODE_TYPE)
    PersonalAccountNumber._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< Provider >-----#
    Provider = SEQ(name='Provider', mode=MODE_TYPE)
    _Provider_countryCode = BIT_STR(name='countryCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CountryCode')))
    _Provider_providerIdentifier = INT(name='providerIdentifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'IssuerIdentifier')))
    Provider._cont = ASN1Dict([
        ('countryCode', _Provider_countryCode),
        ('providerIdentifier', _Provider_providerIdentifier),
        ])
    Provider._ext = None
    
    #-----< PurseBalance >-----#
    PurseBalance = SEQ(name='PurseBalance', mode=MODE_TYPE)
    _PurseBalance_purseValue = CHOICE(name='purseValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SignedValue')))
    _PurseBalance_purseUnit = OCT_STR(name='purseUnit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PayUnit')))
    PurseBalance._cont = ASN1Dict([
        ('purseValue', _PurseBalance_purseValue),
        ('purseUnit', _PurseBalance_purseUnit),
        ])
    PurseBalance._ext = None
    
    #-----< ReceiptContract >-----#
    ReceiptContract = SEQ(name='ReceiptContract', mode=MODE_TYPE)
    _ReceiptContract_sessionContractProvider = SEQ(name='sessionContractProvider', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptContract_sessionTypeOfContract = OCT_STR(name='sessionTypeOfContract', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptContract_sessionTypeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ReceiptContract_sessionContractSerialNumber = INT(name='sessionContractSerialNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    ReceiptContract._cont = ASN1Dict([
        ('sessionContractProvider', _ReceiptContract_sessionContractProvider),
        ('sessionTypeOfContract', _ReceiptContract_sessionTypeOfContract),
        ('sessionContractSerialNumber', _ReceiptContract_sessionContractSerialNumber),
        ])
    ReceiptContract._ext = None
    
    #-----< ReceiptData1 >-----#
    ReceiptData1 = SEQ(name='ReceiptData1', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData')))
    
    #-----< ReceiptData2 >-----#
    ReceiptData2 = SEQ(name='ReceiptData2', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData')))
    
    #-----< ReceiptData >-----#
    ReceiptData = SEQ(name='ReceiptData', mode=MODE_TYPE)
    _ReceiptData_sessionTime = SEQ(name='sessionTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateAndTime')))
    _ReceiptData_sessionServiceProvider = SEQ(name='sessionServiceProvider', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptData_locationOfStation = INT(name='locationOfStation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _ReceiptData_sessionLocation = SEQ(name='sessionLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SessionLocation')))
    _ReceiptData_sessionType = INT(name='sessionType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _ReceiptData_sessionResult = INT(name='sessionResult', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultOp')))
    _ReceiptData_sessionTariffClass = INT(name='sessionTariffClass', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _ReceiptData_sessionClaimedClass = INT(name='sessionClaimedClass', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _ReceiptData_sessionFee = SEQ(name='sessionFee', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _ReceiptData_sessionContractProvider = SEQ(name='sessionContractProvider', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptData_sessionTypeOfContract = OCT_STR(name='sessionTypeOfContract', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_sessionTypeOfContract._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ReceiptData_sessionContextVersion = INT(name='sessionContextVersion', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_sessionContextVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _ReceiptData_receiptDataAuthenticator = OCT_STR(name='receiptDataAuthenticator', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptData_receiptDataAuthenticator._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    ReceiptData._cont = ASN1Dict([
        ('sessionTime', _ReceiptData_sessionTime),
        ('sessionServiceProvider', _ReceiptData_sessionServiceProvider),
        ('locationOfStation', _ReceiptData_locationOfStation),
        ('sessionLocation', _ReceiptData_sessionLocation),
        ('sessionType', _ReceiptData_sessionType),
        ('sessionResult', _ReceiptData_sessionResult),
        ('sessionTariffClass', _ReceiptData_sessionTariffClass),
        ('sessionClaimedClass', _ReceiptData_sessionClaimedClass),
        ('sessionFee', _ReceiptData_sessionFee),
        ('sessionContractProvider', _ReceiptData_sessionContractProvider),
        ('sessionTypeOfContract', _ReceiptData_sessionTypeOfContract),
        ('sessionContextVersion', _ReceiptData_sessionContextVersion),
        ('receiptDataAuthenticator', _ReceiptData_receiptDataAuthenticator),
        ])
    ReceiptData._ext = None
    
    #-----< ReceiptDistance >-----#
    ReceiptDistance = INT(name='ReceiptDistance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int3')))
    
    #-----< ReceiptFinancialPart >-----#
    ReceiptFinancialPart = SEQ(name='ReceiptFinancialPart', mode=MODE_TYPE)
    _ReceiptFinancialPart_personalAccountNumber = OCT_STR(name='personalAccountNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PersonalAccountNumber')))
    _ReceiptFinancialPart_sessionPaymentFee = SEQ(name='sessionPaymentFee', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentFee')))
    _ReceiptFinancialPart_sessionCurrentBalance = SEQ(name='sessionCurrentBalance', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PurseBalance')))
    _ReceiptFinancialPart_receiptFinancialSerialNumber = INT(name='receiptFinancialSerialNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    ReceiptFinancialPart._cont = ASN1Dict([
        ('personalAccountNumber', _ReceiptFinancialPart_personalAccountNumber),
        ('sessionPaymentFee', _ReceiptFinancialPart_sessionPaymentFee),
        ('sessionCurrentBalance', _ReceiptFinancialPart_sessionCurrentBalance),
        ('receiptFinancialSerialNumber', _ReceiptFinancialPart_receiptFinancialSerialNumber),
        ])
    ReceiptFinancialPart._ext = None
    
    #-----< ReceiptICC-Id >-----#
    ReceiptICC_Id = OCT_STR(name='ReceiptICC-Id', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'ICC-Id')))
    
    #-----< ReceiptOBUId >-----#
    ReceiptOBUId = OCT_STR(name='ReceiptOBUId', mode=MODE_TYPE)
    
    #-----< ReceiptServicePart >-----#
    ReceiptServicePart = SEQ(name='ReceiptServicePart', mode=MODE_TYPE)
    _ReceiptServicePart_sessionTime = SEQ(name='sessionTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateAndTime')))
    _ReceiptServicePart_sessionServiceProvider = SEQ(name='sessionServiceProvider', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Provider')))
    _ReceiptServicePart_stationLocation = INT(name='stationLocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptServicePart_stationLocation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1048575)], ev=None, er=[])
    _ReceiptServicePart_sessionLocation = BIT_STR(name='sessionLocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReceiptServicePart_sessionLocation._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _ReceiptServicePart_typeOfSession = ENUM(name='typeOfSession', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'StationType')))
    _ReceiptServicePart_sessionResultOperational = INT(name='sessionResultOperational', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultOp')))
    _ReceiptServicePart_sessionResultFinancial = OCT_STR(name='sessionResultFinancial', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ResultFin')))
    ReceiptServicePart._cont = ASN1Dict([
        ('sessionTime', _ReceiptServicePart_sessionTime),
        ('sessionServiceProvider', _ReceiptServicePart_sessionServiceProvider),
        ('stationLocation', _ReceiptServicePart_stationLocation),
        ('sessionLocation', _ReceiptServicePart_sessionLocation),
        ('typeOfSession', _ReceiptServicePart_typeOfSession),
        ('sessionResultOperational', _ReceiptServicePart_sessionResultOperational),
        ('sessionResultFinancial', _ReceiptServicePart_sessionResultFinancial),
        ])
    ReceiptServicePart._ext = None
    
    #-----< ReceiptServiceSerialNumber >-----#
    ReceiptServiceSerialNumber = INT(name='ReceiptServiceSerialNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int3')))
    
    #-----< ReceiptAuthenticator >-----#
    ReceiptAuthenticator = OCT_STR(name='ReceiptAuthenticator', mode=MODE_TYPE)
    
    #-----< ReceiptText >-----#
    ReceiptText = OCT_STR(name='ReceiptText', mode=MODE_TYPE)
    
    #-----< ResultFin >-----#
    ResultFin = OCT_STR(name='ResultFin', mode=MODE_TYPE)
    ResultFin._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< ResultOp >-----#
    ResultOp = INT(name='ResultOp', mode=MODE_TYPE)
    ResultOp._cont = ASN1Dict([('correctTransaction', 0), ('obeStatusNotAccepted', 1), ('equipmentStatusNotAccepted', 2), ('contractNotInWhiteList', 3), ('contractIdentifierInBlackList', 4), ('contractIdentifierNotCorrect', 5), ('expiredContract', 6), ('contractRestrictionsNotFulfilled', 7), ('claimedVehicleCharacteristicsNotValid', 8), ('vehicleClassAuthenticationFailed', 9), ('entryVehicleClassDifferentFromExitVehicleClass', 10), ('entryReceiptMissing', 11), ('entryReceiptNotValid', 12), ('entryTollStationNotValid', 13), ('equipmentNotCertified', 14), ('timeDifference', 15), ('accessCredentialsNotAccepted', 16), ('contractAuthenticatorNotAccepted', 17), ('receiptAuthenticatorNotAccepted', 18), ('claimedVehicleCharacteristicsMissing', 19), ('paymentMeansNotAccepted', 20), ('paymentAuthenticatorNotAccepted', 21), ('paymentMeansInBlackList', 22), ('paymentMeansNotCorrect', 23), ('expiredPaymentMeans', 24), ('paymentMeansRestrictionsNotFulfilled', 25)])
    ResultOp._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SessionClass >-----#
    SessionClass = SEQ(name='SessionClass', mode=MODE_TYPE)
    _SessionClass_sessionTariffClass = INT(name='sessionTariffClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _SessionClass_sessionClaimedClass = INT(name='sessionClaimedClass', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    SessionClass._cont = ASN1Dict([
        ('sessionTariffClass', _SessionClass_sessionTariffClass),
        ('sessionClaimedClass', _SessionClass_sessionClaimedClass),
        ])
    SessionClass._ext = None
    
    #-----< SessionLocation >-----#
    SessionLocation = SEQ(name='SessionLocation', mode=MODE_TYPE)
    _SessionLocation_ascendingKilometrage = BOOL(name='ascendingKilometrage', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionLocation_laneCodeNumber = INT(name='laneCodeNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SessionLocation_laneCodeNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    SessionLocation._cont = ASN1Dict([
        ('ascendingKilometrage', _SessionLocation_ascendingKilometrage),
        ('laneCodeNumber', _SessionLocation_laneCodeNumber),
        ])
    SessionLocation._ext = None
    
    #-----< StationType >-----#
    StationType = ENUM(name='StationType', mode=MODE_TYPE)
    StationType._cont = ASN1Dict([('unspecified', 0), ('closedEntryWithPayment', 1), ('closedEntryWithoutPayment', 2), ('closedTransit', 3), ('closedExit', 4), ('closedCredit', 5), ('mixed', 6), ('passage', 7), ('checkpoint', 8), ('reload', 9), ('reservedForFutureCENUse1', 10), ('reservedForFutureCENUse2', 11), ('reservedForFutureCENUse3', 12), ('reservedForFutureCENUse4', 13), ('privateUse5', 14), ('privateUse6', 15)])
    StationType._ext = None
    
    #-----< DateAndTime >-----#
    DateAndTime = SEQ(name='DateAndTime', mode=MODE_TYPE)
    _DateAndTime_timeDate = SEQ(name='timeDate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    _DateAndTime_timeCompact = SEQ(name='timeCompact', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_hours = INT(name='hours', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_hours._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=23)], ev=None, er=[])
    __DateAndTime_timeCompact_mins = INT(name='mins', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_mins._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    __DateAndTime_timeCompact_double_secs = INT(name='double-secs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DateAndTime_timeCompact_double_secs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=30)], ev=None, er=[])
    _DateAndTime_timeCompact._cont = ASN1Dict([
        ('hours', __DateAndTime_timeCompact_hours),
        ('mins', __DateAndTime_timeCompact_mins),
        ('double-secs', __DateAndTime_timeCompact_double_secs),
        ])
    _DateAndTime_timeCompact._ext = None
    DateAndTime._cont = ASN1Dict([
        ('timeDate', _DateAndTime_timeDate),
        ('timeCompact', _DateAndTime_timeCompact),
        ])
    DateAndTime._ext = None
    
    #-----< SoundLevel >-----#
    SoundLevel = SEQ(name='SoundLevel', mode=MODE_TYPE)
    _SoundLevel_soundstationary = INT(name='soundstationary', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _SoundLevel_sounddriveby = INT(name='sounddriveby', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    SoundLevel._cont = ASN1Dict([
        ('soundstationary', _SoundLevel_soundstationary),
        ('sounddriveby', _SoundLevel_sounddriveby),
        ])
    SoundLevel._ext = None
    
    #-----< TrailerCharacteristics >-----#
    TrailerCharacteristics = SEQ(name='TrailerCharacteristics', mode=MODE_TYPE)
    _TrailerCharacteristics_trailerDetails = SEQ(name='trailerDetails', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerDetails')))
    _TrailerCharacteristics_trailerMaxLadenWeight = INT(name='trailerMaxLadenWeight', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _TrailerCharacteristics_trailerWeightUnladen = INT(name='trailerWeightUnladen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    TrailerCharacteristics._cont = ASN1Dict([
        ('trailerDetails', _TrailerCharacteristics_trailerDetails),
        ('trailerMaxLadenWeight', _TrailerCharacteristics_trailerMaxLadenWeight),
        ('trailerWeightUnladen', _TrailerCharacteristics_trailerWeightUnladen),
        ])
    TrailerCharacteristics._ext = None
    
    #-----< TrailerDetails >-----#
    TrailerDetails = SEQ(name='TrailerDetails', mode=MODE_TYPE)
    _TrailerDetails_trailerType = INT(name='trailerType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TrailerDetails_trailerType._cont = ASN1Dict([('notPresent', 0), ('trailer', 1), ('semitrailer', 2)])
    _TrailerDetails_trailerType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _TrailerDetails_trailerAxles = INT(name='trailerAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerAxles')))
    TrailerDetails._cont = ASN1Dict([
        ('trailerType', _TrailerDetails_trailerType),
        ('trailerAxles', _TrailerDetails_trailerAxles),
        ])
    TrailerDetails._ext = None
    
    #-----< TrailerLicencePlateNumber >-----#
    TrailerLicencePlateNumber = SEQ(name='TrailerLicencePlateNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    
    #-----< UnitType >-----#
    UnitType = ENUM(name='UnitType', mode=MODE_TYPE)
    UnitType._cont = ASN1Dict([('mg-km', 0), ('mg-kWh', 1)])
    UnitType._ext = None
    
    #-----< ValidityOfContract >-----#
    ValidityOfContract = SEQ(name='ValidityOfContract', mode=MODE_TYPE)
    _ValidityOfContract_issuerRestrictions = OCT_STR(name='issuerRestrictions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ValidityOfContract_issuerRestrictions._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _ValidityOfContract_contractExpiryDate = SEQ(name='contractExpiryDate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DateCompact')))
    ValidityOfContract._cont = ASN1Dict([
        ('issuerRestrictions', _ValidityOfContract_issuerRestrictions),
        ('contractExpiryDate', _ValidityOfContract_contractExpiryDate),
        ])
    ValidityOfContract._ext = None
    
    #-----< VehicleAuthenticator >-----#
    VehicleAuthenticator = OCT_STR(name='VehicleAuthenticator', mode=MODE_TYPE)
    
    #-----< VehicleAxles >-----#
    VehicleAxles = SEQ(name='VehicleAxles', mode=MODE_TYPE)
    _VehicleAxles_vehicleFirstAxleHeight = INT(name='vehicleFirstAxleHeight', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _VehicleAxles_vehicleAxlesNumber = SEQ(name='vehicleAxlesNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __VehicleAxles_vehicleAxlesNumber_tyreType = ENUM(name='tyreType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __VehicleAxles_vehicleAxlesNumber_tyreType._cont = ASN1Dict([('notSpecified', 0), ('singleTyre', 1), ('dualTyres', 2), ('reservedForUse', 3)])
    __VehicleAxles_vehicleAxlesNumber_tyreType._ext = None
    __VehicleAxles_vehicleAxlesNumber_numberOfAxles = SEQ(name='numberOfAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_trailerAxles = INT(name='trailerAxles', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerAxles')))
    ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_tractorAxles = INT(name='tractorAxles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TractorAxles')))
    __VehicleAxles_vehicleAxlesNumber_numberOfAxles._cont = ASN1Dict([
        ('trailerAxles', ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_trailerAxles),
        ('tractorAxles', ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_tractorAxles),
        ])
    __VehicleAxles_vehicleAxlesNumber_numberOfAxles._ext = None
    _VehicleAxles_vehicleAxlesNumber._cont = ASN1Dict([
        ('tyreType', __VehicleAxles_vehicleAxlesNumber_tyreType),
        ('numberOfAxles', __VehicleAxles_vehicleAxlesNumber_numberOfAxles),
        ])
    _VehicleAxles_vehicleAxlesNumber._ext = None
    VehicleAxles._cont = ASN1Dict([
        ('vehicleFirstAxleHeight', _VehicleAxles_vehicleFirstAxleHeight),
        ('vehicleAxlesNumber', _VehicleAxles_vehicleAxlesNumber),
        ])
    VehicleAxles._ext = None
    
    #-----< TrailerAxles >-----#
    TrailerAxles = INT(name='TrailerAxles', mode=MODE_TYPE)
    TrailerAxles._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< TractorAxles >-----#
    TractorAxles = INT(name='TractorAxles', mode=MODE_TYPE)
    TractorAxles._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< VehicleClass >-----#
    VehicleClass = INT(name='VehicleClass', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    
    #-----< VehicleDimensions >-----#
    VehicleDimensions = SEQ(name='VehicleDimensions', mode=MODE_TYPE)
    _VehicleDimensions_vehicleLengthOverall = INT(name='vehicleLengthOverall', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _VehicleDimensions_vehicleHeigthOverall = INT(name='vehicleHeigthOverall', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    _VehicleDimensions_vehicleWidthOverall = INT(name='vehicleWidthOverall', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int1')))
    VehicleDimensions._cont = ASN1Dict([
        ('vehicleLengthOverall', _VehicleDimensions_vehicleLengthOverall),
        ('vehicleHeigthOverall', _VehicleDimensions_vehicleHeigthOverall),
        ('vehicleWidthOverall', _VehicleDimensions_vehicleWidthOverall),
        ])
    VehicleDimensions._ext = None
    
    #-----< VehicleLicencePlateNumber >-----#
    VehicleLicencePlateNumber = SEQ(name='VehicleLicencePlateNumber', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    
    #-----< VehicleIdentificationNumber >-----#
    VehicleIdentificationNumber = SEQ(name='VehicleIdentificationNumber', mode=MODE_TYPE, typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CS5')))
    
    #-----< VehicleSpecificCharacteristics >-----#
    VehicleSpecificCharacteristics = SEQ(name='VehicleSpecificCharacteristics', mode=MODE_TYPE)
    _VehicleSpecificCharacteristics_environmentalCharacteristics = SEQ(name='environmentalCharacteristics', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EnvironmentalCharacteristics')))
    _VehicleSpecificCharacteristics_engineCharacteristics = INT(name='engineCharacteristics', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EngineCharacteristics')))
    _VehicleSpecificCharacteristics_descriptiveCharacteristics = INT(name='descriptiveCharacteristics', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DescriptiveCharacteristics')))
    _VehicleSpecificCharacteristics_futureCharacteristics = INT(name='futureCharacteristics', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'FutureCharacteristics')))
    VehicleSpecificCharacteristics._cont = ASN1Dict([
        ('environmentalCharacteristics', _VehicleSpecificCharacteristics_environmentalCharacteristics),
        ('engineCharacteristics', _VehicleSpecificCharacteristics_engineCharacteristics),
        ('descriptiveCharacteristics', _VehicleSpecificCharacteristics_descriptiveCharacteristics),
        ('futureCharacteristics', _VehicleSpecificCharacteristics_futureCharacteristics),
        ])
    VehicleSpecificCharacteristics._ext = None
    
    #-----< VehicleTotalDistance >-----#
    VehicleTotalDistance = INT(name='VehicleTotalDistance', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int4')))
    
    #-----< VehicleWeightLaden >-----#
    VehicleWeightLaden = INT(name='VehicleWeightLaden', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    
    #-----< VehicleCurrentMaxTrainWeight >-----#
    VehicleCurrentMaxTrainWeight = INT(name='VehicleCurrentMaxTrainWeight', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    
    #-----< VehicleWeightLimits >-----#
    VehicleWeightLimits = SEQ(name='VehicleWeightLimits', mode=MODE_TYPE)
    _VehicleWeightLimits_vehicleMaxLadenWeight = INT(name='vehicleMaxLadenWeight', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _VehicleWeightLimits_vehicleTrainMaximumWeight = INT(name='vehicleTrainMaximumWeight', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    _VehicleWeightLimits_vehicleWeightUnladen = INT(name='vehicleWeightUnladen', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Int2')))
    VehicleWeightLimits._cont = ASN1Dict([
        ('vehicleMaxLadenWeight', _VehicleWeightLimits_vehicleMaxLadenWeight),
        ('vehicleTrainMaximumWeight', _VehicleWeightLimits_vehicleTrainMaximumWeight),
        ('vehicleWeightUnladen', _VehicleWeightLimits_vehicleWeightUnladen),
        ])
    VehicleWeightLimits._ext = None
    
    _all_ = [
        ActualNumberOfPassengers,
        _AxleWeightLimits_maxLadenweightOnAxle1,
        _AxleWeightLimits_maxLadenweightOnAxle2,
        _AxleWeightLimits_maxLadenweightOnAxle3,
        _AxleWeightLimits_maxLadenweightOnAxle4,
        _AxleWeightLimits_maxLadenweightOnAxle5,
        AxleWeightLimits,
        _AddRq_attributeId,
        _AddRq_value,
        AddRq,
        ChannelId,
        _ChannelRq_channelId,
        _ChannelRq_apdu,
        ChannelRq,
        _ChannelRs_channelId,
        _ChannelRs_apdu,
        ChannelRs,
        _CopyRq_destinationEID,
        _CopyRq_attributeIdList,
        CopyRq,
        _CreditRq_refund,
        _CreditRq_nonce,
        _CreditRq_key,
        CreditRq,
        _CreditRs_creditResult,
        _CreditRs_creditAuthenticator,
        CreditRs,
        _DebitRq_debitPaymentFee,
        _DebitRq_nonce,
        _DebitRq_keyRef,
        DebitRq,
        _DebitRs_debitResult,
        _DebitRs_debitAuthenticator,
        DebitRs,
        _GetInstanceRq_posOfFirstInstance,
        _GetInstanceRq_posOfLastInstance,
        _GetInstanceRq_attributeIdList,
        GetInstanceRq,
        _GetStampedRq_attributeIdList,
        _GetStampedRq_nonce,
        _GetStampedRq_keyRef,
        GetStampedRq,
        SetMMIRq,
        _SubRq_attributeId,
        _SubRq_value,
        SubRq,
        CO2EmissionValue,
        ContractSerialNumber,
        ContractAuthenticator,
        _ContractValidity_contractRestrictions,
        _ContractValidity_contractExpiryDate,
        ContractValidity,
        ContractVehicle,
        _DateCompact_year,
        _DateCompact_month,
        _DateCompact_day,
        DateCompact,
        DescriptiveCharacteristics,
        __DieselEmissionValues_particulate_unitType,
        __DieselEmissionValues_particulate_value,
        _DieselEmissionValues_particulate,
        _DieselEmissionValues_absorptionCoeff,
        DieselEmissionValues,
        _DriverCharacteristics_driverClass,
        _DriverCharacteristics_tripPurpose,
        DriverCharacteristics,
        _EFC_ContextMark_contractProvider,
        _EFC_ContextMark_typeOfContract,
        _EFC_ContextMark_contextVersion,
        EFC_ContextMark,
        _EnvironmentalCharacteristics_euroValue,
        _EnvironmentalCharacteristics_copValue,
        EnvironmentalCharacteristics,
        EuroValue,
        CopValue,
        EngineCharacteristics,
        _Engine_engineCapacity,
        _Engine_enginePower,
        Engine,
        EquipmentOBUId,
        EquipmentStatus,
        _ExhaustEmissionValues_unitType,
        _ExhaustEmissionValues_emissionCO,
        _ExhaustEmissionValues_emissionHC,
        _ExhaustEmissionValues_emissionNOX,
        _ExhaustEmissionValues_emissionHCNOX,
        ExhaustEmissionValues,
        FutureCharacteristics,
        ICC_Id,
        Int1,
        Int2,
        Int3,
        Int4,
        _LPN_countryCode,
        _LPN_alphabetIndicator,
        _LPN_licencePlateNumber,
        LPN,
        _PassengerCapacity_numberOfSeats,
        _PassengerCapacity_numberOfStandingPlaces,
        PassengerCapacity,
        _PaymentFee_paymentFeeAmount,
        _PaymentFee_paymentFeeUnit,
        PaymentFee,
        _PaymentMeans_personalAccountNumber,
        _PaymentMeans_paymentMeansExpiryDate,
        _PaymentMeans_pamentMeansUsageControl,
        PaymentMeans,
        PaymentMeansBalance,
        _SignedValue_positive,
        _SignedValue_negative,
        SignedValue,
        PaymentMeansUnit,
        PaymentSecurityData,
        PayUnit,
        PersonalAccountNumber,
        _Provider_countryCode,
        _Provider_providerIdentifier,
        Provider,
        _PurseBalance_purseValue,
        _PurseBalance_purseUnit,
        PurseBalance,
        _ReceiptContract_sessionContractProvider,
        _ReceiptContract_sessionTypeOfContract,
        _ReceiptContract_sessionContractSerialNumber,
        ReceiptContract,
        ReceiptData1,
        ReceiptData2,
        _ReceiptData_sessionTime,
        _ReceiptData_sessionServiceProvider,
        _ReceiptData_locationOfStation,
        _ReceiptData_sessionLocation,
        _ReceiptData_sessionType,
        _ReceiptData_sessionResult,
        _ReceiptData_sessionTariffClass,
        _ReceiptData_sessionClaimedClass,
        _ReceiptData_sessionFee,
        _ReceiptData_sessionContractProvider,
        _ReceiptData_sessionTypeOfContract,
        _ReceiptData_sessionContextVersion,
        _ReceiptData_receiptDataAuthenticator,
        ReceiptData,
        ReceiptDistance,
        _ReceiptFinancialPart_personalAccountNumber,
        _ReceiptFinancialPart_sessionPaymentFee,
        _ReceiptFinancialPart_sessionCurrentBalance,
        _ReceiptFinancialPart_receiptFinancialSerialNumber,
        ReceiptFinancialPart,
        ReceiptICC_Id,
        ReceiptOBUId,
        _ReceiptServicePart_sessionTime,
        _ReceiptServicePart_sessionServiceProvider,
        _ReceiptServicePart_stationLocation,
        _ReceiptServicePart_sessionLocation,
        _ReceiptServicePart_typeOfSession,
        _ReceiptServicePart_sessionResultOperational,
        _ReceiptServicePart_sessionResultFinancial,
        ReceiptServicePart,
        ReceiptServiceSerialNumber,
        ReceiptAuthenticator,
        ReceiptText,
        ResultFin,
        ResultOp,
        _SessionClass_sessionTariffClass,
        _SessionClass_sessionClaimedClass,
        SessionClass,
        _SessionLocation_ascendingKilometrage,
        _SessionLocation_laneCodeNumber,
        SessionLocation,
        StationType,
        _DateAndTime_timeDate,
        __DateAndTime_timeCompact_hours,
        __DateAndTime_timeCompact_mins,
        __DateAndTime_timeCompact_double_secs,
        _DateAndTime_timeCompact,
        DateAndTime,
        _SoundLevel_soundstationary,
        _SoundLevel_sounddriveby,
        SoundLevel,
        _TrailerCharacteristics_trailerDetails,
        _TrailerCharacteristics_trailerMaxLadenWeight,
        _TrailerCharacteristics_trailerWeightUnladen,
        TrailerCharacteristics,
        _TrailerDetails_trailerType,
        _TrailerDetails_trailerAxles,
        TrailerDetails,
        TrailerLicencePlateNumber,
        UnitType,
        _ValidityOfContract_issuerRestrictions,
        _ValidityOfContract_contractExpiryDate,
        ValidityOfContract,
        VehicleAuthenticator,
        _VehicleAxles_vehicleFirstAxleHeight,
        __VehicleAxles_vehicleAxlesNumber_tyreType,
        ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_trailerAxles,
        ___VehicleAxles_vehicleAxlesNumber_numberOfAxles_tractorAxles,
        __VehicleAxles_vehicleAxlesNumber_numberOfAxles,
        _VehicleAxles_vehicleAxlesNumber,
        VehicleAxles,
        TrailerAxles,
        TractorAxles,
        VehicleClass,
        _VehicleDimensions_vehicleLengthOverall,
        _VehicleDimensions_vehicleHeigthOverall,
        _VehicleDimensions_vehicleWidthOverall,
        VehicleDimensions,
        VehicleLicencePlateNumber,
        VehicleIdentificationNumber,
        _VehicleSpecificCharacteristics_environmentalCharacteristics,
        _VehicleSpecificCharacteristics_engineCharacteristics,
        _VehicleSpecificCharacteristics_descriptiveCharacteristics,
        _VehicleSpecificCharacteristics_futureCharacteristics,
        VehicleSpecificCharacteristics,
        VehicleTotalDistance,
        VehicleWeightLaden,
        VehicleCurrentMaxTrainWeight,
        _VehicleWeightLimits_vehicleMaxLadenWeight,
        _VehicleWeightLimits_vehicleTrainMaximumWeight,
        _VehicleWeightLimits_vehicleWeightUnladen,
        VehicleWeightLimits,
    ]

class EfcDsrcGeneric:

    _name_  = 'EfcDsrcGeneric'
    _oid_   = [1, 0, 14906, 1, 9]
    
    _obj_ = [
        'Action-Request',
        'Action-Response',
        'ActionType',
        'ApplicationContextMark',
        'ApplicationList',
        'AttributeIdList',
        'AttributeList',
        'Attributes',
        'BeaconID',
        'BroadcastPool',
        'BST',
        'EfcContainer',
        'FileType',
        'Directory',
        'Dsrc-EID',
        'DSRCApplicationEntityID',
        'Event-Report-Request',
        'Event-Report-Response',
        'EventType',
        'File',
        'FileName',
        'Get-Request',
        'Get-Response',
        'Initialisation-Request',
        'Initialisation-Response',
        'ObeConfiguration',
        'Profile',
        'Record',
        'ReturnStatus',
        'Set-Request',
        'Set-Response',
        'Time',
        'T-APDUs-Generic',
        'T-APDUs',
        'VST',
        ]
    _type_ = [
        'Action-Request',
        'Action-Response',
        'ActionType',
        'ApplicationContextMark',
        'ApplicationList',
        'AttributeIdList',
        'AttributeList',
        'Attributes',
        'BeaconID',
        'BroadcastPool',
        'BST',
        'EfcContainer',
        'FileType',
        'Directory',
        'Dsrc-EID',
        'DSRCApplicationEntityID',
        'Event-Report-Request',
        'Event-Report-Response',
        'EventType',
        'File',
        'FileName',
        'Get-Request',
        'Get-Response',
        'Initialisation-Request',
        'Initialisation-Response',
        'ObeConfiguration',
        'Profile',
        'Record',
        'ReturnStatus',
        'Set-Request',
        'Set-Response',
        'Time',
        'T-APDUs-Generic',
        'T-APDUs',
        'VST',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        'Action-Request',
        'Action-Response',
        'AttributeList',
        'Attributes',
        'Event-Report-Request',
        'Get-Response',
        'Set-Request',
        'T-APDUs-Generic',
        ]
    
    #-----< Action-Request >-----#
    Action_Request = SEQ(name='Action-Request', mode=MODE_TYPE, param=True)
    
    #-----< Action-Response >-----#
    Action_Response = SEQ(name='Action-Response', mode=MODE_TYPE, param=True)
    
    #-----< ActionType >-----#
    ActionType = INT(name='ActionType', mode=MODE_TYPE)
    ActionType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< ApplicationContextMark >-----#
    ApplicationContextMark = CHOICE(name='ApplicationContextMark', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    
    #-----< ApplicationList >-----#
    ApplicationList = SEQ_OF(name='ApplicationList', mode=MODE_TYPE)
    _ApplicationList__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __ApplicationList__item__aid = INT(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'DSRCApplicationEntityID')))
    __ApplicationList__item__eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    __ApplicationList__item__parameter = CHOICE(name='parameter', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationContextMark')), opt=True)
    _ApplicationList__item_._cont = ASN1Dict([
        ('aid', __ApplicationList__item__aid),
        ('eid', __ApplicationList__item__eid),
        ('parameter', __ApplicationList__item__parameter),
        ])
    _ApplicationList__item_._ext = None
    ApplicationList._cont = _ApplicationList__item_
    ApplicationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< AttributeIdList >-----#
    AttributeIdList = SEQ_OF(name='AttributeIdList', mode=MODE_TYPE)
    _AttributeIdList__item_ = INT(name='_item_', mode=MODE_TYPE)
    _AttributeIdList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    AttributeIdList._cont = _AttributeIdList__item_
    AttributeIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< AttributeList >-----#
    AttributeList = SEQ_OF(name='AttributeList', mode=MODE_TYPE, param=True)
    
    #-----< Attributes >-----#
    Attributes = SEQ(name='Attributes', mode=MODE_TYPE, param=True)
    
    #-----< BeaconID >-----#
    BeaconID = SEQ(name='BeaconID', mode=MODE_TYPE)
    _BeaconID_manufacturerid = INT(name='manufacturerid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeaconID_manufacturerid._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _BeaconID_individualid = INT(name='individualid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeaconID_individualid._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=134217727)], ev=None, er=[])
    BeaconID._cont = ASN1Dict([
        ('manufacturerid', _BeaconID_manufacturerid),
        ('individualid', _BeaconID_individualid),
        ])
    BeaconID._ext = None
    
    #-----< BroadcastPool >-----#
    BroadcastPool = SEQ(name='BroadcastPool', mode=MODE_TYPE)
    _BroadcastPool_directoryvalue = SEQ_OF(name='directoryvalue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Directory')))
    _BroadcastPool_content = SEQ_OF(name='content', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BroadcastPool_content__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'File')))
    _BroadcastPool_content._cont = __BroadcastPool_content__item_
    _BroadcastPool_content._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    BroadcastPool._cont = ASN1Dict([
        ('directoryvalue', _BroadcastPool_directoryvalue),
        ('content', _BroadcastPool_content),
        ])
    BroadcastPool._ext = None
    
    #-----< BST >-----#
    BST = SEQ(name='BST', mode=MODE_TYPE)
    _BST_rsu = SEQ(name='rsu', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'BeaconID')))
    _BST_time = INT(name='time', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Time')))
    _BST_profile = INT(name='profile', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Profile')))
    _BST_mandApplications = SEQ_OF(name='mandApplications', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationList')))
    _BST_nonmandApplications = SEQ_OF(name='nonmandApplications', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationList')), opt=True)
    _BST_profileList = SEQ_OF(name='profileList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BST_profileList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Profile')))
    _BST_profileList._cont = __BST_profileList__item_
    _BST_profileList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    BST._cont = ASN1Dict([
        ('rsu', _BST_rsu),
        ('time', _BST_time),
        ('profile', _BST_profile),
        ('mandApplications', _BST_mandApplications),
        ('nonmandApplications', _BST_nonmandApplications),
        ('profileList', _BST_profileList),
        ])
    BST._ext = None
    
    #-----< EfcContainer >-----#
    EfcContainer = CHOICE(name='EfcContainer', mode=MODE_TYPE)
    _EfcContainer_integer = INT(name='integer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_bitstring = BIT_STR(name='bitstring', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_octetstring = OCT_STR(name='octetstring', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_octetstring._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_beaconId = SEQ(name='beaconId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'BeaconID')))
    _EfcContainer_t_apdu = CHOICE(name='t-apdu', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'T-APDUs')))
    _EfcContainer_dsrcApplicationEntityId = INT(name='dsrcApplicationEntityId', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'DSRCApplicationEntityID')))
    _EfcContainer_dsrc_Ase_Id = INT(name='dsrc-Ase-Id', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _EfcContainer_attrIdList = SEQ_OF(name='attrIdList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')))
    _EfcContainer_attrList = SEQ_OF(name='attrList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    __EfcContainer_attrList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ___EfcContainer_attrList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EfcContainer_attrList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ___EfcContainer_attrList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    __EfcContainer_attrList__item_._cont = ASN1Dict([
        ('attributeId', ___EfcContainer_attrList__item__attributeId),
        ('attributeValue', ___EfcContainer_attrList__item__attributeValue),
        ])
    __EfcContainer_attrList__item_._ext = None
    _EfcContainer_attrList._cont = __EfcContainer_attrList__item_
    _EfcContainer_attrList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_broadcastPool = SEQ(name='broadcastPool', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'BroadcastPool')))
    _EfcContainer_directory = SEQ_OF(name='directory', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Directory')))
    _EfcContainer_file = SEQ_OF(name='file', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'File')))
    _EfcContainer_fileType = NULL(name='fileType', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'FileType')))
    _EfcContainer_record = CHOICE(name='record', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Record')))
    _EfcContainer_time = INT(name='time', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Time')))
    _EfcContainer_vector = SEQ_OF(name='vector', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_vector__item_ = INT(name='_item_', mode=MODE_TYPE)
    __EfcContainer_vector__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_vector._cont = __EfcContainer_vector__item_
    _EfcContainer_vector._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EfcContainer_gstrq = SEQ(name='gstrq', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetStampedRq')))
    _EfcContainer_gstrs = SEQ(name='gstrs', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetStampedRs')))
    __EfcContainer_gstrs_attributeList = SEQ_OF(name='attributeList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    ___EfcContainer_gstrs_attributeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____EfcContainer_gstrs_attributeList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____EfcContainer_gstrs_attributeList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____EfcContainer_gstrs_attributeList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___EfcContainer_gstrs_attributeList__item_._cont = ASN1Dict([
        ('attributeId', ____EfcContainer_gstrs_attributeList__item__attributeId),
        ('attributeValue', ____EfcContainer_gstrs_attributeList__item__attributeValue),
        ])
    ___EfcContainer_gstrs_attributeList__item_._ext = None
    __EfcContainer_gstrs_attributeList._cont = ___EfcContainer_gstrs_attributeList__item_
    __EfcContainer_gstrs_attributeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __EfcContainer_gstrs_authenticator = OCT_STR(name='authenticator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_gstrs._cont = ASN1Dict([
        ('attributeList', __EfcContainer_gstrs_attributeList),
        ('authenticator', __EfcContainer_gstrs_authenticator),
        ])
    _EfcContainer_gstrs._ext = None
    _EfcContainer_sstrq = SEQ(name='sstrq', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SetStampedRq')))
    __EfcContainer_sstrq_attributeList = SEQ_OF(name='attributeList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    ___EfcContainer_sstrq_attributeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____EfcContainer_sstrq_attributeList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____EfcContainer_sstrq_attributeList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____EfcContainer_sstrq_attributeList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___EfcContainer_sstrq_attributeList__item_._cont = ASN1Dict([
        ('attributeId', ____EfcContainer_sstrq_attributeList__item__attributeId),
        ('attributeValue', ____EfcContainer_sstrq_attributeList__item__attributeValue),
        ])
    ___EfcContainer_sstrq_attributeList__item_._ext = None
    __EfcContainer_sstrq_attributeList._cont = ___EfcContainer_sstrq_attributeList__item_
    __EfcContainer_sstrq_attributeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __EfcContainer_sstrq_nonce = OCT_STR(name='nonce', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_sstrq_keyRef = INT(name='keyRef', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_sstrq_keyRef._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _EfcContainer_sstrq._cont = ASN1Dict([
        ('attributeList', __EfcContainer_sstrq_attributeList),
        ('nonce', __EfcContainer_sstrq_nonce),
        ('keyRef', __EfcContainer_sstrq_keyRef),
        ])
    _EfcContainer_sstrq._ext = None
    _EfcContainer_ginrq = SEQ(name='ginrq', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetInstanceRq')))
    _EfcContainer_ginrs = SEQ_OF(name='ginrs', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'GetInstanceRs')))
    __EfcContainer_ginrs__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___EfcContainer_ginrs__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EfcContainer_ginrs__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ___EfcContainer_ginrs__item__attributeValues = CHOICE(name='attributeValues', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    __EfcContainer_ginrs__item_._cont = ASN1Dict([
        ('attributeId', ___EfcContainer_ginrs__item__attributeId),
        ('attributeValues', ___EfcContainer_ginrs__item__attributeValues),
        ])
    __EfcContainer_ginrs__item_._ext = None
    _EfcContainer_ginrs._cont = __EfcContainer_ginrs__item_
    _EfcContainer_ginrs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _EfcContainer_sinrq = SEQ(name='sinrq', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SetInstanceRq')))
    __EfcContainer_sinrq_posOfInstance = INT(name='posOfInstance', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EfcContainer_sinrq_posOfInstance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    __EfcContainer_sinrq_attribute = SEQ(name='attribute', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ___EfcContainer_sinrq_attribute_attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EfcContainer_sinrq_attribute_attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ___EfcContainer_sinrq_attribute_attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    __EfcContainer_sinrq_attribute._cont = ASN1Dict([
        ('attributeId', ___EfcContainer_sinrq_attribute_attributeId),
        ('attributeValue', ___EfcContainer_sinrq_attribute_attributeValue),
        ])
    __EfcContainer_sinrq_attribute._ext = None
    _EfcContainer_sinrq._cont = ASN1Dict([
        ('posOfInstance', __EfcContainer_sinrq_posOfInstance),
        ('attribute', __EfcContainer_sinrq_attribute),
        ])
    _EfcContainer_sinrq._ext = None
    _EfcContainer_charq = SEQ(name='charq', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelRq')))
    _EfcContainer_chars = SEQ(name='chars', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ChannelRs')))
    _EfcContainer_cpprq = SEQ(name='cpprq', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CopyRq')))
    _EfcContainer_subrq = SEQ(name='subrq', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SubRq')))
    _EfcContainer_addrq = SEQ(name='addrq', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'AddRq')))
    _EfcContainer_debrq = SEQ(name='debrq', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DebitRq')))
    _EfcContainer_debrs = SEQ(name='debrs', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DebitRs')))
    _EfcContainer_crerq = SEQ(name='crerq', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CreditRq')))
    _EfcContainer_crers = SEQ(name='crers', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CreditRs')))
    _EfcContainer_efccontext = SEQ(name='efccontext', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EFC-ContextMark')))
    _EfcContainer_contser = INT(name='contser', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractSerialNumber')))
    _EfcContainer_contval = SEQ(name='contval', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractValidity')))
    _EfcContainer_contveh = SEQ(name='contveh', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractVehicle')))
    _EfcContainer_contauth = OCT_STR(name='contauth', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ContractAuthenticator')))
    _EfcContainer_recspt = SEQ(name='recspt', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptServicePart')))
    _EfcContainer_sessioncls = SEQ(name='sessioncls', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SessionClass')))
    _EfcContainer_recservserialno = INT(name='recservserialno', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptServiceSerialNumber')))
    _EfcContainer_recfinptENV = NULL(name='recfinptENV', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_reccont = SEQ(name='reccont', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptContract')))
    _EfcContainer_recOBUId = OCT_STR(name='recOBUId', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptOBUId')))
    _EfcContainer_recICCId = OCT_STR(name='recICCId', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptICC-Id')))
    _EfcContainer_rectext = OCT_STR(name='rectext', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptText')))
    _EfcContainer_recauth = OCT_STR(name='recauth', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptAuthenticator')))
    _EfcContainer_recdist = INT(name='recdist', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptDistance')))
    _EfcContainer_vehlpn = SEQ(name='vehlpn', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'LPN')))
    _EfcContainer_vehid = SEQ(name='vehid', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AVIAEINumberingAndDataStructures', 'CS5')))
    _EfcContainer_vehclass = INT(name='vehclass', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleClass')))
    _EfcContainer_vehdims = SEQ(name='vehdims', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleDimensions')))
    _EfcContainer_vehaxles = SEQ(name='vehaxles', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleAxles')))
    _EfcContainer_vehwtlims = SEQ(name='vehwtlims', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleWeightLimits')))
    _EfcContainer_vehwtladen = INT(name='vehwtladen', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleWeightLaden')))
    _EfcContainer_vehspchars = SEQ(name='vehspchars', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleSpecificCharacteristics')))
    _EfcContainer_vehauth = OCT_STR(name='vehauth', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleAuthenticator')))
    _EfcContainer_equOBUId = OCT_STR(name='equOBUId', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EquipmentOBUId')))
    _EfcContainer_equICCId = OCT_STR(name='equICCId', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ICC-Id')))
    _EfcContainer_equstat = BIT_STR(name='equstat', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'EquipmentStatus')))
    _EfcContainer_dvrchars = SEQ(name='dvrchars', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DriverCharacteristics')))
    _EfcContainer_paymeansENV = NULL(name='paymeansENV', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_paymbal = CHOICE(name='paymbal', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentMeansBalance')))
    _EfcContainer_paymunit = OCT_STR(name='paymunit', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentMeansUnit')))
    _EfcContainer_paysecdata = OCT_STR(name='paysecdata', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentSecurityData')))
    _EfcContainer_paymeans = SEQ(name='paymeans', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PaymentMeans')))
    _EfcContainer_recdata1 = SEQ(name='recdata1', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData1')))
    _EfcContainer_recdata2 = SEQ(name='recdata2', mode=MODE_TYPE, tag=(66, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptData2')))
    _EfcContainer_valofcon = SEQ(name='valofcon', mode=MODE_TYPE, tag=(67, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ValidityOfContract')))
    _EfcContainer_recfinpt = SEQ(name='recfinpt', mode=MODE_TYPE, tag=(68, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ReceiptFinancialPart')))
    _EfcContainer_setmmirq = INT(name='setmmirq', mode=MODE_TYPE, tag=(69, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SetMMIRq')))
    _EfcContainer_awl = SEQ(name='awl', mode=MODE_TYPE, tag=(70, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'AxleWeightLimits')))
    _EfcContainer_paca = SEQ(name='paca', mode=MODE_TYPE, tag=(71, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'PassengerCapacity')))
    _EfcContainer_eng = SEQ(name='eng', mode=MODE_TYPE, tag=(72, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'Engine')))
    _EfcContainer_sl = SEQ(name='sl', mode=MODE_TYPE, tag=(73, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'SoundLevel')))
    _EfcContainer_eev = SEQ(name='eev', mode=MODE_TYPE, tag=(74, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ExhaustEmissionValues')))
    _EfcContainer_dev = SEQ(name='dev', mode=MODE_TYPE, tag=(75, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'DieselEmissionValues')))
    _EfcContainer_co2ev = INT(name='co2ev', mode=MODE_TYPE, tag=(76, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'CO2EmissionValue')))
    _EfcContainer_vtd = INT(name='vtd', mode=MODE_TYPE, tag=(77, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'VehicleTotalDistance')))
    _EfcContainer_tlpn = SEQ(name='tlpn', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerLicencePlateNumber')))
    _EfcContainer_tch = SEQ(name='tch', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'TrailerCharacteristics')))
    _EfcContainer_anp = INT(name='anp', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcApplication', 'ActualNumberOfPassengers')))
    _EfcContainer_rfuCenISO48 = NULL(name='rfuCenISO48', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO49 = NULL(name='rfuCenISO49', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO50 = NULL(name='rfuCenISO50', mode=MODE_TYPE, tag=(83, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO51 = NULL(name='rfuCenISO51', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO52 = NULL(name='rfuCenISO52', mode=MODE_TYPE, tag=(85, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EfcContainer_rfuCenISO53 = NULL(name='rfuCenISO53', mode=MODE_TYPE, tag=(86, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EfcContainer._cont = ASN1Dict([
        ('integer', _EfcContainer_integer),
        ('bitstring', _EfcContainer_bitstring),
        ('octetstring', _EfcContainer_octetstring),
        ('universalString', _EfcContainer_universalString),
        ('beaconId', _EfcContainer_beaconId),
        ('t-apdu', _EfcContainer_t_apdu),
        ('dsrcApplicationEntityId', _EfcContainer_dsrcApplicationEntityId),
        ('dsrc-Ase-Id', _EfcContainer_dsrc_Ase_Id),
        ('attrIdList', _EfcContainer_attrIdList),
        ('attrList', _EfcContainer_attrList),
        ('broadcastPool', _EfcContainer_broadcastPool),
        ('directory', _EfcContainer_directory),
        ('file', _EfcContainer_file),
        ('fileType', _EfcContainer_fileType),
        ('record', _EfcContainer_record),
        ('time', _EfcContainer_time),
        ('vector', _EfcContainer_vector),
        ('gstrq', _EfcContainer_gstrq),
        ('gstrs', _EfcContainer_gstrs),
        ('sstrq', _EfcContainer_sstrq),
        ('ginrq', _EfcContainer_ginrq),
        ('ginrs', _EfcContainer_ginrs),
        ('sinrq', _EfcContainer_sinrq),
        ('charq', _EfcContainer_charq),
        ('chars', _EfcContainer_chars),
        ('cpprq', _EfcContainer_cpprq),
        ('subrq', _EfcContainer_subrq),
        ('addrq', _EfcContainer_addrq),
        ('debrq', _EfcContainer_debrq),
        ('debrs', _EfcContainer_debrs),
        ('crerq', _EfcContainer_crerq),
        ('crers', _EfcContainer_crers),
        ('efccontext', _EfcContainer_efccontext),
        ('contser', _EfcContainer_contser),
        ('contval', _EfcContainer_contval),
        ('contveh', _EfcContainer_contveh),
        ('contauth', _EfcContainer_contauth),
        ('recspt', _EfcContainer_recspt),
        ('sessioncls', _EfcContainer_sessioncls),
        ('recservserialno', _EfcContainer_recservserialno),
        ('recfinptENV', _EfcContainer_recfinptENV),
        ('reccont', _EfcContainer_reccont),
        ('recOBUId', _EfcContainer_recOBUId),
        ('recICCId', _EfcContainer_recICCId),
        ('rectext', _EfcContainer_rectext),
        ('recauth', _EfcContainer_recauth),
        ('recdist', _EfcContainer_recdist),
        ('vehlpn', _EfcContainer_vehlpn),
        ('vehid', _EfcContainer_vehid),
        ('vehclass', _EfcContainer_vehclass),
        ('vehdims', _EfcContainer_vehdims),
        ('vehaxles', _EfcContainer_vehaxles),
        ('vehwtlims', _EfcContainer_vehwtlims),
        ('vehwtladen', _EfcContainer_vehwtladen),
        ('vehspchars', _EfcContainer_vehspchars),
        ('vehauth', _EfcContainer_vehauth),
        ('equOBUId', _EfcContainer_equOBUId),
        ('equICCId', _EfcContainer_equICCId),
        ('equstat', _EfcContainer_equstat),
        ('dvrchars', _EfcContainer_dvrchars),
        ('paymeansENV', _EfcContainer_paymeansENV),
        ('paymbal', _EfcContainer_paymbal),
        ('paymunit', _EfcContainer_paymunit),
        ('paysecdata', _EfcContainer_paysecdata),
        ('paymeans', _EfcContainer_paymeans),
        ('recdata1', _EfcContainer_recdata1),
        ('recdata2', _EfcContainer_recdata2),
        ('valofcon', _EfcContainer_valofcon),
        ('recfinpt', _EfcContainer_recfinpt),
        ('setmmirq', _EfcContainer_setmmirq),
        ('awl', _EfcContainer_awl),
        ('paca', _EfcContainer_paca),
        ('eng', _EfcContainer_eng),
        ('sl', _EfcContainer_sl),
        ('eev', _EfcContainer_eev),
        ('dev', _EfcContainer_dev),
        ('co2ev', _EfcContainer_co2ev),
        ('vtd', _EfcContainer_vtd),
        ('tlpn', _EfcContainer_tlpn),
        ('tch', _EfcContainer_tch),
        ('anp', _EfcContainer_anp),
        ('rfuCenISO48', _EfcContainer_rfuCenISO48),
        ('rfuCenISO49', _EfcContainer_rfuCenISO49),
        ('rfuCenISO50', _EfcContainer_rfuCenISO50),
        ('rfuCenISO51', _EfcContainer_rfuCenISO51),
        ('rfuCenISO52', _EfcContainer_rfuCenISO52),
        ('rfuCenISO53', _EfcContainer_rfuCenISO53),
        ])
    EfcContainer._ext = []
    
    #-----< FileType >-----#
    FileType = NULL(name='FileType', mode=MODE_TYPE)
    
    #-----< Directory >-----#
    Directory = SEQ_OF(name='Directory', mode=MODE_TYPE)
    _Directory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'FileName')))
    Directory._cont = _Directory__item_
    Directory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Dsrc-EID >-----#
    Dsrc_EID = INT(name='Dsrc-EID', mode=MODE_TYPE)
    Dsrc_EID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< DSRCApplicationEntityID >-----#
    DSRCApplicationEntityID = INT(name='DSRCApplicationEntityID', mode=MODE_TYPE)
    DSRCApplicationEntityID._cont = ASN1Dict([('system', 0), ('electronic-fee-collection', 1), ('freight-fleet-management', 2), ('public-transport', 3), ('traffic-traveller-information', 4), ('traffic-control', 5), ('parking-management', 6), ('geographic-road-database', 7), ('medium-range-preinformation', 8), ('man-machine-interface', 9), ('intersystem-interface', 10), ('automatic-vehicle-identification', 11), ('emergency-warning', 12), ('private', 13), ('multi-purpose-payment', 14), ('dsrc-resource-manager', 15), ('after-theft-systems', 16), ('ccc', 20), ('lac', 21)])
    DSRCApplicationEntityID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=[], er=[])
    
    #-----< Event-Report-Request >-----#
    Event_Report_Request = SEQ(name='Event-Report-Request', mode=MODE_TYPE, param=True)
    
    #-----< Event-Report-Response >-----#
    Event_Report_Response = SEQ(name='Event-Report-Response', mode=MODE_TYPE)
    _Event_Report_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Event_Report_Response_fill._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Event_Report_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _Event_Report_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _Event_Report_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    Event_Report_Response._cont = ASN1Dict([
        ('fill', _Event_Report_Response_fill),
        ('eid', _Event_Report_Response_eid),
        ('iid', _Event_Report_Response_iid),
        ('ret', _Event_Report_Response_ret),
        ])
    Event_Report_Response._ext = None
    
    #-----< EventType >-----#
    EventType = INT(name='EventType', mode=MODE_TYPE)
    EventType._cont = ASN1Dict([('release', 0)])
    EventType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< File >-----#
    File = SEQ_OF(name='File', mode=MODE_TYPE)
    _File__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Record')))
    File._cont = _File__item_
    File._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< FileName >-----#
    FileName = SEQ(name='FileName', mode=MODE_TYPE)
    _FileName_aseID = INT(name='aseID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _FileName_fileID = INT(name='fileID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FileName_fileID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    FileName._cont = ASN1Dict([
        ('aseID', _FileName_aseID),
        ('fileID', _FileName_fileID),
        ])
    FileName._ext = None
    
    #-----< Get-Request >-----#
    Get_Request = SEQ(name='Get-Request', mode=MODE_TYPE)
    _Get_Request_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Get_Request_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Get_Request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _Get_Request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Get_Request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    _Get_Request_iid = INT(name='iid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _Get_Request_attrIdList = SEQ_OF(name='attrIdList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeIdList')), opt=True)
    Get_Request._cont = ASN1Dict([
        ('fill', _Get_Request_fill),
        ('eid', _Get_Request_eid),
        ('accessCredentials', _Get_Request_accessCredentials),
        ('iid', _Get_Request_iid),
        ('attrIdList', _Get_Request_attrIdList),
        ])
    Get_Request._ext = None
    
    #-----< Get-Response >-----#
    Get_Response = SEQ(name='Get-Response', mode=MODE_TYPE, param=True)
    
    #-----< Initialisation-Request >-----#
    Initialisation_Request = SEQ(name='Initialisation-Request', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'BST')))
    
    #-----< Initialisation-Response >-----#
    Initialisation_Response = SEQ(name='Initialisation-Response', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'VST')))
    
    #-----< ObeConfiguration >-----#
    ObeConfiguration = SEQ(name='ObeConfiguration', mode=MODE_TYPE)
    _ObeConfiguration_equipmentClass = INT(name='equipmentClass', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ObeConfiguration_equipmentClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    _ObeConfiguration_manufacturerID = INT(name='manufacturerID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ObeConfiguration_manufacturerID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ObeConfiguration_obeStatus = INT(name='obeStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ObeConfiguration_obeStatus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    ObeConfiguration._cont = ASN1Dict([
        ('equipmentClass', _ObeConfiguration_equipmentClass),
        ('manufacturerID', _ObeConfiguration_manufacturerID),
        ('obeStatus', _ObeConfiguration_obeStatus),
        ])
    ObeConfiguration._ext = None
    
    #-----< Profile >-----#
    Profile = INT(name='Profile', mode=MODE_TYPE)
    Profile._cont = ASN1Dict([('profile0', 0), ('profile1', 1)])
    Profile._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Record >-----#
    Record = CHOICE(name='Record', mode=MODE_TYPE)
    _Record_simple = STR_VIS(name='simple', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    Record._cont = ASN1Dict([
        ('simple', _Record_simple),
        ])
    Record._ext = []
    
    #-----< ReturnStatus >-----#
    ReturnStatus = INT(name='ReturnStatus', mode=MODE_TYPE)
    ReturnStatus._cont = ASN1Dict([('noError', 0), ('accessDenied', 1), ('argumentError', 2), ('complexityLimitation', 3), ('processingFailure', 4), ('processing', 5), ('chainingError', 6)])
    ReturnStatus._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    
    #-----< Set-Request >-----#
    Set_Request = SEQ(name='Set-Request', mode=MODE_TYPE, param=True)
    
    #-----< Set-Response >-----#
    Set_Response = SEQ(name='Set-Response', mode=MODE_TYPE)
    _Set_Response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Set_Response_fill._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Set_Response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    _Set_Response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _Set_Response_ret = INT(name='ret', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    Set_Response._cont = ASN1Dict([
        ('fill', _Set_Response_fill),
        ('eid', _Set_Response_eid),
        ('iid', _Set_Response_iid),
        ('ret', _Set_Response_ret),
        ])
    Set_Response._ext = None
    
    #-----< Time >-----#
    Time = INT(name='Time', mode=MODE_TYPE)
    Time._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< T-APDUs-Generic >-----#
    T_APDUs_Generic = CHOICE(name='T-APDUs-Generic', mode=MODE_TYPE, param=True)
    
    #-----< T-APDUs >-----#
    T_APDUs = CHOICE(name='T-APDUs', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'T-APDUs-Generic')))
    _T_APDUs_action_request = SEQ(name='action-request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Action-Request')))
    __T_APDUs_action_request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_action_request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_action_request_actionType = INT(name='actionType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ActionType')))
    __T_APDUs_action_request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __T_APDUs_action_request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_action_request_actionParameter = CHOICE(name='actionParameter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')), opt=True)
    __T_APDUs_action_request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _T_APDUs_action_request._cont = ASN1Dict([
        ('mode', __T_APDUs_action_request_mode),
        ('eid', __T_APDUs_action_request_eid),
        ('actionType', __T_APDUs_action_request_actionType),
        ('accessCredentials', __T_APDUs_action_request_accessCredentials),
        ('actionParameter', __T_APDUs_action_request_actionParameter),
        ('iid', __T_APDUs_action_request_iid),
        ])
    _T_APDUs_action_request._ext = None
    _T_APDUs_action_response = SEQ(name='action-response', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Action-Response')))
    __T_APDUs_action_response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_action_response_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    __T_APDUs_action_response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_action_response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    __T_APDUs_action_response_responseParameter = CHOICE(name='responseParameter', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')), opt=True)
    __T_APDUs_action_response_ret = INT(name='ret', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    _T_APDUs_action_response._cont = ASN1Dict([
        ('fill', __T_APDUs_action_response_fill),
        ('eid', __T_APDUs_action_response_eid),
        ('iid', __T_APDUs_action_response_iid),
        ('responseParameter', __T_APDUs_action_response_responseParameter),
        ('ret', __T_APDUs_action_response_ret),
        ])
    _T_APDUs_action_response._ext = None
    _T_APDUs_event_report_request = SEQ(name='event-report-request', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Event-Report-Request')))
    __T_APDUs_event_report_request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_event_report_request_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_event_report_request_eventType = INT(name='eventType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EventType')))
    __T_APDUs_event_report_request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __T_APDUs_event_report_request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_event_report_request_eventParameter = CHOICE(name='eventParameter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')), opt=True)
    __T_APDUs_event_report_request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _T_APDUs_event_report_request._cont = ASN1Dict([
        ('mode', __T_APDUs_event_report_request_mode),
        ('eid', __T_APDUs_event_report_request_eid),
        ('eventType', __T_APDUs_event_report_request_eventType),
        ('accessCredentials', __T_APDUs_event_report_request_accessCredentials),
        ('eventParameter', __T_APDUs_event_report_request_eventParameter),
        ('iid', __T_APDUs_event_report_request_iid),
        ])
    _T_APDUs_event_report_request._ext = None
    _T_APDUs_event_report_response = SEQ(name='event-report-response', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Event-Report-Response')))
    _T_APDUs_set_request = SEQ(name='set-request', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Set-Request')))
    __T_APDUs_set_request_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_set_request_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    __T_APDUs_set_request_mode = BOOL(name='mode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_set_request_eid = INT(name='eid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_set_request_accessCredentials = OCT_STR(name='accessCredentials', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __T_APDUs_set_request_accessCredentials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_set_request_attrList = SEQ_OF(name='attrList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')))
    ___T_APDUs_set_request_attrList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____T_APDUs_set_request_attrList__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____T_APDUs_set_request_attrList__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____T_APDUs_set_request_attrList__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___T_APDUs_set_request_attrList__item_._cont = ASN1Dict([
        ('attributeId', ____T_APDUs_set_request_attrList__item__attributeId),
        ('attributeValue', ____T_APDUs_set_request_attrList__item__attributeValue),
        ])
    ___T_APDUs_set_request_attrList__item_._ext = None
    __T_APDUs_set_request_attrList._cont = ___T_APDUs_set_request_attrList__item_
    __T_APDUs_set_request_attrList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_set_request_iid = INT(name='iid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    _T_APDUs_set_request._cont = ASN1Dict([
        ('fill', __T_APDUs_set_request_fill),
        ('mode', __T_APDUs_set_request_mode),
        ('eid', __T_APDUs_set_request_eid),
        ('accessCredentials', __T_APDUs_set_request_accessCredentials),
        ('attrList', __T_APDUs_set_request_attrList),
        ('iid', __T_APDUs_set_request_iid),
        ])
    _T_APDUs_set_request._ext = None
    _T_APDUs_set_response = SEQ(name='set-response', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Set-Response')))
    _T_APDUs_get_request = SEQ(name='get-request', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Get-Request')))
    _T_APDUs_get_response = SEQ(name='get-response', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Get-Response')))
    __T_APDUs_get_response_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __T_APDUs_get_response_fill._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    __T_APDUs_get_response_eid = INT(name='eid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')))
    __T_APDUs_get_response_iid = INT(name='iid', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Dsrc-EID')), opt=True)
    __T_APDUs_get_response_attributelist = SEQ_OF(name='attributelist', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'AttributeList')), opt=True)
    ___T_APDUs_get_response_attributelist__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('EfcDsrcGeneric', 'Attributes')))
    ____T_APDUs_get_response_attributelist__item__attributeId = INT(name='attributeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____T_APDUs_get_response_attributelist__item__attributeId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    ____T_APDUs_get_response_attributelist__item__attributeValue = CHOICE(name='attributeValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'EfcContainer')))
    ___T_APDUs_get_response_attributelist__item_._cont = ASN1Dict([
        ('attributeId', ____T_APDUs_get_response_attributelist__item__attributeId),
        ('attributeValue', ____T_APDUs_get_response_attributelist__item__attributeValue),
        ])
    ___T_APDUs_get_response_attributelist__item_._ext = None
    __T_APDUs_get_response_attributelist._cont = ___T_APDUs_get_response_attributelist__item_
    __T_APDUs_get_response_attributelist._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=[], er=[])
    __T_APDUs_get_response_ret = INT(name='ret', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ReturnStatus')), opt=True)
    _T_APDUs_get_response._cont = ASN1Dict([
        ('fill', __T_APDUs_get_response_fill),
        ('eid', __T_APDUs_get_response_eid),
        ('iid', __T_APDUs_get_response_iid),
        ('attributelist', __T_APDUs_get_response_attributelist),
        ('ret', __T_APDUs_get_response_ret),
        ])
    _T_APDUs_get_response._ext = None
    _T_APDUs_initialisation_request = SEQ(name='initialisation-request', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Initialisation-Request')))
    _T_APDUs_initialisation_response = SEQ(name='initialisation-response', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Initialisation-Response')))
    T_APDUs._cont = ASN1Dict([
        ('action-request', _T_APDUs_action_request),
        ('action-response', _T_APDUs_action_response),
        ('event-report-request', _T_APDUs_event_report_request),
        ('event-report-response', _T_APDUs_event_report_response),
        ('set-request', _T_APDUs_set_request),
        ('set-response', _T_APDUs_set_response),
        ('get-request', _T_APDUs_get_request),
        ('get-response', _T_APDUs_get_response),
        ('initialisation-request', _T_APDUs_initialisation_request),
        ('initialisation-response', _T_APDUs_initialisation_response),
        ])
    T_APDUs._ext = None
    
    #-----< VST >-----#
    VST = SEQ(name='VST', mode=MODE_TYPE)
    _VST_fill = BIT_STR(name='fill', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VST_fill._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _VST_profile = INT(name='profile', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'Profile')))
    _VST_applications = SEQ_OF(name='applications', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ApplicationList')))
    _VST_obeConfiguration = SEQ(name='obeConfiguration', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('EfcDsrcGeneric', 'ObeConfiguration')))
    VST._cont = ASN1Dict([
        ('fill', _VST_fill),
        ('profile', _VST_profile),
        ('applications', _VST_applications),
        ('obeConfiguration', _VST_obeConfiguration),
        ])
    VST._ext = None
    
    _all_ = [
        ActionType,
        ApplicationContextMark,
        __ApplicationList__item__aid,
        __ApplicationList__item__eid,
        __ApplicationList__item__parameter,
        _ApplicationList__item_,
        ApplicationList,
        _AttributeIdList__item_,
        AttributeIdList,
        _BeaconID_manufacturerid,
        _BeaconID_individualid,
        BeaconID,
        _BroadcastPool_directoryvalue,
        __BroadcastPool_content__item_,
        _BroadcastPool_content,
        BroadcastPool,
        _BST_rsu,
        _BST_time,
        _BST_profile,
        _BST_mandApplications,
        _BST_nonmandApplications,
        __BST_profileList__item_,
        _BST_profileList,
        BST,
        _EfcContainer_integer,
        _EfcContainer_bitstring,
        _EfcContainer_octetstring,
        _EfcContainer_universalString,
        _EfcContainer_beaconId,
        _EfcContainer_t_apdu,
        _EfcContainer_dsrcApplicationEntityId,
        _EfcContainer_dsrc_Ase_Id,
        _EfcContainer_attrIdList,
        ___EfcContainer_attrList__item__attributeId,
        ___EfcContainer_attrList__item__attributeValue,
        __EfcContainer_attrList__item_,
        _EfcContainer_attrList,
        _EfcContainer_broadcastPool,
        _EfcContainer_directory,
        _EfcContainer_file,
        _EfcContainer_fileType,
        _EfcContainer_record,
        _EfcContainer_time,
        __EfcContainer_vector__item_,
        _EfcContainer_vector,
        _EfcContainer_gstrq,
        ____EfcContainer_gstrs_attributeList__item__attributeId,
        ____EfcContainer_gstrs_attributeList__item__attributeValue,
        ___EfcContainer_gstrs_attributeList__item_,
        __EfcContainer_gstrs_attributeList,
        __EfcContainer_gstrs_authenticator,
        _EfcContainer_gstrs,
        ____EfcContainer_sstrq_attributeList__item__attributeId,
        ____EfcContainer_sstrq_attributeList__item__attributeValue,
        ___EfcContainer_sstrq_attributeList__item_,
        __EfcContainer_sstrq_attributeList,
        __EfcContainer_sstrq_nonce,
        __EfcContainer_sstrq_keyRef,
        _EfcContainer_sstrq,
        _EfcContainer_ginrq,
        ___EfcContainer_ginrs__item__attributeId,
        ___EfcContainer_ginrs__item__attributeValues,
        __EfcContainer_ginrs__item_,
        _EfcContainer_ginrs,
        __EfcContainer_sinrq_posOfInstance,
        ___EfcContainer_sinrq_attribute_attributeId,
        ___EfcContainer_sinrq_attribute_attributeValue,
        __EfcContainer_sinrq_attribute,
        _EfcContainer_sinrq,
        _EfcContainer_charq,
        _EfcContainer_chars,
        _EfcContainer_cpprq,
        _EfcContainer_subrq,
        _EfcContainer_addrq,
        _EfcContainer_debrq,
        _EfcContainer_debrs,
        _EfcContainer_crerq,
        _EfcContainer_crers,
        _EfcContainer_efccontext,
        _EfcContainer_contser,
        _EfcContainer_contval,
        _EfcContainer_contveh,
        _EfcContainer_contauth,
        _EfcContainer_recspt,
        _EfcContainer_sessioncls,
        _EfcContainer_recservserialno,
        _EfcContainer_recfinptENV,
        _EfcContainer_reccont,
        _EfcContainer_recOBUId,
        _EfcContainer_recICCId,
        _EfcContainer_rectext,
        _EfcContainer_recauth,
        _EfcContainer_recdist,
        _EfcContainer_vehlpn,
        _EfcContainer_vehid,
        _EfcContainer_vehclass,
        _EfcContainer_vehdims,
        _EfcContainer_vehaxles,
        _EfcContainer_vehwtlims,
        _EfcContainer_vehwtladen,
        _EfcContainer_vehspchars,
        _EfcContainer_vehauth,
        _EfcContainer_equOBUId,
        _EfcContainer_equICCId,
        _EfcContainer_equstat,
        _EfcContainer_dvrchars,
        _EfcContainer_paymeansENV,
        _EfcContainer_paymbal,
        _EfcContainer_paymunit,
        _EfcContainer_paysecdata,
        _EfcContainer_paymeans,
        _EfcContainer_recdata1,
        _EfcContainer_recdata2,
        _EfcContainer_valofcon,
        _EfcContainer_recfinpt,
        _EfcContainer_setmmirq,
        _EfcContainer_awl,
        _EfcContainer_paca,
        _EfcContainer_eng,
        _EfcContainer_sl,
        _EfcContainer_eev,
        _EfcContainer_dev,
        _EfcContainer_co2ev,
        _EfcContainer_vtd,
        _EfcContainer_tlpn,
        _EfcContainer_tch,
        _EfcContainer_anp,
        _EfcContainer_rfuCenISO48,
        _EfcContainer_rfuCenISO49,
        _EfcContainer_rfuCenISO50,
        _EfcContainer_rfuCenISO51,
        _EfcContainer_rfuCenISO52,
        _EfcContainer_rfuCenISO53,
        EfcContainer,
        FileType,
        _Directory__item_,
        Directory,
        Dsrc_EID,
        DSRCApplicationEntityID,
        _Event_Report_Response_fill,
        _Event_Report_Response_eid,
        _Event_Report_Response_iid,
        _Event_Report_Response_ret,
        Event_Report_Response,
        EventType,
        _File__item_,
        File,
        _FileName_aseID,
        _FileName_fileID,
        FileName,
        _Get_Request_fill,
        _Get_Request_eid,
        _Get_Request_accessCredentials,
        _Get_Request_iid,
        _Get_Request_attrIdList,
        Get_Request,
        Initialisation_Request,
        Initialisation_Response,
        _ObeConfiguration_equipmentClass,
        _ObeConfiguration_manufacturerID,
        _ObeConfiguration_obeStatus,
        ObeConfiguration,
        Profile,
        _Record_simple,
        Record,
        ReturnStatus,
        _Set_Response_fill,
        _Set_Response_eid,
        _Set_Response_iid,
        _Set_Response_ret,
        Set_Response,
        Time,
        __T_APDUs_action_request_mode,
        __T_APDUs_action_request_eid,
        __T_APDUs_action_request_actionType,
        __T_APDUs_action_request_accessCredentials,
        __T_APDUs_action_request_actionParameter,
        __T_APDUs_action_request_iid,
        _T_APDUs_action_request,
        __T_APDUs_action_response_fill,
        __T_APDUs_action_response_eid,
        __T_APDUs_action_response_iid,
        __T_APDUs_action_response_responseParameter,
        __T_APDUs_action_response_ret,
        _T_APDUs_action_response,
        __T_APDUs_event_report_request_mode,
        __T_APDUs_event_report_request_eid,
        __T_APDUs_event_report_request_eventType,
        __T_APDUs_event_report_request_accessCredentials,
        __T_APDUs_event_report_request_eventParameter,
        __T_APDUs_event_report_request_iid,
        _T_APDUs_event_report_request,
        _T_APDUs_event_report_response,
        __T_APDUs_set_request_fill,
        __T_APDUs_set_request_mode,
        __T_APDUs_set_request_eid,
        __T_APDUs_set_request_accessCredentials,
        ____T_APDUs_set_request_attrList__item__attributeId,
        ____T_APDUs_set_request_attrList__item__attributeValue,
        ___T_APDUs_set_request_attrList__item_,
        __T_APDUs_set_request_attrList,
        __T_APDUs_set_request_iid,
        _T_APDUs_set_request,
        _T_APDUs_set_response,
        _T_APDUs_get_request,
        __T_APDUs_get_response_fill,
        __T_APDUs_get_response_eid,
        __T_APDUs_get_response_iid,
        ____T_APDUs_get_response_attributelist__item__attributeId,
        ____T_APDUs_get_response_attributelist__item__attributeValue,
        ___T_APDUs_get_response_attributelist__item_,
        __T_APDUs_get_response_attributelist,
        __T_APDUs_get_response_ret,
        _T_APDUs_get_response,
        _T_APDUs_initialisation_request,
        _T_APDUs_initialisation_response,
        T_APDUs,
        _VST_fill,
        _VST_profile,
        _VST_applications,
        _VST_obeConfiguration,
        VST,
    ]

init_modules(EfcDataDictionary, AVIAEINumberingAndDataStructures, EfcDsrcApplication, EfcDsrcGeneric)
